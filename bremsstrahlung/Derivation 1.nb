(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    437306,       8562]
NotebookOptionsPosition[    433140,       8487]
NotebookOutlinePosition[    433563,       8504]
CellTagsIndexPosition[    433520,       8501]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Partial integrations", "Section",
 CellChangeTimes->{{3.7017558119816885`*^9, 3.701755815430575*^9}, {
   3.7051739233050485`*^9, 3.7051739235850487`*^9}, {3.7059172194988327`*^9, 
   3.705917257057094*^9}, {3.705917720596261*^9, 3.7059177349139347`*^9}, 
   3.70591820760131*^9, 3.705920033112227*^9, {3.7098521718543997`*^9, 
   3.709852235658512*^9}, {3.7099988333897*^9, 3.709998841387336*^9}, {
   3.7103644584929233`*^9, 3.7103644600217257`*^9}, {3.7103645042186036`*^9, 
   3.710364506106207*^9}, {3.710445956207261*^9, 3.7104459587032657`*^9}, {
   3.7104581319186974`*^9, 3.710458136817978*^9}, {3.7104975259703817`*^9, 
   3.7104975558260098`*^9}, {3.7105116763151827`*^9, 3.71051167642762*^9}, {
   3.710683811584429*^9, 3.7106838528777905`*^9}, 3.710683891429996*^9, {
   3.7110708295202055`*^9, 3.71107083589657*^9}, {3.711148610396487*^9, 
   3.7111486183195086`*^9}},ExpressionUUID->"81c13ed6-d7f9-48f0-b089-\
fd886af5a8ea"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"Log", "[", "y", "]"}], ",", "y"}], "]"}], 
    RowBox[{"Exp", "[", 
     RowBox[{"m", " ", "x"}], "]"}], 
    RowBox[{"ArcTan", "[", 
     SqrtBox[
      FractionBox[
       RowBox[{"\[Alpha]", "-", 
        RowBox[{"2", 
         RowBox[{"Cosh", "[", "x", "]"}]}]}], 
       RowBox[{"\[Beta]", "+", 
        RowBox[{"2", 
         RowBox[{"Cosh", "[", "x", "]"}]}]}]]], "]"}]}], "/.", 
   RowBox[{"x", "\[Rule]", 
    RowBox[{"Log", "[", "y", "]"}]}]}], "//", 
  "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Integrate", "[", 
      RowBox[{
       SuperscriptBox["y", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "m"}]], " ", ",", "y"}], "]"}]}], 
    RowBox[{"D", "[", 
     RowBox[{
      RowBox[{"ArcTan", "[", 
       SqrtBox[
        RowBox[{"-", 
         FractionBox[
          RowBox[{"1", "+", 
           SuperscriptBox["y", "2"], "-", 
           RowBox[{"y", " ", "\[Alpha]"}]}], 
          RowBox[{"1", "+", 
           SuperscriptBox["y", "2"], "+", 
           RowBox[{"y", " ", "\[Beta]"}]}]]}]], "]"}], ",", "y"}], "]"}]}], 
   ")"}], "//", "Simplify"}]}], "Input",
 CellChangeTimes->{{3.710528431690893*^9, 3.710528534646782*^9}, {
  3.7105351034419947`*^9, 3.7105351039510236`*^9}, {3.710536369800426*^9, 
  3.7105363703114552`*^9}},ExpressionUUID->"f28e9365-2a11-4849-b9a3-\
62788d5f4b6c"],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["y", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "m"}]], " ", 
  RowBox[{"ArcTan", "[", 
   SqrtBox[
    RowBox[{"-", 
     FractionBox[
      RowBox[{"1", "+", 
       SuperscriptBox["y", "2"], "-", 
       RowBox[{"y", " ", "\[Alpha]"}]}], 
      RowBox[{"1", "+", 
       SuperscriptBox["y", "2"], "+", 
       RowBox[{"y", " ", "\[Beta]"}]}]]}]], "]"}]}]], "Output",
 CellChangeTimes->{{3.710528485330961*^9, 3.7105285352488165`*^9}, 
   3.710535105862133*^9, 3.7105363708334846`*^9, 3.711132722172723*^9, 
   3.711132933460808*^9, 
   3.711147131318535*^9},ExpressionUUID->"3638ca21-fa93-4f58-8c35-\
9c54d7633dee"],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["y", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "m"}]], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", 
     SuperscriptBox["y", "2"]}], ")"}]}], 
  RowBox[{"2", " ", "m", " ", 
   SqrtBox[
    RowBox[{"-", 
     FractionBox[
      RowBox[{"1", "+", 
       SuperscriptBox["y", "2"], "-", 
       RowBox[{"y", " ", "\[Alpha]"}]}], 
      RowBox[{"1", "+", 
       SuperscriptBox["y", "2"], "+", 
       RowBox[{"y", " ", "\[Beta]"}]}]]}]], " ", 
   RowBox[{"(", 
    RowBox[{"1", "+", 
     SuperscriptBox["y", "2"], "+", 
     RowBox[{"y", " ", "\[Beta]"}]}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.710528485330961*^9, 3.7105285352488165`*^9}, 
   3.710535105862133*^9, 3.7105363708334846`*^9, 3.711132722172723*^9, 
   3.711132933460808*^9, 
   3.7111471314205365`*^9},ExpressionUUID->"b05e7e1c-fca2-498c-80b0-\
cc49cda9be81"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Check integrals numerically", "Section",
 CellChangeTimes->{{3.7017558119816885`*^9, 3.701755815430575*^9}, {
   3.7051739233050485`*^9, 3.7051739235850487`*^9}, {3.7059172194988327`*^9, 
   3.705917257057094*^9}, {3.705917720596261*^9, 3.7059177349139347`*^9}, 
   3.70591820760131*^9, 3.705920033112227*^9, {3.7098521718543997`*^9, 
   3.709852235658512*^9}, {3.7099988333897*^9, 3.709998841387336*^9}, {
   3.7103644584929233`*^9, 3.7103644600217257`*^9}, {3.7103645042186036`*^9, 
   3.710364506106207*^9}, {3.710445956207261*^9, 3.7104459587032657`*^9}, {
   3.7104581319186974`*^9, 3.710458136817978*^9}, {3.7104975259703817`*^9, 
   3.7104975558260098`*^9}, {3.7105116763151827`*^9, 3.71051167642762*^9}, {
   3.710683811584429*^9, 3.7106838528777905`*^9}, 3.710683891429996*^9, {
   3.7110708295202055`*^9, 3.71107083589657*^9}, {3.711148610396487*^9, 
   3.711148638864607*^9}},ExpressionUUID->"74be91bc-28a9-4aa3-a5e5-\
7d13e7d0bc6f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", 
   RowBox[{
   "a", ",", "b", ",", "\[Alpha]", ",", "\[Beta]", ",", "\[Kappa]", ",", 
    "\[Lambda]", ",", "m"}], "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"m", "=", "2"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Lambda]", "=", "1"}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"\[Alpha]", "=", 
   RowBox[{"2", "+", 
    RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"\[Beta]", "=", 
    RowBox[{"2", "-", 
     RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"a", "=", 
   FractionBox[
    RowBox[{"\[Alpha]", "+", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Alpha]", "2"], "-", "4"}]]}], "2"]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"b", "=", 
   FractionBox[
    RowBox[{"\[Beta]", "+", 
     SqrtBox[
      RowBox[{
       SuperscriptBox["\[Beta]", "2"], "-", "4"}]]}], "2"]}], ";"}]}], "Input",
 CellChangeTimes->{{3.710719634026903*^9, 3.710720064479684*^9}, {
  3.7107202220917606`*^9, 
  3.7107202226845617`*^9}},ExpressionUUID->"2333d987-7c76-4312-93ce-\
7d46f737cd4b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"Conjugate", "[", "a", "]"}], "b"], ",", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]", ",", "0", ",", "10"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{
  3.710720023794812*^9, {3.7111323089690895`*^9, 
   3.7111323354866056`*^9}},ExpressionUUID->"f7d874b6-c9b8-419e-878f-\
d1dbc10358c2"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpduOAQw+2LPffqT+Vn6nPYy/8NT8wtfy
J+H8des7b+fo3YLz0+0vznxT9BjOz3uq+XjLupdwPpdii/p9iw9wfp/Aaa2F
CZ/h/KTbIfuZz3yD8wuPtiTlq/+C8zcW8ARLeP5FuKc6+5VBOIMDjN80/0/g
lzeMcD7D5QcOe6qY4Xy1krSKEC1WOP/J1+lh3HvZ4Hyvp1m1kwo54Hy/JxO0
5eS44PxXh5MaTqzlhvP1BK/JOsfzwvlc9l8T73zmg/Pd30Z9VwoVcPgPBu/t
bxxKYYzSEYTzt3YciVP4KghXn8Za+uDcOSG4fHJR9VaeWcJwef107XM+iSJw
+fNCOtyllqJw/u51TbN1mMXg6qsZtQLO3EXwue5UeeRtEYfzny5TnDK/RgLO
n6IhybIzVBLOnzAr7XiighScHzUl9hzPcwT/h8vSn/P3ScP5j586VRxql3Fg
hPIX2RpKn02UhcuvbS0VTNeVg/PbQ5O9mb8i+KZ3Fq5sPysP58/QnL32rLcC
3H/1B3pneO9UgMv7SocuPaWiCOc75h2PFuxE8OfLJKmc+YrgqxxePs0vWgnh
P91DWpf2Ifhpn1kuntRShvOTNn5S6OxXhts/4RJP75HjCP6+z2o///9HqAcA
GU0jMg==
       "]]},
     Annotation[#, "Charting`Private`Tag$361#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9999999999999999},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {0.9999999999999999, 1.0000000000000002`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.7107200241848125`*^9, {3.7107200597996755`*^9, 3.71072006795849*^9}, 
   3.710720224338165*^9, 3.710726469935526*^9, 3.7107276962911024`*^9, 
   3.710727807610902*^9, {3.7111323188346534`*^9, 3.711132333061467*^9}, 
   3.7111327425928907`*^9, 3.711132934248853*^9, 
   3.7111471321805377`*^9},ExpressionUUID->"70546341-c14c-430e-ad42-\
4bb1179f0718"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"Log", "[", "a", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]", ",", "0", ",", "10"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Im", "[", 
    RowBox[{"Log", "[", "a", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]", ",", "0", ",", "10"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["\[ImaginaryI]", 
       RowBox[{"2", 
        SuperscriptBox["\[Pi]", "2"], "\[Lambda]"}]]}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"m", " ", "x"}], "]"}], 
       RowBox[{"ArcTan", "[", 
        SqrtBox[
         FractionBox[
          RowBox[{"\[Alpha]", "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cosh", "[", "x", "]"}]}]}], 
          RowBox[{"\[Beta]", "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cosh", "[", "x", "]"}]}]}]]], "]"}]}], ")"}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]", ",", "0", ",", "10"}], "}"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot3D", "[", 
  RowBox[{
   RowBox[{"Im", "[", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["\[ImaginaryI]", 
       RowBox[{"2", 
        SuperscriptBox["\[Pi]", "2"], "\[Lambda]"}]]}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{"m", " ", "x"}], "]"}], 
       RowBox[{"ArcTan", "[", 
        SqrtBox[
         FractionBox[
          RowBox[{"\[Alpha]", "-", 
           RowBox[{"2", " ", 
            RowBox[{"Cosh", "[", "x", "]"}]}]}], 
          RowBox[{"\[Beta]", "+", 
           RowBox[{"2", " ", 
            RowBox[{"Cosh", "[", "x", "]"}]}]}]]], "]"}]}], ")"}]}], "]"}], 
   ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "10"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]", ",", "0", ",", "10"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{
  3.710720023028406*^9, {3.7107200806579123`*^9, 3.710720189922504*^9}, 
   3.710720256973422*^9},ExpressionUUID->"f6db6836-93c3-4bb8-9adb-\
6b2c744a3047"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1:eJwVzXs81IkexvHxk4qhXLqIxZifTE1qaVenNvX9lo5EOZV0oZsJI3RzsEK5
JRwawk4qssKoKKlhsZJEcs19hIkGp0NauQxmDLPOH8/r83r/9RiyLh12JSgU
ivvC/t/U66zFZi4xO33UO2TWoz9DZStt/zHaeZBGnPBMVMsE+buycBrtKgzx
g22rT+bCsoTC5yqdYdDLO9ckOJ0PqeW3DJRo0ZBs4R96fjkfTEZdOHJ2HNxT
bfXad7EQhMsezMsECUB97rqLkVgEXjt8L0wb3IXxvCHpdlYpvGzry5y0TAHe
NHZIdctA6rm/Z4ydBvRzjzkTr17Dnobba6cED8H4deqBgXNvoHXWPem7wWMw
rsq12ry6Evyq9U1H859ACP+zOaOwEnQS2+q+WebCpzKrLM7BKmAxUfErOw9c
00a566++A/9cavG44AVc/Y0Xdyn9PSzpFjG+GRTDgNAwbr1/PXSWv/Id+V8x
WElVw1YO18MTXvLbr/klkLdUy9rBsQHsvO3ODFuWQkjdZIzOlkbgKpdwv7Bf
Q9bb4/uCez6AZsp7YkxQAZu3Zm7+76/NkF6bduWrQQ0IY99oVZu3wWRyAbM3
tgZsloePa7PawIpd198iqQE6021YndMGI4rTDiWttVB2nT8zO9AGW3fY/RId
WQ+QvC1hmtMOTXkygjH6AU7Jt8eqt3dAcK2JjdmZVmgdupFy8qeP8Cwvuttr
Uxec3l7ep+whhGHN4Vgb5y6wHXSL9ooUAsPPZue6pC6oFQ3+oyBTCL9bUNP7
JV3AcuK0Sj4JIaEm1s2xqhs0DuhPHjv8Cfz648b2nhRCU7OOYcbPvZBGrQvX
+GcfDHA3DfzHpw/Y0Hx3xLsfqM7moo9qIrg4uL6f/2wIEoz9dr74PAAqhjcY
vVu/Q86WwRZu2hfgqNcx089OQA9zya27U0PA6j7yWrF+CoyUCg9rHxqBK1U3
WJcYUuCEKitwAv6C/Muq9tr75oAZVdhiZvYd0gM9h02PUbApfMjawWQMwtJk
hyZHFLB0yrCxiDoOlNY+LA1QxJHBXG0v4TgY+7j5H2EqoTnQeoP/mIAB8Z2j
1FeLsaTYpaIrYBJsBj2uJVxZiht9/7L3thKD3UD8Bn19FWw74fcke/EUDL9l
hbx/SkXq4hW86JdTsEmjQ8/yjBp6xkwbxrhPgwqInXsmluGfQ3tHy6kzsPeb
4zTdQR3pFQ5rSwpnoLPCRcHRRAN3P15tJTsugYKoytM0sQay4hRXPPwqATcl
377GRk0U114wrYiQwjnvwALVe1qYe/fO9GGNWfiRvaFxv/MKPDOjnG/DnYUP
miZU320rkXdCc+9lugz+fBZ230RxFe5uz9GNS5dBoALzYL1wFTotL2JFM+ZA
pSfA+iJ/NSaI+B7ns+dgkGeYlBakjQHd6UUJuvOQtG7NomKHNbhuPIvxL+48
xN9zq3am6WDXMuXPUiU5OCadalT9ooP5IVFrui7LYWZPliStTBcFoQevLxXJ
oX9wt39F5A+4xXE4Od6Igg93mOk2OOuhV9JpAelEwacRvhrsjfro5sjrGoml
YKTDOVtFsT6O6Ch5PC2loHlP+uPIBgM0erT9wdFRCiavv/+0wZaGJc05T5L1
FDC4/FaybTENi4yOGGTbKeABXYesWiNDdKE7z1ddU8BdF6udNKINMTDjPa/9
kQKm/cAyqhcb4oONu+y5HQpo9Daba+dExy4rbs+/KQTGb6xgtpQtWKRnV7KO
QLeJRc01TBLPvsv+NdmeQFb+OC06jkTFnrk7nQEEeoXZy2xuk+ieFAw3Awn0
tecLVBNJ9OlU//hTEIFRYl9OPJdE7WseIs41Ap9tk8zeSSVR09vcbk8IgZI3
8g5eDomy40RsbsTCf4vqrcpqEje30fO84wm8l3HB/WYNiXMOj1L0bxOY4dNo
aV1HYrx9SFDtggtXxUvrGkkkCVMteiKBPY5a7q3tJDa2Vac0/UYgo3+Npaif
xAK9LPqG+wSa8gP0MwdJXCu23tKx4F8iuiWuX0h8ufKsRWgKgfsZqc+Hhkm0
OPrdQJBKoLcnTX9sjETl4uY9Yb8TGGQRKnkxQWJMufWISTqBEWqiNh8xifID
ljcFC07Oy4iZmSFRol532ySDwIchi9glUhLDD55UFCw455Dr7iAZiWrMq+zQ
TAL59Hd6O+dJjEonyzZkEVg2YSyRy0n0Lzm1pGPBfwOzwhfL
       "]]},
     Annotation[#, "Charting`Private`Tag$464#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {0., 2.3309746337393413`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.710720087833925*^9, 3.710720123168987*^9}, {
   3.7107201695946684`*^9, 3.7107201903437047`*^9}, 3.7107202264129686`*^9, 
   3.710726470122726*^9, 3.7107278082349033`*^9, 3.7111327432239275`*^9, 
   3.7111329344128623`*^9, 
   3.711147132392539*^9},ExpressionUUID->"cd06eefa-809f-4254-94fb-\
724c2e58a6fa"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
KFJUMbt/TO4qif6kTCb3ZZsQ09nj+B8en63s
       "]]},
     Annotation[#, "Charting`Private`Tag$507#1"]& ]}, {}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
     Charting`ScaledFrameTicks[{Identity, Identity}]}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10}, {0., 1.3770031865212036`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.710720087833925*^9, 3.710720123168987*^9}, {
   3.7107201695946684`*^9, 3.7107201903437047`*^9}, 3.7107202264129686`*^9, 
   3.710726470122726*^9, 3.7107278082349033`*^9, 3.7111327432239275`*^9, 
   3.7111329344128623`*^9, 
   3.7111471324525394`*^9},ExpressionUUID->"d351b334-d49e-444a-aed7-\
5650ee969e8a"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyUnXlYTdv/+JsnaZ4njUTKnCnOEuJkrmTKTKYyE4kGiZKGQwmlMlSmhJRQ
hmZJNMqhOaRRmjT+3O5+r7U+5z6e5/u7/+ynl/d973Nee633Xmvtvc/W2bTH
aqsAHx9fhRgfn+Cf7RuT4NrbndEzYdvQwvou+qJ5psDTcwO7uV9ZwId8meDx
wfoRq3jTe9ZubgfmnW4Kfs4ja1jL2xpcOfr8CLhfru6Qc77SiJX4s9yRK4L5
naEuEZUtk9BI5w4WmyOJecnaS2ELQu2Qz9W+JRx9WcwXyNhtW/XdHQ0M/ieP
+aILBw+uy7mJDm4UiHPkKmEea2GUkNGTjepeC23gJqhibn9i3Vj7E01onb6o
DJujgXlY5YPVRndlZxWcEn+Z4DgM8+cdcXnH502cdeOX8BSOvg7mUxau+CKg
sGLW+sE8upivfCk8S7DUYZbacrHvAwN6/+HwN3gdI2bVJfbRnwV/w9bk1VAl
gSsJ2DPwShmNs0E7iWfg2gNT7zpfJp6BS7Fq7PxaiWfgtqtev31MeQZ+1Pnq
TXvKM/CfYwJSN1KegQcZ1XtnUp6Br5RcvJX2DHzc+yUbac/Ap+5f+YH2DHzm
qFf/4xnn5/HMy8Ez+Ns55c3FCb3B2CPwFQkjgu2jnuG/Ybv2uctBOY1a7Bm4
TM2+mIupxDPwbp0KpYBO4hn4i125ym1hxDPwnw071vlRnoEH9KXG7aI8A3ct
NBR+Q3kGXnZWQ2gb5Rm4+aWRh2jPwCVrFhfTnoFLZfaX0Z6B83rm5eAZPG0y
Uhu7KyAUewY+Wegc6+uYl9gvcGFbt3nCKiQOtt3KSlf6BWSwZ+ASM255lQ4Q
z8A3mrGfCEcQz8DXbS8++57yDPynz+PpLpRn4HnFZSPeUZ6BW9/OltxOeQb+
ZCormPYMvGjBhTLaM/C3OjKVtGfgvJ55OXgGHzH1Cmu234zAnoHPMLfWtrd6
jT0DF+ma73hh+jfsGfjORAexXWOIZ9hm81tKLR9iij0D96ufs7XuGvEM3HWM
tL5xHfEM/KrBu83nKc/A9xgJtRZQnoHP/mLjuoPyDDw2NiCN9gy86ZbhD9oz
8Mwp7dW0Z+C8nnk5eIbvLflFUfB2/DXsGbi397z4MFYa9gzcftq0qcP2fMee
gY/3+1azYSvxjPMfzz9Uq0o8wzb/3e/lYVHEM/CXN1eo3qA8A09smGb4gPIM
fPYY381cyjOO35S8ZhflGbjpT02+0ZRn4Ml9Q37TnoHnDY39RnsGzuuZl4Nn
+H5bLATl1E7fwJ6By7Bsjg/vT8eegRv3Pe3j3KjDnoFfj1m5Q+068Qz87IaQ
cnsj4hm41dlDc4fdIZ5he1pVbvWkH8Qz8HE/Gk4XUZ6BO123d6mhPAMPnSVw
zZHyjPfT/XU+7Rk4x2LmkBOUZ+AdEdMaaM/AeT3zcvAM32OS98NR0w2jsGfg
wu9jd+teyMSegT9jh42RLfyBPQM36jOuq/xKPOP8vfo191nEM/CL7yY6OcQR
z8Cz92e9r6A8wzZ0/CV3vrfEM/D1sa5mzZRn4BpsXau9lGfg4q/qr9KegTt6
vtCmPQO/1HL5J+0ZOK9nXg6e4fN6m102DIiIxp6BX9w94nyHSDb2DPzVXS2F
fb/rsWfgG+/t0h81htRZ4LfULNI4tsQz8JNjrzx3TyCegc9PNt0SVU88A98h
mSQ/nvIMW2nui+s9lGfg32U1HA5QnoFbTBstYEx5Bm702H8q7Rl4UP+7Ttoz
cF7PvBw8w+eqjDTRje2IwZ6BrxG7/ZO95g32DPxoSaDuY7lG7Bl43SqtI5ed
iWfg3j/mRJTtIZ6Bi4aPO7YmmXgG7n5yReepBuIZ+H4tH7OdlGfgfWqSD8V7
iWfYZvY0Nh+mPAP3WhWzn/YMfOqn2OW0Z1zv3xT3056B83rm5eAZ9r/pVFHu
mzG3sWfgTz1qzisE5WDPwK/uuRijM6wJewbuXDVXUi6LeAZ+QXzmzQ1niWf8
vQ05j9rTiGfgBY37drg2Es/AH9yQ6o6hPANfkDF3myrlGc9LxgV/caY8w1ZB
dkML7Rn4+xaNQ7Rn4LVLH4oIUp6B83rm5eAZ9pNyo2244tI72DPwVoEtJvGJ
b7Fn4N8Fb099pNWMPQOfoTpjyU0lOewZuFaIu35tDPEMXFHtq9jCXOIZeG/w
yGBOE/EM/NrdoZZNlGfgOaGWqaMoz8DFrstNcqU8A29can3MhPIMW4Pu0ou0
Z+Dsixulac/AeT3zcvAM+a5czX7Ruvou9gx81c07vfwZudgz8Ieyt72+irVg
z8C5s4buCtlKPAOfNmO275Qs4hn4XMNPWauKiWfgpSIBy180E8/A0Ur5UdNy
iWfgORlt6TMoz8BVhm7sOEl5Bu4m6iE/hvIM3OxXbTLtGbZjL9Wo0J6B83rm
5eAZ/r9dTz4eGW19D3sGnp6Z5LDt9TvsGbjZGukRni7EM/D6glNnV8YTz8Dv
pluYGdYRz8BDvtf/Uq0gnoHrvprsIvyTeAaeOmLfRV/KM/CAYrU9VpRn4Hat
J3S8Kc/AFXQbntCegQtx0TfaM/Cdq6br0Z5hy+uZl4Nn+PfpWz1+S0+PxZ6B
qy864twSm4c9A+d/s8D77A/iGfhpbSX5QwJk/gb8KXv+xJNDJmPPwNHXX3NP
/yCegTcWzeduaSWegW+0nOlfS3kG/jLLP2U75Rm4RviOBD/KM/CrZwN3jaU8
Az/34Ie8K+UZ+L7irSa0Z+C8nnn5mu1irnu5xSzYbi9//ml/0WVWQ3hOOUf/
J+ZjC2bzL2jJxeuhwM2Hu77vme6F4+HfH+do2cwLzWW9NCgKZ3N6cR5JLqtG
Lv035hDfuG7L7tjk36znz0Vd9Nl6COJ5Pz8vh79h/7M06k1mGN7Ef8O2tW9X
eavce7xf4DqB5xa29v/Gnw/+/bF30qJzendwHPCaVZ4nC+5+wH/D1uaaWam7
QzfO82Z58xg+PiE07otUaKtiHPHDcKuTGu6/NhUQDwx/8ea3wjXBHpwnXqXN
n5sgjjLb2jh8Fg9xHuClLMs2dZkinAf4jjvDzUYkkTxXuV3NCY7SqEUgI0pk
UjzOA1xnQ2rVxWjy/YFL/vZNqvcgx29OXv8INkcOzX5wvWRl82OcB/grAyf/
RwYfcR7g8hcTXiWu7MN5no7l/5jgqIjirNPH9RxPxHmAy/k4Gs33KcV5gPd4
admtmtiP85hwBM/os1VQmcO5F3XfnuA8wK0mrwi8VvwJ5wFe87xHfK3sAM7z
b39SR4HHbEc8Gv8U5wGu8lY+M1TyM84DvHn9oZh7DSSPymA71UQ65mZxBZue
4TzA3a6YjZ5o8gXnAX45pCFacxMfbt/z1gi/TXDURgIlVat/HXuO82CeLzh7
5YwynAd4p9PZs6tySB4BX5EbjlwdpLhXzkPePRnnAW5/9aNI0fRynAd4hsNG
+Rvj+HEe6Jc+Tc3HHhxMwXmAR9f5+NxUrMAeoL8aq9nvvPQ9BfdziOfuDp0i
ln0P7xf4wqp5d9Mv8CPIj+f9xwzyGhZX4HjgWseeV2ul8yP4/2EL9QH+/lvd
g8/VnW7fYtPAwecX+Pdlb0ZNnLI2Hp9fgBdtv1ssP60Gf27e6yCQB77Hg8WT
B67rJuE8+DgYFxzySKzB+4Xv5y1in5kom4LjgWdqP9cfeb4Wx0PdKNnsKjR5
/ity3YrhXS+MJC5GkesuUB9k+88fQEtScTxwlUlbx+0s/IbjoQ4Me28Qtkyf
rFMBP2slaW4qUYfjob+HezqM5eZm4HjgbP2c7s0zfuB46NfH0uc/ubYsC8cD
188I2m+yvZ5cN2L6r8ZW4Z678WSdAXiy5aWv0acbeMa96sjwqIjevJ43PONe
dVSaK57gfbkRx0N/DDovYqM6ksxHgLt8VrF2j2jC8dDvIsY/tDabRcbVwGtv
e2zKuNRMrn8x/ctjqKfAEgsyPgQ+0yjpk+PsFhwP7avlt0Cb9zQyzgH+rXNo
8cT4FtwfeNs/bmdMvnOH/c8/K3lH+jvD7UaHTBHn/sbtEvYTUlD6fvJHct4E
Pjc962DJmG4cD+Msr7j6FQGn83E88B45P8ULj0g8jL8WBtaKpU4vxPHAM8ap
nJ+zpgfHw7jstbxyfV0ZOd8Bt/wgGiqrQc7rMF47Olaxq2JHCY4H3j788+EX
DSQexnFBWqLKw7jk/AV8SHGno1ZGH46H8V3Oz/r4DRPI+QX46iVvV3+71o/j
YdxXlKPUtOAgF8cDPznUtW6j6wCOh/HgYalhY4vCyXkHuK/77HKP0Xy4TsI4
0TZ7QV1HIjm/AL+1Rv6uwkUSD+NH2+h7RwJSynjOazoo5LTzmsp+Eg/jSg/J
TZdXPibnC+Di1kdkQjfzo4387/z5+NpYKp1nws/rV7JKxe62/eYrZQGH7VGP
4gt+Mz/hvyedLlmS6DjAav7AYYeJfMbc06tFNNFRGIW/cNftFyrDfDe7fRtH
fwj65T/i8w6RCsxHi/RVJzjKoMRLB+/sEarE/Nq2gfP6bHkkU1A8v6iTcOVs
/jkcfSVkci+1LK2sCnPfUUJtAwMqqN0k8P6nJ9WY8w/2U3W0e/mUFbu8ajA/
3Chmw03QQhv310/Vm19LeLSwh362NuLnmKoX9BM+9qPIaq7pn3mTyqRomztf
WY0unPWWnAbszd+qokVE8zVrQVp+MzfhN+YfOxsDf1i04HjYWgaKTHdYmorz
A78f1bbd+3Qp/hv+nTUz+6FxQhrOD/8u1VxfLr61BXOI7zSTOXE+gOwX/v21
wcDB8UYZOA64RqB8SogyF8fD8fVYYqO7OjwTx8G2vyUusDST7BfiBVSev+cX
/4nzyBg0rWBzBNCtkj7NNUOy8X6Bv033yvcX+ILjof2MrHs10LTrDc4P8Xva
ZaZNsPqJOcTfiS9c+DiS7Lf7W2uiPlsMvdhcOefxixy8X+Dildum7hEvx/HQ
PseNOjQFieTi/BC/r2GcOH8H2S/E+w/ESmYuasV5am53KvPxSaGw7etPRbLe
4f0Cjz/tlenrVYHjof2/f3Dw9RiHPJwf4l85GN9vim7FHOL3TLu7PFDwF87z
zbT/mSNXFs2Sdto/weI93i/wfecXXQ93rcTx0L90n29R3/X+Pc4P8Ye3TBjd
tv4X5hD/K9Iq2P052a9dCJ8DN0EBcT5/SZdY/gHvF/jBZWe7vjlU4Xjov+Ih
RxauL/yA80P87QFdkVQV0i4h/nv/Ba81B0k/+fBbQIPNUUbmvTPt4xfn4/0C
X18w98r2RdU4HurDI/TMzjotH+eH+PT9v4cK5pH9QnyUFCvQw7Ad57EYHCeo
oYAIGwuPSQV4v8CDVh8YM0qnBsdD/bGV6ws5ea0A54f4Ef3FqXFu7ZhDfMJY
C4c9JWS/zwbHCZpowNemK2hIId4v8FHf3DMffyf7hfo20em5UdveQpwf4oNu
Z0y6NboDc4jfd/1q3RK3DlLfpIWV2HLaKOVFpUlRPtkv8O+7vf3e3agl+2Xq
Z3vtcmuHcUWkHjLxwqOf9K3Op/bLxHMMGrdn6HbiPAUskaYBVx20pibcoc63
CO8X+Keqj0YLbUkdhvrccGqkwNFasl+IfxOgGxe4rxNziL85+YrOixSyX7+9
ohkJjbrIXLDk5JzpxXi/wN99VsoT6f+K8wAPm/FpkrVEFxl/MvV/eKJvmOfi
Gswhn7Sn3ybDb4RD/cwJvW+oX1iLOdQ307Zthw61kPuEoP78OB437rrOd8yh
Pky7LnjGZ0Ud5tB/43r2Pxbx/oE59K/Xakr3TR7UYw7tX/xCRtuF3AbMoX1y
6m8YzvjSiDm0H5VZcw0GypsIZ45vhUC+xKjiZszB/+F0VcfhG1pYUul9xw9w
M/D2yMkmJfHlZ8h5juFVG1aZTF73CnsE3j27z10x6SM+LsD3Cc/d5TaZnKdg
3leTopfsN6mFVS8mNp5zQw9BPO88FMZTwOHzw+e6snPsoYxz5DjCfvI7fYJD
l5PjCOevBVs1opauI8cRzi+pOzkK0ae/YQ71X1ojnvXwOTm+UJ/ZB3UjJv8k
xxfq58vpYYZOWuQ4Qn0z3X9iSgsixxHqj944VrfICnIcoT50P1Tun7yBHEfo
v3GvywPD7chxhP6VIx8ntGp4C57nwPyI1yfvujF4h+PAfumQf/LAY5wf+peF
ZOmRMyEt+LhD/Mep3xVcFn/Df8OWd79/ux8P9m9q5HLbfporzg//Lj679smn
+x/xOB/iDZ9rpkQ9yMV/w3zuwaTg4Morj3H7gM9Tx1Z13e9H1j2BX/wlJnNi
fAX+G74vfE7gvOsVUF/g3wXE5M/Ftqfj+SHw3kAvi3GHyLgCeFWmuLSNTRf+
3Lze4HvBfuW9z5R9c3bG3wu4hJRD8+vZZB0D/r/TQpIoyrgG5+ftX7A/+B68
6zwwL7t5+tUTw8lPcD2F9lw38lLx9chX+PsCz166sv35umy87gPztRV7pyfV
BiThPND+z+cKJbf6v8Z5gKddKrdUvPsG54F5nN9L4ejS3Kc4D/SXR4ICBRN2
peI8wI0OZTdml+fgPDC/+zFaT1mm9RnOA/3LcFPLorZJaWR9g+Hmb0c4KPa9
5Vn/1EGhWY3ZH/mScR7oj9nvEjWtWkke4GnTxo5/JPIO54H++GuV3bLmXpIH
2qHuu03rZa+RdgXc9PX3h7/63+F2AMez+qL5ew+BWNyP4Pg36dkEfztE+inv
+h6sf8Hn2pW9QzL/LbkfEXi1y6vxQwKkEZwv4fMq1i/Kk5ojhPPytivID/3v
iujhecEFJD9wZwtF/md3SH74HvpGT7bKbRNCkAevZ7gHPu+qIHmAH3C5OvVN
JckD21aNuRWnr5M8sI0IXj8nro3kAf4uUinkm7IMzoPHAx+bZtxqJ/8/rAdu
36v5frkUuV8T+Nar2gbL2CQPjB+qVjhEqqwSxnlgnTBxl77FLmOSB/jEBax5
G0+SPDDe8E6b23Uym+SB9cPn9zbJbF5G8gDfGLtlk20ayQPjk55r319LzhbB
eWBd8fKtc+7RR0kevA4ZzM30lZDFeWA8M0/4ivzh1yQPrDeufXV8R+RNkgf4
mk7dmwE2JA+MfyaOmhQ+aq4ozgPrkBpDCw4kF5I8wJVG3p1jEEnywHjpwFVz
S+NskgfWJ/u/ORrtFdHHeYBv4qrzzW0meWB8FdF1dAr/IjGcB9Ytv2qwYqdM
I3mAq43zb9GYKUfyMOOx8DF1bwLySB44X3+9UDj92h6SB3i8gsFVkXMkD4zf
7occHqK8VBzHQT/VChymGH1uO76+yXsdEOoIbz+F/HCeGXWhe+o4KyG8XziP
tcyyPbrcg3AYX/3Q3+k34g3hML5KPP9J64SBMOYwvpILOTWxxZ9wGF9tVyg8
YScsgjmMr9ZNi3cd70E4nHfalR7J+giKYo7HVxvsHmmcJhzOC7f5NwSPHSJG
6hhT50+e+Orh6kc41O0b7/dma8mI4+MF45od106UzIkixwu42WJLPXcuOV7g
O/tu0L6d/uII/EK9nF9zMEk1kVx/wtdJXr6aRh9H3vVqyMs7boHjCv2oZM/a
ytXq5DwLfFfoy9xisTe4jkN/eXamj509QOKB1+ZUmDTOz8Hx0C/ex0U0u+aT
8y/weLvJ66X2vSXxTPsfiLti/yGInB+BZxpGPB7vmYvjoZ17PNpvdXcBOQ8C
t2zWf/XFk1wXgPOb4qhR8T55ZJ2fdx4BcXAceL1BXZLPP+kysvwV/jxQZyyV
WqP3Zr0m4wembmRtTNJYFZ6KOdSBJDn+9mX2aZjDcbZeLVS6YVg65nB89/Lt
mW36Nh2ft2D8tnNgalSDmRAez8FxH67b+SRT+zEeVwBPvnTg5JKpKfj6FowX
Po40DOvK0UXQbyHfuezbPTKOKqQuwXNJ7m/01uaRePC2yj5utK0TicfX39Y5
n3YqJfFQN5o8o9Z2+5F46Dfew9JipX+QeNjOdN7qhB6ReLjeYSPrnPiWTw/H
QZ35YnxqmnI1iYfrHQHZRjrTNUk81J8ke/NFEzRVcTxc72j7oqpdOJPEQ13K
bHB1GbWBxOP7h0fmjxHeSuKhXu3MeWHke5vE4/tjv5RqT/Yn8VDHGia3BrZ1
k3gYP3s8O69W+JzEQ30zGTFGUG2pGo6HcfLv3JOLFjaSeKh7vmKuCYUxJB7G
w6cLDBeoauvjeKiHm068U9IVUuc5/+ogv9nh2i9tSDzUyaXJDp/0N5J4qFvB
rq7b8n1IPLRP77ihAnov1HG7hH63a+K0G2eXxOB2D34ez3Dp0zN4gNs58AT3
s9/PBjxh/e99ferIo7Rq9YXgWzgPeLPqX3TIW/4hzgN88T2dg7eqknAe6Ndt
BsXZea9v4zzg87iFhYdBE8kDfMxTlyGKqs9wHqgD9hGLXvF/vIPzgOeYmi+l
aYmPyH0RDD/k79UWNfk5zgN1o1HA4r5Z6V2cB/yfVwtuub8/nsx3GJ502S/Y
a1Yyjof6H7FLuFgg/AHm4L9LU84xfRPhUP91x1as0z75EHPwHCV7LKNhAeFQ
/9ePOuzZaPOIfF/GZ/gT7fGSuoRD/b+iFJXUohSPOXibOWPfiLffSDzUf9Ga
yyHTc0g8+Flgv6h0ZXg8a5WIq+LWlzr/mb+Xjjw+yHnXJUZecBrkvM+1rZy7
e5DzPoflMGPjIOd9bsjBZekg533OZaGA2SDnfS5DOk9vkPM+RxBXJTrIee97
RzO+K/zDee/TvlSWNsh57yvuyggb5Lz3wZp07B/kvPdtmjvMGeS860VTRsoN
ct75Y3ra1G9lnTrotdue2pAdn7C32Cznwc9vfcpx1+KFLZhXhh4Y5C/uzjAS
ftqDeVvi9kF+QfhI+5fzgjj/b9XVgzxwqfnyJEtxzL+8njfIhyT2xV/gl8Y8
/OG4Qe6msVxiip0c5hZ1yoPcvF7v6c3Jiph/tO8e/F6f59XvkJdXIX6MSgd5
37g7qu5NapgHmcYPcnR7c3ZTtibm2WfODnKplT5msVbamFfprB/ksAVelDLj
6z/e/JtnpgRtJT4te/71udT1ssr8RQXYz63GfznveB65zh7McyL7zdRHo0me
23fRIOcdN/6tX/z/7vdvx/1v/etv7eFv/e5v7eRv/fFv7edv/fRv7epv/fdv
7e1v/fpv7fBv/f1v7fNvdeBv7fZv9eFv7flvdeNv7fxv9eRv7f9vdeZv/eJv
9ef/t53/rV79rd8d8vcesodbiecZBn1CFfxnHrLmT3m7YDeX3Bckk7X8gOil
fNZD38Z6Ry75fYMBnVfjH0xTRL/n/FzMtiLP3a/cU2jvGTIBob62B/rZEjg+
WKc6dO6m5Zjj+P2iGnF/+OnHXQp8SJr8/sC9Qm5Q8EHMIT520+ENcX84jFMh
Hr3vffk+NBBziK8+Vb2+5A+XkHf705wUcPzulcErXOxikEkz/zC2Ffn9hA0R
RypVdTNwPF73lX8Q5UrFA48pmvpY7U+8Vc7J9wnnVHCemW5TuFdTajCH+Iyp
hjLhf/i/4wA1HM9nfOFYhZDALOAQryX1/sw//PLJ0xM4Qpo4/kmcjemvIPVZ
KevFawdY5HcbamK1IxLYE3A85JkY3mpGxwPfPCor8p/4n2FzcxKStXGeiWMf
fNsuaIU5xDtJqX//h592WmnnW/HfugftCj+3qhja+YabgNsV8MlZXw5MEipk
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
P86eb/k/m7ayThTt302vC+0suyD9xLGZ9WPLo4u0n6pHAepPHH+wVkRJItqP
x5u8Ao5+B0t10p7/WRea+Ti3lHPjF8t4xcD/rLOp9a6+dmbRz/+sC20pKBE2
yB5glU1zbbll8AR7k/ZoaHK8wofiDZSlu24Qbx+biqu5Cf2sUZ+PjV2zlXgL
LC2s45r2soZbmjfNoNZ/LJn7GZaeMHf/RXkTuP++nWvaydr5ZKqKD+UtW7ph
LVuOD+2cGeurTXlbLFH8inOjj/WsSnMhvf4j0V6QydHvYY2ttM6mvWWUf8jl
3OhicbM6l9PejGIasvWz+ZD3PddY2pvc9JJLbLkBlr1+0Q/aW5P7lk2sZ73/
8RZ6t6XK8YowsjS6IbYo6hn2BluOsvA1gzjizXZayzK2nDB6cln/YN824u3h
mGYbdr4gOtsxT4FLeZNmrv83H13xVZmaR+9Sa1zNtuJHbZtVPtLrZo/yW5L1
s4VRbu0e0eGUN9ms5pf63kJoknD0+UjK257kplR9tiC6LeygSK9L5D5szNAX
F0BSqVpHaW+Ku36O5HMTQbM1ypNobwc2tIzmQ8JocuyJRtpbheBk2WMKQv+p
Y1572s3ZVkPQh5vqd8ZlpGBv1aIdsfrikkgva8axTSnEG1539Jr6fvcu4i20
9Ve8vrc4ums1qeQutT72m7m/xdDwujubXm/88vOpvrgomjdNZ9JDyltYULsm
n9sQNDLAf6Qx5a3Hp02bD0kgiXLJudcpb6vcfunx8Ykjr8SeY7S3xEOtw/le
iqJhHPdbtLcB4w5vrqkkuuV2Lov2tlav3ZfbIYFa23taaG/ZGdP32eaI/8fb
FNXjyzieMkgrvlvN/81L7G3b1uOifBUyyGcK68apPOJNsaJXjA/JIL9Z7Q53
9hBvsLU3+Fz3kFoHq2bu85lp7bToDL2uGNGhxvdSEt2rO2XynvI2Z3RfiuMV
GVQ3oqN1EuXt66LfbtwOaZRxftGGm5S32bO7TnITpND6AoE+2lvklE4v7uGh
KHOM9jfa26EjfQe5HTKou9TnE+1N/5fLYa6tDLrSs7Cd9vbIG30Y5yH9H2/3
nF35+TbIozd6u3NjpV9jb58zXBMdn8mjiYu+jd9QTa13zRp44qguj85PcrgS
e5B4m/r8xFPHY3JI40z7jwZqvQu2ZZvOmxdS3oIeHE92nC6LQo7MSG2jvCX9
c7njsDyK/ui1GVHe/r1cLIdEs+xroylvyif793FN5ZCckXsIvd6V8c/pOlgW
LQ7uHkevJ/woHdBn58sjTcOSZtrbJRvX4ezx8qgjeV837W1p1LUQr1C5/3jT
++z+wHG6EvJceevm0cmp2NsyQ49t3GAlFDDj6q+U38Qb33X+HdwORSQddLx5
vzPxFqvpvpNrq4iqbbK2rg4l3uC+rxkPRqw0ptYNYGu7Rah1GDXPha2dzLBj
CylvX3a4a7MfKiK7a8sLb1PefGv4dNlyimj06cOL6XWY6evd9Nj7FdCs5zI+
tLf10wWKEu4poR/b94vR4zSpBPfihKF/5tkzd/LR47Q00Zvz25wU/+MtZIbn
Rq6SKvomsC11pR7xluHtqczer4ristSFHOTIfOGgkJAqO18F7booatfqRrzp
uZ5UY49XQUnRTfnd1PoV3Mc1Lrj05HnKm+tBD012qxKyyrRLWkZ5u75UKC/B
WBV5eARPXU15g+3rbCXjWMobv4VgfkKjMuq9WaVFr7fEvfQoSFikjB5f2tRM
eysMFTql762KfMPs9GlvJ5U9vfTrVJCmi6ko7W3ajuiujdYq//E2NNxLlt2q
jrq3TXu0Xy4Ne5te75WZsOif3xvUYo81Jt5+bBXJTrinjg6W/V4y/AzxFlJx
6k3CUHWkYD/5Um448Qb3rUXpZSWJUOsAbUWeuQm5qmiSl5+yD+VN5aGIq764
BvIZ9eLqDspb5mgvN/0d6ujztqjmB5Q32I4zSxen11UMdE+d1B/5h+u2bKTX
Vdj9IpM4WzSQaWrQbNpb1xEvU06aOvI/VCxFe7v/5lZMnon6f7x58Hm/SsjV
QgrqR52GNxNvcQu9nfRHDkMrLz17UMim1qMyxY7qe2uhWAnRAtEA4m2o+Rln
/TpN1G0fIZUfSbzh+/f8Axu8KG87Jp8+rn9LA8mdjJbIprydkxcfw6nRQhpL
tt52pryZ+Z0Zy5mjhdqH82kkUN7+vb9YE21t05Sm109g+9UyqZL2htvdJ017
2pvjpzNfB8K1UIqxpTLtTX/03ZUzJLT+4603Ln0Kp1Ab+dxfe7TkWTr2Jl+S
Ls8W0EEHfRea620n3nZeOKXAfqiNzqu3RPiHEG+vls1VZG/SRpVBW4+K3iDe
4L7E53NWDVWg1knKQryNOZ7DkODHYwFS1Lze/emp5oFybRR6aondOcrbR6e5
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
9VnxpJ6Lps2NcqzXRqM0x4rUTiTj5zgRr5uO03XQwRWTp4hrkn40i1lXMXZ7
IKdvT+r/6zaLE/qrdJHErDXuDZUkz67BdUVdVHnsdqPHdZKnl1lnyLghIDVS
tpcc35/JTqe4Uax1XyS0K+aT/ujA3FfQm7H37ods0h/xcy7dV8IvZ5F+nZV3
um5gvR6Km6FrzK0m9UGKWcdQMwqOeC9VRThzv4S305tv1UvJeQd+L0E/HQUe
/03u29jKrHuwRH7+ZmtlYg7xs47OqrlqkIk/53GD+bbcDD2Ejk6IP3uGjEPS
v3rEOh5TRidaR5ks9nuN+RfJk976t5TRkgfDe4RuEI5/N1JqX7fFJcKnDc6/
1FDDwUvX13qnYm41WFfVkLBgOnttGOGwfq464qWU03nC7w/Om/6M66y16vfs
TcM8c9CnJrofpHuyxYNwWE+u+rk6OOMo4Rzhueu5ItpoVnE/e7RFOhm3q6S/
TdDURpNDYxavXUE4rK/uWpK47+NiwheZWkzmHNRBV9jBqlmSGZivYmfccDyr
gyJslz39oEE4rDfO/2yByhQIF9s2T5pdpYts7w3V0cggXME500X/ty66UtCx
T7uIcFh/u+FbcOteLhkfwnwwwuCn2x2VKrzu5/usWv2q/gNW72M/wfrgCQju
j/JbeXYJP18Na8ONNyIrkCLmMO87c2DGVEcz8tyc2kn/2fx8dazWk6Nf14WQ
PBrj87YlOrazrJJqBfStSR6Y903r150zzpLk2TTvw8bExk5WwovZW8yukjxd
axrkEx35kJ/VJatn+0kemPfNHFMzwXAryXPFvlEm8R4/SnDKn/0hiuSp0vp5
gKMvgsps3Ld/DyN5YN4Xk4YK5/qSPKdGtu7lbBFFvdVaI849JHneVrYXOHKH
oI+bnp+fUEDywLyv3+Rb6ogUkmdPQ8d7R/Wh6OGexScWviJ51lj1XdLPlkE2
8Qr7xWWVMId5H4p1D5n5m+S5V3I8RH+HLHoqNam8Jp/kef9ogM25IY+eF8p3
flpO8sC872Zp77LW6Uo4j+5Ut/mcOQrog83JsOHfSB4LRYHuAVclVBisbDch
guSBeV/0qTu2yZ4kz8XLHl0Dw5TRmxd2G8v6SJ6nh4VuO65RRRo3ivzSmkge
mPeNU7s0dkY+ySPZ6xnj2KOK3mTK3yxWmojj//3dgD/nlxbN2Q5IGXOY99nd
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
0rl/1UrO3zHPKMQmrovc81GiSupBP6i7Op7KW9EiqT//131UT7KP6k7aQe+x
TC2yDbtwTXKWcNrPVkrLx4++IZkn2mczIftsEaQ85o0e8ju+92u5KrET7Z9s
IfsnJxEvT+rvQuK1/+798+/eo5DPAeVLbnwVG1aZKEH+avBbo7RSj3P6U+B3
NFqUTnP6SuDC4rY9pZxOEPjCY7fG8/pK4Debsw7x+lPgESb+3Xl9JfCEID1f
XicIfOmTbzv0zZGnGvzwna86dJSQlwnjeepcxS8GDX5P7QXf1+rTdJTTkwK3
rPrc+pKzF3yGZaLZc85e8PQuoeq+MnthF7jaRFNf3i7wiqzQGN4u8IzGEive
LvDeZt07dcNJO/EeaD3Q9+hMTocI3L3kak0b107whVrnaw9w7QTPsvlxNq/T
BK6WUl7GtxNc+dVmx/Z2oj14D6ypi3z4J9ce8OJgh82DOb0V8A2vniZHy9qD
3wWftFjuO153Btw0R3F3+++ifsxLe898eGvL1Q+efjRm3UVZ/agH/PQmv1S+
Hrx3ifV0wAeWuQ++z9UDHqvQUNdeD/wL/v4vojuM8w5w5M3AOAQX6wvTexoi
fWFwsb4w5sNlEdE3mmXtBEd5se4wuFh3mN7XFekOg4t1h8HFusPgYt1hcOgO
ox8wP3sOagvatZX1A42Dy7gb0Mzp0YB765morub6Afwbs+l5lpy94DmBTtJp
nL3gXtphKac4e8HNs84l8faC/9THqeg956c0rnDJMvmV3PyDdVDNZe2KDe+b
6fwDfjLYY8+87ZxON+HbfpgzaCOn2wuemR+54iZnL7hlzxTVLYuYX4NLc6PP
83ox4NWzJrrxejHgptb6oxs5u8CdMtZ26sKQdmL98hi2OqIfp4cL/qva8G1G
nP4IeK2RyvwzXDvBxzzs9XUy1056HywzwoLXZwEfL5QfaeTmH6ybj5SsLlRy
eij0PoC33szfufaA31TS9atZxOYfeq/1XpkBr29C492qPXs3cfMG3gcyTk0v
0+H0L8Dlb/4crefA5g0ahzVeYX97PSiP98nj4cEJa7jy4A8MvNQ/cOWxvl+/
kx15TlYefod18K3JgQ4dRox/rCPz+sYFtesbojz4lTav6PbyGJ+Y5wcOcFc1
cZxD/Qj8s6b+1QFcPeAaLTWneH+n+S52RtXy/o75vGLluRxXJ1Y/uP0PZsZa
nJ+CuzTXrGvXxcPv0rzlY26f5X8XfFTQo1e8fpZ4v4LmQUW+AmXtuCq3e9RP
wW3b5H41X8X8FNzr4tjdoWHutP10X0Lp2YshXPvBy+RLHx3nxjk49OlgF7h3
5PAs3i7wtDVn3/B2ifcJYRfWKauRjb3SGu9Tu2j+gQEjQ5KdmV10XyLYf5Hb
QWYX+F7zz3dHcXaB677QDjvB2QWuGFRYy9sFXj1F4TZvF3ik6rAG3i7xPifW
Wax3o4sjPpbHsrzu4GmvjpcnL39A7QW/FLFuZMp6Zi945tD53T04nTjwHFs9
7+uy9wH0A7hu5IY2Y64fwHfm3jsew/UD+J38X5x5PTjwA2unjuTXTfCH2g7l
fP+AJwQIH/j+Ee/3oh4aZ+FY1TWNmwcwn++8nDTfjvNf8INXVQekcfMA5tvS
Erf4eF/mp+CrF+TGL+fqAdddmDOO15EBr/uzX4dOFurHvLpxWrcojwBWP3jf
P6ImbOD6GdzM84+Uc9w8AJ6p83Iu/7t0P6T0RxVe90e8T0Lz8JP5uc5SL7Y8
7U86fsC17jXMvvArGz/g1Ut2qBREMX+h/xP7aPfYxbUf3Ltnaex5bpzQ+ok+
FOyi9WgHbOTtAtc8aK3J2yXeb6f5w8k6ctWxQtnH8Am1C3xffMFI13BmF3j1
o7FLyjk9cXruRvZbYC942LR+KqGcveDWjcNeXuLsBZe/VCKp5uylcbVz48N4
e2n875C72ry94nME2EvjWNPnqFSeZPaCf50WFxMazewF16kIX9srjtkLXp8r
hE2MZPaCb8qYZh/H2Qtu43L952zOXvCHlqE/8XpM4EpJspmOmwfAM9InX+L7
AdzB99MIvh/+7v8+zYt1eWrd0K5naV5HrMvmn1Q9TJ3TaB5jrCOPFTfIRT9g
+iDw38f2C6551ObQ8vAjCdGDoPnYyTicbKjYs1aN6UTQ+/BWSWH24y5Rjnm+
9Fll4YILmbQezG8jHnZzTdZiecLxP0Jn31deme5Mr4fuwyzKX61hxvJO471o
fd+FN09ns/zP9N5CwfTY4hec7gDpn9TKkMBwB6YjgHm1vrWyKl+O5dXH/Bl1
Pyjfx5jl1ad5Htb0tFFezPJ+oz33XZRbw1VZvnf8rqJ7gNyBLMbRP88t/U7n
mrM86uiHWJEeBNq5596JnRO3M4725Gb5tKgVsvzkeI6BIr0P+Jemapza8M3s
OaL+ZS22tSUWLH8pjd8X5WfGc2nStF6/bQLTU0M/BPfPahrH5UMGR15llMfz
elw47tnoI6w8eIT2J2c9W1ae7mOExjhFHWflwROqNhxIWMnK4/3wRP5L162n
xlCOcRtrPiE3OpVxum9gX5KqkMs4xu1vbna6vsWMo9+OGIY/6vaRtQcc+YRR
HuPKqPnCkE1KLG8t+KabqhqTqlh5PN8pA9PT3LRZeRpH02dGRaM+y7uL575O
V6G8dAIrD+4lyvdL70vHD2/4ZZ4h5XjuXTX7HJ7qyjiee+Pqun/3CzAUMB7Q
/hWivLg0jwfRo6G6OeR3ncttnL1W5tF9FTwXcd5Umr+r5qTBjWt9aXvoffis
MsexVaz/Ub84Dyfssni/Y6RJHeOwy5Tsx2IeFu/HgovvA4CL7wOAi8/rwcXn
9eDi83pw8Xn9fwA/Za+d
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1:eJxFm3ccjtX//+/rvq9zXRciWkhWoqHMkhHRlE9bRVkllBka2p8WDSpaaNJU
SVtIQyXSUCmjPWknSmn5vp6f1/k9fn+cx/t1nftc5z7XGe99Gg8849hR5VKp
tHMolSqio9JS6QvRDqL19cPBSal0oZ5X6flQ4RmiV4geonK16t/X80HCu+jl
1anr2wg3KLv9RLX5UPXdhbuq/mPh/wjfLdqobPyg2twoerjKXOGrE7efJvx5
6vq+evcz4SOE7xF9ROVX/X6B6OKsVDpa9XuJPqDn71U/VnQn9X+g6kfq+T49
fyl6BlTlKNXfK/qVypHCw9T/tMR4sdo9qvrfRS8W/USlB7+pzePCf6r+UtEH
VX4SPlv0YZVfhM8VvS5x+wf0/KSe/xG9QvQDlcNUP1N0o/q6VPXNRX9VuUx4
T9HfVa4Qbin6m8rlwnuJXqN3Knq3n+g6PZ+p+gaiX6mMEa4n+qXKaOEdRder
/Fd4N/rQO38LnyC6Ss8DhauLrlUZK1xf9F39doD630F4ouZtvOovFP1Fz5cI
7y66o9o8L3yqcD3hF4QHCTcs+7tuLXnPBJVEzz/pt4tU10z0SrUvqe4k0Wv0
+zmsnejP+u1i4V2ZB/3WnH0l+o2ez1J9Q9HvVM4Wbiz6i37bXW0miLbV+y8J
762ySOWOiF/Ub+1En9HvZ4kepeeTi1Kpi/DoxPumccRHCM9N3O5I4SaiZyZe
+y4R0+Z19TEWLLpM+6yXcH/RpXoeKXyY6Cy+T6WFytPxe/nuuxO/S/+v6Xk/
4R80tu7CG1R3XqwbpdKFuRC9KPG+mSd6scqIktcI3Ev0HZULhY8X/Szz739m
XkPeHa7nrqJnx2/5MtdZU9temoeZice8v+pXZv7f8Zm/nfZ9Vf+06BmxzRea
9zNE64oOTzxWxllH39BJuLXwj3q/lfAW0YfoAz6g0l58pbXa7Sv6vX5rqbpq
Gks7PbdU/T6iD6quT+L3X9YY24u+rd9+En5T+EfOqegt/Bd7lP5Et9X/Pic6
Pf7XOpXbVNomXpfOPIuekrjPRiV/X9f4jYtTj/9W0SGiHVVaqv7V1PgT/U9t
lQ7CO/P9ZffZVfiN1PvjT9W9JdyN/Zd6n+wvfLvoS6nfnS66Y9n1R5W877rE
fbU89XgKze1xwn+p7jLRz/U8ijmumHewF1j3Ceqno/C4snkQvKhnaj7IvmaN
r9A89xC9X2v9lN5vr/p1at9E815X871E9f9NvM/od4Tqh+n34aKT9O55qntP
7ZapDBaer/rx6u9f4RNFn1Sf+wqvLXsPbEq8j+eovi08W3VXq58j1faBwjyU
PXhUnIe/1f4PPS9S+0NFf1Pda8LHCv/LfAqfIFwRXabSU3iL6h8V3pv9KHxV
ah7TV/Qx1e/DHlf9c8IHCf8ivFD4QOH1wm8IDxLeWnSpyinC1US30zf+xV4S
naK+qgoPFt1eZYHa9FebWsJP8O0Vyyn2cBWVZnqnuvpuGszz91LJODeqQ6ie
orKH5q6hfn9d87CD+nlW/QxQP1M0PwP0PFf1qeg9rB1rrvYj9N7I3LIEmXKo
6BjVjVYZxDqqv6ply+w3K16jmqJLVE4WrgrvTz3Hx4i+refThLcVra13/uUM
iZ4v2jTxHlqg5z6i12hcBfJM+Gi1v044V5uBotVVHlX98RXvUfYq/KeZxrqT
3n9N3zJOz+tVf4joeI2xufA5omP0/B08VXSSnm8Svkj0X/V1vfC+on+rXCu8
j+jNGsfJavuM+qwmeqfqD1Z9VeE7hA8SriJ8u/CByArhH4UP4KwwbuF2yC49
bxY+FnkVfKaOUd/19N9bEn/DFcI7wRtQhNRuMvqP3i0L3yDcSXhy6jU/VbS2
ymz6jHpOoZLqt2vLXseLORfoKJxNtWms51oq1dXmRtVvJTpEtIbKDLXprjaJ
8BThjsJbC88UPkz4n9Q87wb0GfY6fKBi3aZc9pk8O+ohB4pO1291hZeUo65D
n8gXPf+gftbq+Uq1Caw56yC8PXxUeBJzKvyK8HXC1YSXls1v1yOz9DxZ9VvB
/1R3jbCWp/Si8BB1uC37XfRa1gk+WrYehj62P2uF3iD8JudXWMtQWih8I+dQ
+FnhW9ijwi8J34rOIbxMeJpwHXh25MkbNZ6f9fyA6ncXXaO6+4V3E14tfJ/w
rsKrhG8W3kH4BfiSsLZr6XnWSriZ8PvCdws3he8JzxTeRXhF2fKiSZShR8cz
xdm6R3Xj0MfYu4V1tRfUcRN91DLVfZT7jLMvnhPdpmydkz1wF/tP9F3RI9Tu
a+Gt4cEqXwhvlVvu1VSpwW9l673wpp8z68OLMstV3q2mMlPP9UXfE320sP7x
uvBjws8gR4VnCt+pcU5X/6eqDGSPME6tWYuSz+0rmcfZVfXT1b6t3v1YuE7u
PbCD6AzVT+GMCj9SWA9eqvd+SK2PfSe6XM/9kOOiQ9RuMPxLdHZhHf1V1f8s
uh26jWhTZAB8WOW3zHr4y6ILM/PUm0S3ivYC/OjUssf/kfDzmetuEb1TpZa+
Y0/R2aqro8KxvjOxjVBX5RmVC+DfnMOyx/ap8H2J9brdog61a9Sj7lVf54v2
E52oMoy9GvUX1quIa8xa76lvXCr6Yly/O1T/itofnvtbt1FZqecfcs8z8z0y
9RixuV7MvM63ib6QmefcCi9UgwEqa5AzcbxBZUFmObib+rsysf2FnVBFz2We
Rf+bWQdiv12aWddhn9ygtdhD/7labUYJr9aazhU+R3iD8PPCZwt/K7xQeIjw
cmwg9o/w68JzhJ/KrP90EB6n+k3xLLyUed92zi0Hc437RNHr1aaZ/vd94auE
6yOj0DGE67JXhc8Xrgi/LHxxYdmzRPjywrL5deGbC9tvv+t/bhFuKfyB6qcJ
t059BqcKtxL+kPkpbLcsF55Q2J55Czkr/JfGvEj4iiin3xC+pLDsf034wsJy
cbHwmcIfq/0C4Qui/H5FeH6wXrkGHUr1W9TmJdVfJLwVe545EZ6Nbad5+Tyz
HvaF6HWZ7eqvRF9Um7vU5la1v0t9blb9vpy1YN0JHepVtflMbZ5V/ULhCegm
wpMz289rRaerfCb8H9U/rzY3qM0twjeq/mPV92BvqL4m51f448w6wSeiDwfr
p9g/x6rN43p3htocB28Rvlv4icw6LePpp/qXVP+Q6k8Sfl74AWwO4anCU4V7
CF8vfJPwk4X56Tl6//HM/JX/OlL196rN7WpzuPBtwtM4K8KzhO8Q/kDtz008
z/dkPqNHZrbj6G8XlXkVj38zemNm3RgbZ2jU89Gr0JM3il7O91Zs03yv9r8n
1vPRab/JrNdVzW2bDE4sZ59MjBurzXeZbb5/0Z3Ubgv6SW5eiz3xsfqcnVl+
1lb9oMT2CDJ7XW6b7Wn9vrji/ZNXPBdd4tzsnNuPMVe4aW6fzDzhb3OfO84f
/Ip+0OfnZJaN9XL/D//XSM+Pqf430QmZ9fNNwleJ/pl4HfntLnhr/K6uqcd8
pugX/JcoAh/bekBiPlsvYmT8E6Inw+OE38lMN8PH9F5/5lS0YWIbkrneL2LW
AhsKeXpMlB30DS9HP2Wt0VE/zCxvFwbvVdad9f8n8Twgm5+L+hV61vzUsuPa
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
B0weLznYw6Mtj+/3/wCr5qIC
           "]], Polygon3DBox[CompressedData["
1:eJw1mwf4l9Mbxt/vu863FJIokVJSQlKUGaFCRCpZUcQfkcxSIRSZDTuSnT2z
EoVQITuV2bCjYY/635/u47p+5/o993vOe77vOOd57me8TfoP6nFGmiTJZ1mS
5Pq/e5Eke+vAD5UkKSQvUjtHx79V/w7VJGlXJslmwm9ozL8hSZYKt9TYRO1a
yQPULhXcTuO31/gg/LDwppp8P+Hv9f8Vjf1OLdXcJ6l/lPpba3xr9V+kY9sI
3yR8kHB/9V8s3EK4pfDOwpsLv63fX6vfP1H4EuFW6t9O/R2Emwm/r/6KcG/h
s4W3UP9Wwt2E+wvXEt5U+CzhScL7Ce8mfI7wncJdhfcUfl+/8bxwX+Grwepv
qGv/QccuknyT7qed8O1qp0peoeu/Tn1rNH53jT9f/zdU39tq26u/VP/PkvfR
9T2vtrVwbf0/Qu1Yyeerrafzr9V5a/TbA3ROTY0/WO1Lyd8Ufr6/qr+95u+p
axgsvJlwI+HV6h8vnGrsXsK76v9inr/OP13yE+o/XHiOxtdX/yeFz18qvK3w
YM13u/C+wrsKT1F/H+FXhfsynt/TXN00113Cz6j/ZPW/q/6ThXdU/ybC03U/
f+j6P1SbJny8+q9V/9fqb6XzM7Wxkp/S+Seq/y31n6j+I3XsPOEmws2FTyv9
PHcRbiv8lPDeOneefv9U3pfO17/kSvX/pd9qo/5NhV/W7/8p3Fa4gfAs4X+E
79P4LsIzNX4TnThQ/eOEdxXeWfgAjWmvsWM0/93C/dR/kfq3UX8L1qPOP0r9
W6ltL3m1xr/B/UleoP6prGnheRp/kvCnwpcJfyd8LvejeTfS9W+s9jPvQ/Pv
Jfktycer/3jhCzW+ucZvI3xE6f3XSLip8NLC+2GlcDvh1uqvJzxN1/O7ruUq
zbOd5rtSra/k+zX+CPW/ovHHavzTwgPYP8IDhJ8UPkF4rvAJwh9ojheEjxO+
Rvj00utpN+FdhPfS+E6p13C18PpCf9QXPkPyUI1/XLi3xnfS+K803zzhc4Un
CXdSf3vhZTqplvBRuXXHfmofSe6vFiQfpPZZ7uvtrSHv6PwG7KeoTw4T7ih8
YeH3fSP6S3iMcHPhu4XXE/5Q47fQXD/p2EjJW6m/pn67l9pRkg8svR/WCG+s
8YcLnyncQOdvIdxDeBD3J7y58GLWg+b7V8eelfyz5rhW8r9RfwzTsRfjekff
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
9GBf6Cb0qfBA4dOE1+JTYAuETyf2ULG/hE4hFsU9cW+nqf9U4SuEv4zrGV0y
SseGYNsKx8evFB4WfOz81GuesRXNeTe/pWMXqq975lgnazywJjTmcMk91frw
bnmfqdc49o/9wl6/N7OuJCdDbuayxLFsfnN46pwN18L7xhbcmVmXVIP5Mfdw
TVzP6ILbMuuu53Wss/ovqzhftKOOHaPrqgi/UNqGoNavyGxbsFkFuimzLUNH
Y1vuyqy7yRGQKzhXx95W3wUaMyz1M5pXWIdiO26JuhUdhi26ObNuI6ZPbJ+Y
+8eFY+7E3kcIf1TYhmH7bshs2/AxuferUvue2DBs64TMtg2biC28PrOtZA0+
gz5JvDZ/LeyrXq1jI4JtBL7pZaltBz4SvtIHkS/gQ7K2fsnsW+IDc60/Z/aN
8aG51p8y+9aHFNY9xDTxL/ChWcsrMvvW+Kis3dWZfde/U9smbNTzOnZC6X72
xLq9UbV+W/Yf1vnjUnMcuA42jfOJicER2QP4jt9k3husGd7N95nXEu+4S8Wx
LN49ewjf9uvMe6tGZtuCjXk98x7EV16SeW/yTuBTX2V+V9hcbG/X1JwYG4jt
vC+zbewbrM+Pi/rhtMyxVvR7E11Dv+B8Tr/C+ZtjM+fiyMltnDtHwP7pnVoH
n8mahNtx/8E+/SJ8qsy+/mEa0z21jocv9il9/41jP+933fsp7BsTU/lT/e9n
jrV0LKwbidniH7Em8eUXZ16rvUo/L2xNk2gP2PujU/v2nQrrTmKu8NPlqZ8P
OvVhnTMst6/RU+0RyVdojj46/oTmqFXax4b7H672UG4fo0thfwj7/BL+ieRa
FecX1g/m1qfoN2oF5/jIfZAD2aS0TT2ysL7B1s5jvxXOqdZVf7fCMfe1zFc4
50TuiZxhvdL5ZXQFHBVfGhuJrSS2/1zV75R3C//GFgyN1z9QrWtun4WYLf4d
vsw9GrNNxTmcryS/o/5mOv4g9Lt0TL5V4ZgwsfrLqs41kXMilw2/Jnf5bO54
IP4q6zmvON+GzZ4b+Q+6b4rwuzo+jBhEaQ7yceRT6NpLiQlo/ofgv+q/HxuW
m6+NKR0jIVbC855Z+p4X584H8yyIKcDhiUfsr+c7huet+Z7U+bVLxyDwsXlH
tdV/q47VqDjG8IPkZaVjy/fRSudn8R3wEe4vHeO8OXfMlNhnd7Xe6r8Hn6u0
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
           "]], Polygon3DBox[CompressedData["
1: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
ineGTcf26neb/q7BFmE/x11c3IdxB8mls2AG1q0kzVusp0XqLaZW2KNxNyhd
H0Oxk7AnsPewKtjtWBvsaWwhVj3yOHZynHHYHKxqnG9Ya+xx7F2sMnYbdkqc
A9hirAZ2F3Zq5GNsBVYTG461w16JewV2JPYg9g3W3Jw+Gt9mcS5HDop7kvLF
2XSG7ypJeXxKNuXSyKkV/ce/4eOwj/iG4kZor22ct9jHcXZhI7HTsZextVgT
7AGsBfYgtgAri92IfYTVNJZB+m4b9wZ9bsJWKRfE9opvq7hPU1NxI2KMcZ7F
d0t8g2FltHMA+z6f7tVxv34nn74RGhlzBeUt4i6K9SGufD59M8S3wyDlkbGu
/X4d+yK+TWm/ft8uSTkmck2nOAPj7sR3irtdvLdC2k+xr2rhv+ijYnx/xrdR
PuXnnaX5/89zIPKuupPink21xS/lV8S9ib+fjsZWxvdI3Gn0ey/WTHvtY7/g
0/n7cmkulpek78n4rnw7n+6uDfTxbvx/ut/zX2PuS1JOjdzaPb6/qGnk2JJ0
/9oQ39n0GF8vzg+sqpgqtIv/N83XdjF1194EfAB2n/aGRm7GJmL/wRaLKUuX
YpOx17AlfDnqjb1enM7p2dmU+yIHVi7N2e+X5s3In1UKaS/Fnnorn76h62MT
4z6pXCbOWk285PkkbC5fRN2wlyM3Yfv402kM9m18A/t/D/Dz4psQG4K9EucK
9ke8Y2wcNgrr7/fY4nQ/aJtP5/Tu0vM4zuWWpWf8z6XncZzLJxbSORXnVVd1
a0Z9fpF+J8R3WS6t9cX8/wGVX0XQ
           "]]},
         Annotation[#, "Charting`Private`Tag$557#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, {}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtkz1sjWEUx5/363k7tYm0BlFiItR232sgJD4iNBaDRImBQRGuxa2IhTQ6
XguLr6UGjeEKSU0k2okOF+3i47Y22sSmOhj8/jlnODn/5zzn+/k/W842jl9J
QwhnkAw5UIbwNgkhRc+h28gGZLkI4R73jRjCk54QLnH+g88qehL7Ney3sK/L
Q3iPPeP8CvsN9EcSj4L70bPISXBEjxM7BN6LTxd8B3weXKOhCtnEeTYx/ALd
wmc3toPKCR4Dj4Bfgy+Aj4ETar/BN6A7hdU9hX1GMyDrE8PSAz6n5i1KO8u+
FCzPDHqQ2Ep39FAvrR/1MshdXzSfm+gpao2Ah8Hzvrc+zluJ25Za7of4DGM7
gk9/afPtirZz+exHb9dswXCOfPDetNeXmld7Q27j3yDfT+0V3Isex+8yti89
VnfAZ9H7yU8+Q7nlb5JjI7XeBdvVYWQncB+2f9FmFF72d7kaLU/bc2kn2kEN
HX0vGfo3egH55XfyqRN7gp6mqTmJbQlc5MaZzbn1MJpZvPLUfd+aS7XSaBwT
l6YL44/eWryoOTfaXlP+0gve5zP8j/q7fKduNzPOLGKfUN1ofBEHtJdFfNYy
43mzNJvepOO8qRJ7k8r5ozjFf8JvhZz3fVcTxD5Obd4uOVcy4/ZnfK7jc9o5
P+Y9aOf6C/oT2pN6XiP+Luc94EM+r/Yj3mjeOedYixrPU/t336g1ldkfEX/U
145o3Ff/Pzg/8H8kHlZu1yxfiX2U2X9c9f/eBP8FP3Xc8j+rftTDvO9dHNDO
xefeaFzVv7ioPPR2rrA6He/hP64ljI8=
          "]], Polygon3DBox[CompressedData["
1:eJxNlD1sV2UUh9/eP/dep5KQdgMNXTR8JB1aGCSQKITU6uJA0kpiAiRUCZZB
CyEkWiw1wc8B6kfb1I8WaQlqraZOmiAbibE1LFLajqRN2NQODDxPzjs4nNzz
9Z5z3vf3O3f7sf6X3yhSSieQTcg7dUpf4agaKfU9kdIIejP+Fr6fIiv49hOb
Rv+Q3JJDM0XY+o9WKb2CLJYp/YWcR5/k/BTSQF8n5xq5U0gbeoMaD4jdbaIn
+iFy9mE/i3zM+SP0WyvCHi1jpgXOfV3ErPpeIDbfiNxXkY0ifNPEuqjXncI2
dwD7KvoI8l8ZOT3otxtx9m1qThRRQ7vEvsNsrUiBvorvRXJvEP8Ie96ZUszk
bAP4fiR2Cv8E9lb6LRDfxTtdwW7GvoX9FPZl7AvYc9g/IZvRN6hznfPfIu3o
g9T7Br0F/U3fnpxd5C7hu5fv6+xfFjH7wSreyjdbIlbk+lvoN4h9kZybxHob
0f94GfiK8+tl3Pc37rooH9D3IK1FYCRW4ums1rT2XuRJ3+9/+DnfbuQT6i0g
f5bBCblhT3t7vjlzxfd7LQVnXqoCj17kF+x+5Gf6r2IPce5AFbXt8aiKO4nH
ZJ6nK99fDo1lvshla4qV88q1h0hLHZj0NQITsVL/nn7fFYHR38T/QP8cGarj
DufIPZvibs/he4bY08iOKjAfaATmcmEc/Yt83jrv45vku4z/fp7NfRM/cZRT
7pN7Jdf6quhlz5Uydk5+yBN38QzxYWLvIevEu6vgupyfwd6DvS1Fb+9yqY55
nOtennUW+4ciODqDPYY+WgTH5JzcEyNxVJeP7p+cH64j33Py7YM69ts9Xxbr
PH9bvq/1vLtvILfFcxYsOrAPY/fn/dyf72cN98B9sLb3kxs9eb/fyv8XOeB7
uaPuqpg8jz5Uxv3tIV92Ip1NsdPy2/37PQX+8jHh+7Up8JMP26rYBX1NeR/k
ujU76/if+G9zhn/p9U8d7+m7ygX5Lo/kk7snXv57vOMa+Sczfu35vcRbLPUt
E++o49/rDtrP+ZzVmZ3HfXF3+jK/5bM4iue7dWC8lPEUe33yW56bKydOc+6z
IrgiRmI1lbm6lP+/40VgPZe57j66l/Lft/Kf4Xs/BhyXzlI=
          "]], 
         Polygon3DBox[{{1994, 1042, 858, 685, 1935}, {1604, 938, 732, 44, 
          1423}, {1578, 551, 691, 690, 1910}, {1598, 925, 718, 29, 1412}, {
          1956, 951, 760, 671, 1927}, {1994, 684, 683, 844, 2177}, {1956, 670,
           669, 746, 2134}, {1590, 664, 663, 532, 1844}, {1653, 1029, 830, 
          149, 1526}, {1639, 1003, 802, 119, 1502}, {1626, 990, 2164, 1488, 
          1489}, {1647, 1016, 816, 134, 1514}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktLlFEAx+GjY5ZloCS4FBdu24uIX8BVWyFQDE3Gy6J0Zrzf8p63wJXh
ypXgpkBUwkDFoI1l3ip1oajgsg/Qc3Dxn+d3huGdd3intK71RUtWCGHJ9kXs
HS+XbHsQQgEzLOEwn3OWlfzIaq6whuvcsCZ9wDRrskO40KP6pb7TC7ruYQi1
zsv6la7Xn3WjbtDbejE3hEL3cmM/nfdYYB0J13cu87lnztmuectf3kvmhFCk
D3XK59J2FH8Dj9nJE3bxlN3ssd+6l3/Yx7/s54Cd6UGe85PvfO37ZvjB5q3F
ec599+tpm9V9fG8zupc9nIpat56MWpeeiFqnHo9aRo9xnBmO2phOcySedYpp
vmOHpfQw2+NZD/Gt/dON7nFQz8X7s6TzGz71m74zn9+4Z0/0Lh9zm3n8yi17
pL/QJcMmc+Nzp8uFci9Ves08hnBtN2LV80jEa7LC+Ur/iM+Nzc7FWff/vf/H
TFY/
       "]], Line3DBox[CompressedData["
1:eJwl0Dssg1EcxuF/Ndh0EYOExCw2NrvBZrRhQrSrDVU6uC7udVeXut8Su9Ug
ZceIxCZWjxh+ed4zfec7Tb2ZrnQiInpUb9SwrzJioSJigItc0rKGnHPVESv2
qibsNRY0aa9zQ3l7kyPc4rZG7R3uasze4xSL3Ne0fcBDzdhHLGnWPuaJ5uxT
ZnnGc43bF7zUtz3ojlf2tW6Vcc4yl4x49W91/vFDb/Yj29RcFVF2buA9U7xh
kkX+/L0DP5nnC4f5xLL67Tt2s8ROFtjOebaww91a3aPRrrW/fPfdfmaKD4n/
9/8FpYc4uQ==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1392, 1661, 2038, 1580, 1694, 1743, 1744, 1705, 2219, 1733, 
       1581, 1785, 1745, 2225, 2024, 1706, 1811, 1582, 1810, 2237, 1809, 1870,
        1939, 2236, 1393, 2039, 1583, 1394, 2040, 1584, 1395, 2041, 1585, 
       1396, 2042, 2043, 1586, 1397, 2044, 1587, 1398, 2045, 1588, 1399, 2046,
        1940, 2122, 1400, 2047, 1589, 1401, 1843, 2036}], 
      Line3DBox[{1402, 1662, 1941, 2208, 1695, 1746, 1663, 1707, 2220, 1734, 
       1735, 1696, 1747, 2018, 2048, 1708, 1815, 1816, 1814, 2239, 1813, 1871,
        1942, 2238, 1403, 2049, 1592, 1404, 2050, 1593, 1405, 2051, 1594, 
       1406, 2052, 1943, 2123, 1407, 2053, 1595, 1408, 2054, 1596, 1409, 2055,
        1944, 2124, 1410, 2056, 1597, 1411, 1911}], 
      Line3DBox[{1413, 1664, 1945, 2209, 1697, 1748, 1665, 1709, 2221, 1736, 
       1737, 1698, 1749, 2226, 1666, 1710, 1819, 1820, 1818, 2241, 1817, 1872,
        1946, 2240, 1414, 1947, 2125, 1415, 2057, 1600, 1416, 2058, 1601, 
       1417, 2059, 1948, 2126, 1418, 2060, 1602, 1419, 2061, 1603, 1420, 2062,
        1949, 2127, 1421, 1950, 2128, 1422, 1912}], 
      Line3DBox[{1425, 240, 1143, 287, 241, 1144, 288, 1145, 242, 502, 1294, 
       501, 2242, 1426, 1951, 2129, 1427, 2063, 1606, 1428, 2064, 1607, 1429, 
       2065, 1952, 2130, 1430, 1953, 2131, 1431, 2066, 1608, 1432, 2067, 1954,
        2132, 1433, 1955, 2133, 1434, 1913}], 
      Line3DBox[{1438, 1667, 1668, 2214, 1437, 1750, 1669, 1711, 2135, 2019, 
       1751, 1789, 1752, 2210, 1670, 1712, 1671, 1847, 1439, 2260, 1874, 1821,
        1873, 1822, 2243, 1440, 1957, 2136, 1441, 1958, 2137, 1442, 2068, 
       1610, 1443, 2069, 1959, 2138, 1444, 1960, 2139, 1445, 1961, 2140, 1446,
        2070, 1962, 2141, 1447, 1963, 2142, 1448, 1905, 1928}], 
      Line3DBox[{1452, 1672, 1673, 2215, 1451, 371, 1713, 2144, 372, 438, 374,
        2227, 1714, 538, 1453, 2261, 586, 1875, 1823, 2244, 1454, 1964, 2145, 
       1455, 1965, 2146, 1456, 2071, 1612, 1457, 2072, 1966, 2147, 1458, 1967,
        2148, 1459, 1968, 2149, 1460, 2073, 1969, 2150, 1461, 1970, 2151, 
       1462, 1906, 1929}], 
      Line3DBox[{1467, 1675, 2074, 1614, 1699, 1757, 1758, 1717, 2023, 2217, 
       1615, 1786, 1760, 2228, 2026, 1718, 1826, 1616, 1825, 2032, 2075, 1878,
        2262, 1617, 1471, 2076, 1618, 1473, 2077, 1619, 1475, 2078, 1620, 
       1477, 2080, 2081, 1621, 1479, 2082, 1622, 1481, 2083, 1623, 1483, 2084,
        2085, 1624, 1485, 2086, 1625, 1487, 1914}], 
      Line3DBox[{1492, 1676, 1799, 2233, 1629, 1700, 1761, 1762, 1719, 2222, 
       1738, 1630, 1787, 1763, 2229, 2027, 1720, 1829, 1631, 1828, 2247, 1827,
        1879, 1979, 2246, 1493, 2087, 1632, 1494, 2088, 1633, 1495, 2089, 
       1634, 1496, 2090, 2091, 1635, 1497, 2092, 1636, 1498, 2093, 1637, 1499,
        2094, 1980, 2165, 1500, 2095, 1638, 1501, 1915}], 
      Line3DBox[{1504, 1899, 1900, 1677, 1800, 1860, 1864, 1861, 2257, 1701, 
       1764, 1678, 1721, 2223, 1739, 1740, 1702, 1765, 2021, 2096, 1722, 1832,
        1833, 1831, 2249, 1830, 1880, 1981, 2248, 1505, 2097, 1641, 1506, 
       2098, 1642, 1507, 2099, 1643, 1508, 2100, 1982, 2166, 1509, 2101, 1644,
        1510, 2102, 1645, 1511, 2103, 1983, 2167, 1512, 2104, 1646, 1513, 
       1916}], Line3DBox[{1516, 1901, 1902, 1679, 1801, 1862, 1865, 2211, 
       2033, 1703, 1766, 1680, 1723, 2224, 1741, 1742, 1704, 1767, 2230, 1681,
        1725, 1836, 1837, 1835, 2251, 1834, 1881, 1984, 2250, 1517, 1985, 
       2168, 1518, 2105, 1649, 1519, 2106, 1650, 1520, 2107, 1986, 2169, 1521,
        2108, 1651, 1522, 2109, 1652, 1523, 2110, 1987, 2170, 1524, 1988, 
       2171, 1525, 1917}], 
      Line3DBox[{1693, 1868, 1869, 1807, 1808, 2235, 2031, 1566, 1780, 1781, 
       1731, 2197, 1783, 1782, 1567, 1784, 2218, 2028, 1732, 1856, 1855, 1568,
        2035, 2265, 1889, 1888, 1854, 2256, 1569, 2010, 2198, 1570, 2011, 
       2199, 1571, 2012, 2200, 1572, 2121, 2013, 2201, 1573, 2014, 2202, 1574,
        2015, 2203, 1575, 2016, 2204, 2205, 1576, 2017, 2206, 1577, 1857, 
       1938}], Line3DBox[{1890, 1891, 1903, 1682, 1892, 1683, 1866, 2258, 
       2029, 1802, 1768, 1684, 1724, 1685, 2231, 1769, 1790, 1770, 2212, 1686,
        1726, 1687, 1850, 1528, 2034, 2253, 1838, 1882, 1839, 2252, 1529, 
       1989, 2172, 1530, 2111, 1655, 1531, 2112, 1656, 1532, 2113, 1990, 2173,
        1533, 1991, 2174, 1534, 2114, 1657, 1535, 2115, 1992, 2175, 1536, 
       1993, 2176, 1537, 1918}], 
      Line3DBox[{1893, 1894, 1904, 1688, 1895, 1689, 1867, 2259, 2030, 1803, 
       1771, 1690, 1727, 2178, 2022, 1772, 1791, 1773, 2213, 1691, 1728, 1692,
        1851, 1540, 2263, 1884, 1840, 1883, 1841, 2254, 1541, 1995, 2179, 
       1542, 1996, 2180, 1543, 2116, 1659, 1544, 2117, 1997, 2181, 1545, 1998,
        2182, 1546, 1999, 2183, 1547, 2118, 2000, 2184, 1548, 2001, 2185, 
       1549, 1908, 1936}], 
      Line3DBox[{1896, 1897, 1898, 1804, 1806, 1805, 2234, 1552, 1774, 1775, 
       1729, 2187, 1777, 1776, 1553, 1778, 1779, 2232, 1730, 1853, 1852, 1554,
        2264, 1886, 1887, 1885, 1842, 2255, 1555, 2002, 2188, 1556, 2003, 
       2189, 1557, 2004, 2190, 1558, 2119, 2005, 2191, 1559, 2006, 2192, 1560,
        2007, 2193, 1561, 2120, 2008, 2194, 1562, 2009, 2195, 1563, 1909, 
       1937}], Line3DBox[{1930, 1907, 1486, 2163, 1978, 1484, 2162, 2161, 
       1977, 1482, 2160, 1976, 1480, 2159, 1975, 1478, 2158, 1974, 2079, 1476,
        2157, 1973, 1474, 2156, 1972, 1472, 2155, 1971, 1470, 2245, 1824, 
       1876, 1877, 1356, 1469, 1848, 1849, 1716, 2025, 2216, 1759, 1468, 1755,
        1756, 2154, 1715, 1754, 1753, 1465, 2020, 2153, 1674, 1466}]}, 
     {GrayLevel[0.2], Line3DBox[CompressedData["
1:eJwNylsrAwAcxuG/w7KIrK0JEyai7AuYMzNnNnOe0z4Atz7abiRXWtod4dvs
uXj61ds73XipPndFRI1md8RSIqJIgrdkRK8us8IqSd7tfbrGOhsM8GHv1022
2GaIQUrs8O1T1hTD7LLHj31fM6Q54JAjRsgy7nOsJ5wyxqdtVCtUOWOClj2n
Nc65YIov+6RecsU1bduM5rnhll9bXeeY5Y57/uwPusA8j/zbnrRBgUVeeyI6
8AAdzw==
       "]], 
      Line3DBox[{698, 903, 2039, 699, 915, 2049, 722, 2125, 928, 736, 2129, 
       941, 750, 2136, 954, 764, 2145, 967, 778, 2155, 980, 2076, 792, 993, 
       2087, 806, 1006, 2097, 820, 2168, 1019, 834, 2172, 1032, 848, 2179, 
       1045, 862, 2188, 1058, 876, 2198, 1071, 890}], 
      Line3DBox[{700, 904, 2040, 701, 916, 2050, 723, 929, 2057, 737, 942, 
       2063, 751, 2137, 955, 765, 2146, 968, 779, 2156, 981, 2077, 793, 994, 
       2088, 807, 1007, 2098, 821, 1020, 2105, 835, 1033, 2111, 849, 2180, 
       1046, 863, 2189, 1059, 877, 2199, 1072, 891}], 
      Line3DBox[{702, 905, 2041, 703, 917, 2051, 724, 930, 2058, 738, 943, 
       2064, 752, 956, 2068, 766, 969, 2071, 780, 2157, 982, 2078, 794, 995, 
       2089, 808, 1008, 2099, 822, 1021, 2106, 836, 1034, 2112, 850, 1047, 
       2116, 864, 2190, 1060, 878, 2200, 1073, 892}], 
      Line3DBox[{704, 906, 2042, 706, 918, 2052, 725, 931, 2059, 739, 944, 
       2065, 753, 957, 2069, 767, 970, 2072, 781, 983, 2079, 2080, 795, 996, 
       2090, 809, 1009, 2100, 823, 1022, 2107, 837, 1035, 2113, 851, 1048, 
       2117, 865, 1061, 2119, 879, 1074, 2121, 893}], 
      Line3DBox[{708, 908, 2044, 709, 920, 2053, 727, 933, 2060, 741, 2131, 
       946, 755, 2139, 959, 769, 2148, 972, 783, 2159, 985, 2082, 797, 998, 
       2092, 811, 1011, 2101, 825, 1024, 2108, 839, 2174, 1037, 853, 2182, 
       1050, 867, 2192, 1063, 881, 2202, 1076, 895}], 
      Line3DBox[{710, 909, 2045, 711, 921, 2054, 728, 934, 2061, 742, 947, 
       2066, 756, 2140, 960, 770, 2149, 973, 784, 2160, 986, 2083, 798, 999, 
       2093, 812, 1012, 2102, 826, 1025, 2109, 840, 1038, 2114, 854, 2183, 
       1051, 868, 2193, 1064, 882, 2203, 1077, 896}], 
      Line3DBox[{712, 910, 2046, 714, 922, 2055, 729, 935, 2062, 743, 948, 
       2067, 757, 961, 2070, 771, 974, 2073, 785, 2161, 987, 2084, 799, 1000, 
       2094, 813, 1013, 2103, 827, 1026, 2110, 841, 1039, 2115, 855, 1052, 
       2118, 869, 1065, 2120, 883, 2204, 1078, 897}], 
      Line3DBox[{716, 912, 2047, 717, 924, 2056, 731, 2128, 937, 745, 2133, 
       950, 759, 2142, 963, 773, 2151, 976, 787, 2163, 989, 2086, 801, 1002, 
       2095, 815, 1015, 2104, 829, 2171, 1028, 843, 2176, 1041, 857, 2185, 
       1054, 871, 2195, 1067, 885, 2206, 1080, 899}], 
      Line3DBox[CompressedData["
1:eJwVzr0rBAAYx/HnHM4ui4nM4rxbKINBMdxgMSjbDU5KXSmlRCklyqqTcoNd
XmaznFn+AC95PY7z8jF8+709w9M6M5fJJSJiGvlkRHttxAPusYOoi0jglz9r
iMi6aeEHdP3Y5r/xg1N7lU65aaR99l5s8le2T/qFCsbd1NMeezc2+JKbd/qB
MobdVNBlT2Pfvq5/xRtekLbfodN+ae+ga/onPOMRbfYT2w1dkSfRxDfrSnRZ
ziArp+RzLMlFeeL/35qIY90if6Abo7e6Q12eH8W1vCvv2RfkEVzotnQF3bw8
hCNdORWxqs/Jg5jFHwFjOHA=
       "]], 
      Line3DBox[{889, 1070, 2256, 1323, 875, 1057, 2255, 1319, 861, 1044, 
       2254, 1316, 847, 1031, 2252, 1313, 833, 1018, 2250, 1310, 819, 1005, 
       2248, 1307, 805, 992, 2246, 1304, 791, 2262, 979, 2245, 1301, 777, 966,
        2244, 1298, 763, 953, 2243, 1295, 749, 940, 2242, 1292, 735, 927, 
       2240, 1289, 721, 914, 2238, 1286, 697, 902, 2236, 1283, 1337}], 
      Line3DBox[{894, 1075, 2201, 880, 1062, 2191, 866, 1049, 2181, 852, 1036,
        2173, 838, 1023, 2169, 824, 1010, 2166, 810, 2091, 997, 796, 2081, 
       984, 2158, 782, 971, 2147, 768, 958, 2138, 754, 945, 2130, 740, 932, 
       2126, 726, 919, 2123, 707, 2043, 907, 705}], 
      Line3DBox[{898, 1079, 2205, 884, 1066, 2194, 870, 1053, 2184, 856, 1040,
        2175, 842, 1027, 2170, 828, 1014, 2167, 814, 1001, 2165, 800, 2085, 
       988, 2162, 786, 975, 2150, 772, 962, 2141, 758, 949, 2132, 744, 936, 
       2127, 730, 923, 2124, 715, 911, 2122, 713}], Line3DBox[CompressedData["
1:eJwV0MtGRWEYgOG/XbGvoHl0BQ1rUDRoEEUNIkXait2gTURElIgSkbqDzufz
ORERUSIiNpFo1xU06vkGr5fvXev7/7Wq+wrtQ2UppX7UV6T0hR/UoYBlbGZT
WuHTTEq33IBhrGJLW+Nn7Y6bMIJ1bGsbXNTuuRmjsS/ew6/5A3d6roXH4h3s
4E975F6tjcexiz1ky1N64kGtgyewj4M416xKf4m9mMJh7DQ/4hrtlbswjePY
q51wrfbGPZiJ743ztDNu1N7jPjE3m+NzXKBVK/KkeY7ncYkrdGsfPKsN8AKu
cRP31z55UcvzEr7jv6CETGVK/+RTP0w=
       "]], Line3DBox[CompressedData["
1:eJwVzt0qA2Acx/FHOdhtuAMXMEVR1BSiiMgQIZRarVZKKaWUUt6N2Wo5My85
ExERERER0eLMLfg4+PSt3/85eMrio00jJSGEHoZLQ/hliAUGKbIdCSGrXwww
Tz+H9k/d4oM+5sjZe/WdDG/EmSXr1q2vbPJCFwf2Ge3kmQ2eKLd36DTtPJJm
3/6gbUzRyj3r7LndaQuTNHNL3r6mNzQyQQO79mtd5Yp6Uv9/t8f0khUuqCNJ
Lecsc0YNBe8TWs0pS5wQ7FU6TiXHLLJjP9IKxojyzQ9/Bv49Ng==
       "]], Line3DBox[{1384, 1380, 1382, 1322, 1388}], 
      Line3DBox[{1385, 1381, 1383, 1326, 1390}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
BrxHYaHzZvliqC8EqX31cyxpQyLKbN33myhw3LRhe2qfHTyRNXhtGZqJlHm2
KT7EnbcpvGl6nX8P0u8ncavW+6Abu9dyEc7syfqdev1nwTFXkdELd86rblKm
nm/jJ6Y+aHBB3nSjbzDuXL89iur8teiwq/zXBey0He83wrn01JJzbusNPr1j
LVhoiUgm1XnrknP0BVcxudg0zEH+3AHCuWfZOX7ingmF3xsb+djXTTiTlp09
27O2RHY7YNyNvNf/rOefV8K/0OHOtMUv3v0T5zdqO1kC9mfDpKWl+Nkd92CT
sTTzp1oK4qX7GLr3aQv46dE66F2yh9nXqTbFnGPI7NzL6OS0UXjcNXzA5aQP
hD+PeBsl2oZathaW/MKdh9R51opM2MEUdxJLkUEm0uCNcn9AOIf66VXfuQ8m
DA94Oqt9kPB1Z0bCuVzm6tuIXimg4c6WIuHOGw/lKxHzKvNafPniADdEnOhi
DcCd7yT7U50ZW3QO8E7RwEZr0TTC2TYujupQuPlOx/qONuzQNpcMwtl4/ZLz
ppVMVZ9FM7GVLD3shLPtsvO39QOW6uG+GE/aUn/+uOz86Yq+yidfE2xr9uln
f9bzjFFyQ17CZVLC0crxf+LsK/I6vIL/E5R75nT5qGtDbul65kNVFHQh8e2K
fNFW2MG3b92lOFsw7WPPvjo1ioq792j1fhmFLIGa8yE/vID28w2u2uRW5F3z
JdfvCwUsupme+VfYQWW3Aek3ykSJPx7M6+LO6wcLmZtadOHJ1Okc93IfpHqw
8QcFv37lw5t3Xm+UgRrm/t11mvoouemlIjEvwQX/88oTe8G474G1D+78gMuZ
6lwUePpepwUdGAvesCOcX61dcv5Fy7u21bYDe3BMPZlwTmdYcn490RJybS4L
Y7jIeJBwFll2lnn23ZbvkR/GrD9MPdflLDvPVJzMnq/Sw87eazX5s56ff45w
Zs++QioPuv71nzhvGZDeeZMrB36Tvq50b9KCW6k+dLllFHR3RTdt6EgrTLTU
6LUffwHrSyvuTpSNIsna5gXX6VHYQBcW3VXoCYbTUxn3jrYiVsBWk5rxfqh5
LmXCyg7OrfZ4s3ZdJirUL44lnFtL+JLSuB5Cs0trw9XPPqj5x+5WwlmuJXa2
Lv08TH3XDpTGnStuyitQ+yF7ge2WDB7IK8v1cCPOdWrmVGdTB6WdX+lXAmfQ
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
ABRkFMBBeDKXNYevOSYDXC5cbvK456DfrX7C8+LtaoqVHB8odT9g6sU9w2+8
p3oOVg3uuvluPfwY17xOeB5i46V6Hra9+t6Vl4zRMUqNE577Wpmp8xo9oqkq
s7cJW6fUGEB43rm/5KlMvhHYQM7GzuomSBCe9KxLniMmYsceDr7Cfu5adZLw
FFr2LIr+nvn8ux0mn+zx+M/1fuVZKu3Xwiuk0at8PYSn93J96saKt6uqypHs
V4xo/Z2n+Bmelg+b6kDpRf+Zzig34JYUMXyXTEa2AT5klfleIBuyFWc9CQLJ
XR1H+/cMopfr2dcG455mPW7VpYxasDLQiW1dRABKi9ze9Q7/XkkXZjWemovg
/3Kuf7bSGv3SXdVFeGa+ot9uPnIE7J57uH3DPZkPXKZ6DknUnXMpY4a3yVxM
hCd5cA/VU8KlabSFeQIrmtIhE56zvzdS5xXM5ftFO7sFe1sDboTnovySJ+N8
x5jtfC4WE4+JEp7Xti55amtfdI2ueY3dYTt/mvCUXvYs3m503+uQLaabsc6V
8Py47HkM439xzfoa6cudPo4c3LNjuT5NWtd7pjQ5k1jDIz3/tj7fMhb5stSD
xIf0V5vqnSFUMPSGrjMZMXy9IjfyuA8c3tVH3NQKABEJyfjU9AHUyS+YGoh7
nleNTUv/pA2vPLVSQsMC0FbGrHDCMx97KXmO/Qps3TycoY17XoirbiE8k2y2
M3HGCEB5JyWzAfdUou3wpfaxwYXfH7K2gPXbO9aJuGeQJzvV8y1Pa5v5pils
WKehj/AUnttAnder6zP3zLk6sFM3K6mecaJLnv6KEOEJBZiD4yFEeMZuXvLc
I/PKKE8zBnO3OH2C8FRf9pQILT21f6MN5nmtx4LwTF727FARPaTz6iZpOzlv
gqhPtFyfbiwHDjhp2mCcCTtN/s5ThpaxizuzDkyuSt6n3ekAIRtWHWQKJKMp
25Fcw+E+MBV3f5Xw0A8YTbcNOl0aQD6aft4BuCe3daOYKr8OCO6WdacJDkD1
H76pEZ5YD8+p+WMKMCXqumhVYY3spcvrCc8ynXPbrisLQ/PJ2yuLcE+jFRpU
z0T1i5dD3rACuuEbmoB7sq7cQvUsv8b+II7tJ1ar0N1AeBrUMVHnZaEnl3u/
ogu7W1r8nPAU27nk+TE6QqX/2mcsjHWUuh9dZ17yfHJ7c/4O47dYrewr6nms
rnXJp+T0KjrpODfM4qCNDeEZtex5fJT7wME+A2xTveqvP/ej2PIHTGZNItjm
Zrtbf+fpqcSavMatHuytt1wo22kH3L2sb8Yfk9H2zjFDesV+OP9J5yN9hC8I
1D070TfUj1jOumf5455joqIS6IYuJD/P8GbwC0CljH2shGeUluGCAq8SXNrd
Ly1abo3Q1dUVhOfbu+IVm2ePg9SrHwmJuOca6zIf4jrHp5+q2/hsB6Yh3tPx
uKeh8VqqZ91x67RVrLNYo1B8EeEZbbueOq+vj16vsaHtxa641hkTnpSfA9T4
9oXcLvmnpZiJy85ThCft+iXPz7HiM/yGSVjSgzLq/q697JnYm9D8jN0bO6F2
5CnhGbfs6Si8PYH88z7WzMU/8afnd8YmMe4KetLT+LP3/s5TdQWZQ1yuAc53
/dS8cOcF8Nx0JB9RISN3BqbVH1P6QcXq/SFlWh/wCp0WeOzcj268cBAnPC04
fSP95B7C4GpfIS+PAFRVwdCURKwvW7YnK2mvQmfKtNPzUmt0Ty+ggPAU+3Z2
sNL7BAhfsK13xT35f/NQPe1bZ+M5zTjgDDpz7S3uKZG9SP090Ogr0g2jLAuY
e0J+AuF5ceO6pfUezZ4+K9SPDYTWaxCe9F+WPK09zdZE01Vg4reiqefPfMYl
T9GQFRRK5jssuINZhPC0X/Zcu//Lx0tCXliT5S5DwnPnsqeG3FyXUpwj5udH
20V4ui573g7waZgJuIPZGTNK/51nq7kUpZ62ETiiJE786LMGpm7HuHJRMir2
bWedXTcAr369vsLi5gVx4Z+CTI70IxmWlGOEp/834S/tNPrAsvL4sINDAHpc
dj6A8JwRzDqslaYCuzcUpZ0ttkb7812zCM/oStlfb9hJENnP+Ogm7vkq7JE3
cZ19qsc0HvHvhr1ynFkxuGfeyA+q5we1jf03nGkgcX6DPeFJ0VtLnddRw9un
nxkNYh6fFBDhmRO/5PnNNUv29kQV9k7z9HHCc5BhyfPwp6TRdR+TsdzbXkcI
z9vLnqvkHLTPCnpjxSJWzwhPz2XPUM7ID1LGT7BizJQ254/6ZLp9Yu8V5XMY
p5Sa4d95Ho6Ts/GPaYR1GWHegv5WsCvgilcGOxl5qUYHuWsMAF2fkUytuCdw
BCkVlbf2oRDEHUR4yu/jc6wUM4BoaP/Y9SwA6X02vkl40nf96Dwvew3YS3hP
WhVaoxm9n+8Jz8SzGdp558XB+dPUk324Z3b/Ry9qny+TLXMP5YSEWvlzr3HP
DfQDVE+dwZ3ilqvpoFkuSZnw1Hizmjovv7s/ZCPihzFl4dYthKev1ZKnhZSB
vl51DaZz2V6Q8FxYueT5M/N5VcrPDxit/thxwvPIsicDe73toKsPFnT78xPC
M3TZs/AVDbM8kwl2R07655/rXTM5vank6jFM4f7Xvz1/frj0fMce1ASrrgWL
mHVbQk/uQ9UhGjIq2jBidDB2AFbLmdE1HXGHhfRVlyVd+5CviIg5sR+9r65x
dW02AAuLW/1hRgFoC930YcKT4VUOZVOOGuTL86J9edZIOZwcQ3jOngzrOmEt
AeMcfRltCZroN1uPJ3Vf5nSkfbh2D3z9vq8yDPc8O91M9VRbuRHLdlgBsXru
2wjPN/mrqPM6t71G8VHrKMbjHjMki3tuu7zk+TV295bFo3WYvb4Y9bzkQLPk
mZ+8tiSgMAX70fSGep4Pb1nyeWnp10c36YdZv+u1JzxNlj0frFq15doxK2xI
Vm6Y8Ly77OnA1r3Q8skMU/51/sbfeUZdNBb5WtEE9M5dTtKtFrD12hbhi/1j
iC/epU6pEz/P8MhuLdV5AQbyaqO0ammIn1ZHmQH3lL7tUfQmzhBc97Mq5RwP
RlVyswyEJ4eAuZThBg3IXwspR3Oskc7GFyGEZ6XK0Ihy0mlIFsmjtcY9v3Ss
oHrm3nze9cKEG7iTNvME4p6cY6VLf+fEXfGr1Qp62Py6rDQe99yctpI6r8YG
cv0oIwUbH7aKIzwLdyx5llinR4T41mMJ58uo633V3PzSPnJfnSZIPw2bV+Kh
Pr+fXPZcjBHhN6INxMx7hx4RnrbLnt0r5/0L9llgK6czqOd5w2VPg1NW7y6o
PMbyTdb87Xm+h71tT4lDEVy8ZK5982EQ7mRZYeNIQducuD8R7z2kS8xLn/4Q
gQa/pyvU8efKmu3bqe/NetdwM7YyrQFew7Mk4r3ZUEc39T3YtkXdas6aVizK
qZv6fmxd5NJ7sCOyKxbHWN9g3K9eU58reZffd5Vuet1CM66EzS4yUZ8rQ3OX
ntMDZsaSa+ojsOn9fNT3V+uX31955j307dN8RPp9N+n/MPfm0VS9//93yZii
qGigEElSaJK4KkNoIsmQDFGkZBYyz5nnoUyRkGTIEGW/ypApyhRlzDyeY8hQ
Svfex3l/7/f3s+7Pe92/97r/uP+y1nNd63Ltx76u1369nufs8/pfPlWt9ccf
iRdkpbnn7SncfKl5JivpxwXFMDtptj33KH6UEdVfKjWXXCo0TZY+JYhN/T/5
S0ffsWoS3NoZa2nErKtgR4aLNZd0NFQYchoJWpHRj+qXIgQfHfq5/SyqSrAk
x91mjvO5+/BgNsHHccFQRWH9PkiqYGgn/EPr7GMUPns3cyq5Ka8Fwzm/YYIP
Q5I7hU+1Zfv+c1qjmI5VG8UPJJeu+Hv3T1e4RctWY6rXmCj+nmA0lc9U6yqO
U68xYXm+CErci1nhc+rAEulHUSzmkElP8fcUqXyY3z7ZLfLGUTpKVkOF4JNJ
5TMUQEqbrNWQZmZPcf97nSinXiK6+62S9JyM/gDB5z99Nj6bp/+4r+p28bf0
b6kFbdE7auvORQBf6dVf1y+RkYNW+WnC/yH/+tlwU/AyhMvby7rg3BpuzkYR
3A6+HDol3XIUTtxj30n4aQF5fhQ/7SD3Do66QE6oVHSj+GnHF29SuGmROvzE
gxcx2/AIiv/DvWbFT0tR2CrjpdSOdTpoUfwfDaUVbrbOWn/eir/HxqtfUfyf
hZAVbkuBxaeuBGRgwSPhlPhWu22FW/T8Ls7EF36YesZ5SnxLonL7apez06LI
VNqt7nLw3+tBjTUNv63HNKRvJN6i/fvzt64iqckl6JR00+EPmv/ErYjRyVbg
xQe4fejLjX2kULA+f8PljggZZW8bW5eAc7M8Qioa/6YFIUbrd17Dudn5qVgS
3J5E17X3/TwJ0i8qThO+2a7GzkmC26otp8yWZ3hgTPnJNYKbRZoEhZtXnH7S
6DEakH02S+EWsX/FN+O6ZNPwkrcPO6Z+h8JtuWXF54mc41Z5QPcRs71Xmkhw
a/Re4ZbN/Xagbm0eVnO1n5JXC1K5Xa5WE9hhE4bFcf6i1H2HqNzqGH9cUt3i
jV00Pqr59/0myOi6FJ55VnppJmaC2G861Dr69vDauVdhoVikmdA/5tXx5Q2e
cxwf4QHH9aC26WAwGJA5E8NERqZRnOmEnyMrq9P5NkkPWh1T2ZuTY5Bb1+vT
BLfe75fnVk/IATn0scN9nFt32yGKP3a8NXXNVOQecFglGEOcU8WunxT/gbYD
fbgmwAhub/QpcaxRbMUfSzT1PqgmOIKNVt2gxLGyEyvcWIVb6L80NmPvdqFH
BDeVeyvctkZN1sXMFGHLsvPyBLd8TqqfU+RmvJTzEGsOij36d3+MYcOpwzk5
Nliywwefv++3jTLnVw+ra0i3LC0N/93PWbgQISay5rx0wPw283/iJiFzvnN/
2idY57eVdT41APp1dW78GiAh+9ByMcK32fstSeLmIwOwDXtanvw4Bn3bs2Et
wc0+QHpnYr4SKD4/Xa6Mcyt1ejRIcOO5xW7IKbwfknRjVxM+WEX6Mwo3z6aB
J+c3soCpuTjFB/NlWfHBbii+u9hymIS10otSfLA75is+GK/YWEmrWTtWEj8Y
THDjv7HCbce3Ks7pG6XYqYMvThPcuKg+2IXzB5WmSpKw3cXrKXXxUSq3N3b1
YXPvvTCJK9X2f+fWTjqv8TZIU/p+/X1O4pz2U/cb/W7jLWR/P2kd/qf/yG1D
Y5uiT0YjLJhoMMR+eQAlEYpRB9+RUMks/wfCn3koNNb8QesmtAfG7whMjEE7
btjXEvXvFhM7DqHzF8GEYVvxYr0b6pTe3ktwk19i33RRUxS0kcI9wu+alVek
cKtU/DzxYWkjsGWErCe4KXSt+F25bdIqNBwzmIS/A8XvSvNe8btE634/Nmru
xLblO1OeC9LnV7gFp+u2Bae9w6xN71LyDSeq36UlHnmjJjoFkzlSe5Lgpkjl
9lBP5uEgqyemoX7bj+CWR+XG37xYWc2oJ714toLyOY4Udb+1xvQnTse4Y59J
Mf7/xE30RnTA5sgmaGCj4zlo6wNFmfnavgkk1N5YGUrkvYsZs200HcZwxb4r
Tz0uBmleUPMmuEXRBXX4t6mAJ4t6mj7OjW/r2y8Etyke/sd+7IdgXTp7FOFr
6Ux8pvgw075ckroTmyBhv5Ir4WuVua/4WntDv/i/4ZjDaHY3UXytassVX2tv
v8hJ/eReTCW0P4DgNnVohdt2Q7lTiccqsCNPWim+Vj8b9fOvi24ThjZpWKJ5
p+Tfuf0+yFXsy+yJBYVzUuqyNCq3T05x15On7mISZ2CB4BZK5Vad55z4KOKK
tI6Zj84/cZtp2+mX798EoQJ3N2/57Am/Uq8msyWR0PLtoHii/joWaXJr27bb
cPKi3edP0TFI9/jGkwQ3lJ9S/XRMFdKxffftP7ghhfUxTQS3TcZL143Lj8Cj
xbL6Cpxb0KgqhVtiie3mtC8cwNAdEUf4V4bf2SnchI+uqe7hXsT82r9R/KtL
R1f8q8cax2+f6ujDTqfFUPyrCrYVbl9F5/xTr1ZhXtfPU54L2IYVbmEmVR27
jz3DyE5xUgS3Nmr9Zf2IrjbjbCD2LOASJQ95TuU2IXiczW3cGNtJ7vtfn6dc
z46Wux8ihtkZzf7j5ynRdbozsirNoBt8c9eT7R6gvhAnF+hGQmzPkmkJbqlJ
4iE9HKZg/JaVpyk0BjncZPlJ1AVLn4cL13SrQeIp/yKROny/XXlZS3CzqR0y
umMkAefSbusRPhXPybcUX0Vi/77QooptYC/sf5LwqUb0V3wqT91V/Id2LGGf
zZ9QfKqRthVfJXjE6f4blkFMt3GzBcFNd3alLrB4+JH/4EgNxl6tT+HmSfWp
NgiQu/iGs7APb+YPE9yEqdweD1WmuiaHY/PZIZS6dSuVm/MTMYVr9A+wqS1H
+v/OLTdX1XjXBzrpt1n0Kv/Eza/12VwTfQtUpltr9se5wSWWUwUKhiS0x6b5
cxTOzY/nXHVg611wVTtnfsovBokwPygkuNHfnNxolKMOx/5cOWNR44Zyb/KW
Edwkjuu3hi1Lwr1LiiaEH3X7yQ4KN0mSY7VoJhdYDeEpFlFPpa34UYaqL9jl
dyxjbIrvKH7UAyVmyvplr3ZG7zg3jEUuy1P8KJEPK9wUteQe7Hr/Abuf3ECJ
b+epftSDx04H3TlysBiji5R6P4PKrXH4+Y1b/CFYl+kVS4JbGJXb64c05sJt
97ADy3uW/+5HVVn1vejtNcQ6Wrv+sT69pc63rPiiBfYs127PvegKMWOnw6QU
SMg5KYab2G/sUhrZ74TMwXb3eM0GNzzvtfK5R3ALsS9gF9DXhNKZxi3iVW7I
S3HhFcHN+L6iQYmPNMzaVo3p4tz4D92i+E68D4XeTcnvgos964sI3+lL64rv
1LpN8iVd4CroiVhN8Z2mo5ko6/++UPWo3WsUe6/kJEFwi0xZ4cYUsVNYwO4j
9kNDm+LjeVN9p9OJyJSzJxcbOruJ4juZULk18b/+47oqDAsREabEtwQqtzZZ
Z9buGCtM4Fvk//KZZ0Zz4UWjLDbqG/6P+VtlHAOmqtgKcQ8yNmWrO8NgXJan
7n4SumZu/o3gZqbx7aJjvTk0z95Vk7KNQSnjNdIEN8mh8J38U1qQtGwdbFzh
htS+yGYT3G7Lry+YdD0JFiPfK/lxbgoaTyn+0raFAjXuQh54maJ4mvCX2EhD
FG4+9Zn1a5lpYMv1Eoq/tKuKgbL+u3nHPpTkj2OX599vJbgVWK9wEzvYGzYo
2IixnbpA8ZeOUv0l9tNZHkNnX2LjDRHHCW5cVG7l8MtbhiECW3OehnJO7ajc
Dv0clv3q7YLtURoa/Hv9nnW2UG3w7D1sY5TqP8a3mUOda3W/tIJB4uqb2mqO
sE2YLjGRnYRqjHx2EXlIbP5Zuq+XLUB1s3BX/a0YRHO/fD3BrUDpuEL5NW1w
35zcyPjODdX7cacS3ArDdmyiKTwFdkF/Pnc8N0BcUS0U34OkzJpfxssHvI+Y
qwkfiaVrxUfiu5rjp+y3BqSWfSk+kvAHupX8X++XzcjwJHYyzWaY8D1ey6xw
m+EIcd3r24TdLP5J2W+9f1Z8j31bc0w/0BZgsSVVlLw3nep7YMxGVx9DFPat
t5niI/lQuT1RiBUPvn8fsx5/PUJwM6Vyo5U7oWvRaIe1OyxR6tOl8un74dLv
4auxDuvrB95w/8uhre3uZHTuy03JG8b9kDQSLlnA5wlMB42edpmPIqvQu/HV
5v2QsjzMFFaojZ0MVf7x3WQUbX6est7xLgkadf12fxzTg/VSSRWXa5vR+i9u
yYdwPcmvJyO71QKehc5fSa9rRnGjZdH2Hu8hQYxNrVkuGgSzlav4nMnIso/n
6J0L/fA7hevSc+5YEOlxeL3KfRRJ/eBpCzAlQXxHiJPoW1dIa+VrNWloRqUe
Xkw7cd2KhXb0Y7on6G7Okub51IyMsxs2+XlUg3hUc/dqLBK+6kk/u3+TjJQ/
Fwv54es/zii9fpt7AjgJDYSH3BxFG/KKZt/cIcFlTkf6gkk/2DLf2B+Lz/Mt
oYpuBte7j0tGR78IBCnlCXYN/P/qN1XQLzHWgRFv89STK+HQapqqnydHRnQn
7wbG1vWDVT79+DfeREiwR3PpO0eRoIMmqQ1fJ7OtUI0ZUyjkcc4GrK9qRkoG
W04eNCOB0R3BPsmOUHDIvnCEGWtGJOcbnVe86mHVWO/S1JFQYG/SCprnIaO3
Q9YhXacHIH92y/cPXfFgVfKp9vTbERTrpfe5zYIEOzrOCfOLhcPL9Vby1583
oyXHuTs61iRYwuqaRCLCoRptZNeIa0b3EhR/b2z/CJk+KVt964OgbtXO/vu/
SWiv66BXa9kA0C2SVETGHsHyiVv9/WojqPd89+NCOxLA8JYQU+kIIJ+T/Rzj
2owudJ70FXEkwb38tV/qLkVAalj1qhqTZmR9xvauzu9P0KorvIQV+ENFEavN
uS/E5w6SdgdPDcKXgfZkn7pYyDt57InZyDAqdrh1u8MNXz+do3a5awQwC636
8lG+GcmFRs3PeJHggHio03WDCKCzaX3wXbgZ3dBYqJVbaARjFuzg6o0PYH32
1d75AhISGvr8kKF4EB7cHle6VRINNR+dDc47DqODYjkGXgEkUFKekPeSigBv
Gx9JtjXNiJ12xnMmhASP7gZrBdBEAK3S88j3Q01oo7IYr5bgEGTPyGcfaogE
vfSo3V3sw2g170Fm+hgSHGJ4tUo/LRxkLsM0X3ETcg6VHw+OI4HEDvGh29rh
oP9HKeHFoyb0wmjJMy1oCDpDXM92skSANc+6NxdzhtDLtGSP1hR8nlSX2Jxv
YXCY9Fpzw50m9F7rSPbldBJc08m/GhgcBhrxHNy6F5rQzgPzb0QmhuCJkK/n
OqcwYHl033D3pSFkk2+lG55NAhXaPHlB2jA4QXcR28HdhOQlt4WTXpLgN1i7
XMkJhVusRkpNq5qQv1iumM+pYdBqCsvn2xIKKvdy2K1+DKJKw9vrV70mgUlM
U7kIdyhIlfPE9n1qRH+YjjoIAgkmaV4q/aoLAd4cXQ7j/EbEwzXLYBI8DI6e
1jnaz4OB6ZTK0a1PB5GCd23l90oS+Aio1FtJhED5t4di1l6NqPNuTXtfDQkW
tZGQR2swWMbz7WEyaUR8j4efRX4ehksnt8pVWQRCLs1Ec4v6IKLz/nZN+xMJ
9Dxa05KKgiB9dziLy4lGtItt7ML6FhIsv4u8dIAvCL5HR7fI8TaifaZ1T4+/
I8Fxvft7VRUCgcZTFo2lNaJzhxIbQybegyvLyOK6ly6Y71VWusD7ZJStosyY
XVMJ8amloUzPo+BK1IvIW95k5G2jPh15pR8OpjSPTfl4w3MPcq+i8yjqOXNZ
h5X43ZW9PBeDFO9A7i0uf9fCFnRQI4B0rOU9pA2bijsWRoO1tfL9Ow5ktP+n
3KTeiX7gHtgvoNQUCyeeyx+xDB5F+d2vhaLkSMC6bzdD9ycPOGohb8Vc2oJe
22RNK8vXQNR3ST6atZHg+Par4Iw2Gb3ITXz/w6AfypeZGQ3DE0Dw2SLjbjwO
+4hJL6rj82yZTfXVvhYIRTtFJh6/bkGKz5MZAjvr4FVxsaBvfBgo1qjuET1O
RqwnOW8NlvcDaYPVrcWeBLC/Vh9Qzz+K2hbWR5oqkICpzDKIXBkKvIPa3IJp
LUg575lCrUoDjAlYcBuFhYDwbobnZZvJyND4bZmF1AAIH3ideMIpHvgEH1c3
VIygYFmas3suksCzedsmPpdwkGqrivrp1II4DIfFLM5+As3+kV8p2YGQvM2f
hn+ahAbOzdyrLx2AJ6SiVSJej2BzQ1G0ktYI8ssKiWnUIMEmXbrGvuMRkGnT
sK5EpgW9SezSkVVrhHVNo8yfMT9oGV3cz11PQs0Zi0e9JQeh7HntsWN3YoHB
KlQ6dHIYnfyaIWdnSIIf2faqjkoRIES3l1/jdzPy3Bgs1HumCV5GXfpMe8IX
st+yMG1/RkJhcbHS8nmDUGt1LOiEYTQ4dnK8SXIfRgaqbQjhcXXad2ENaSwc
dgaEf9HKbkY3n8T6J15sgoXu6qvPr3uB+eueTZsz8HxMq29Re9cQ7JlRMC13
i4TA1L2MMduH0bZjuXcdnUmwVtE85cGZcJhnZq+4eq0ZfZLhQcLbmiE+k2Np
KMIDPmHXc8WJ77cwFD239BoC9snbFlF14RBttGferXgISe3gv17kT4KWzsE7
DM5hcNbQsoZ2bTO6Emw8x93SDHstveN30LuDM5++RfgdEmoofnzuy7chyPQ4
Mbl4Kgw+OtHqVWsPoejEGYckPI7Jqv1gl0oOhSLJL5qHi5pQ9+ndr2xcWqCp
9nxFYKYrRKoHCB5QJqFSU5XoA0eGQfVzdeGhvhCoOXWp/R7dEEqjPQ30qSSo
GVgMYHkXAgaOzloHbjahqE6OgXGuVuiP/pjA9MMZWLneFy4dIqGQqkaWgx7D
IHSC51OtcjDww0sV45eDKDdGdbEhhwRZL3/aHa4MhqDWuHLgaELkGDHWVbmt
8ISz4lNfvyPI8TZ8GNtGQk12DxOja4aBI1yJq3RXIKxJnahUuzmIti70lU/g
caxtPOdVKEcQHK03cNH90Ig+dNdlacuT4I3Kz7MsAfdBJ+WWZGlxC9oVX9HE
i5+jAFvj9aMMD2AiKHVJBmtB5Yw5e0zw8c73xr/vuxMCocKWixvyW5CH68eJ
a2dJ8KxJUHJDdRjs+ZantBzRghjv0UVnqZIg+tIzB56FcKjz82F/cb0FOUk1
ilvrkCCff30iSTUCNiUbkIGnBWlXHYouNyGBsYXFJh/+CLAcHjRZ39aMrkvf
zWy7h8f/tVHOkYnhEKNVk5rp3YymsKN/duLPQZGZZw+4hsKgjeX3lmLxZpT2
xq5FIowEyRXspQ4b8eeI29cm694mpKDMu2UogQS+hlE7ikVDofiz23qToCZE
t+/3sz/PSPATpi7uVAmBA6rCwY+km1B8kpinVSEJ1oQfE2SZCAJ9dfH89OlG
JLLjrJvmzX6ouKwyNiHlC2axIh/FLUfRoYpKD131fggt+Z3AtyEcvotMrPd1
HEWnTTtcdM73Q/PzZbV7mg+hY/aklROevzk7zw8l4XG1RaZBxyknDoJK+Bza
HPC8S4g5e51NPyTH+48K/kmAz7Nk5/nro0hJUfR9d0w/KPDu0t92IBE2Ku0T
OntmFG3/c+xBW0s/bMTGHbWPJIKd7MJ3dc5RlHBC3Ogg3QC8W/4ubp6SAAuv
ZIJoZ0aQmYvL3RcXBkBTxJ1JAOLhxOUWwUeFI+i+LG1hmPsAHofJTazkOOAV
8ff94j+C5LNUp6I/DkDL7seSLIWPQP/Dot7as7ju+e5kHM0gKF2Y/fOw4yG4
r6a7fmTnCEo11t07eX4QMl+Wym8NiYX+qTPFAl3DyHx3az6n8yDM7ZUeUIYY
2PraQJwubxjFLHMKnqgchPGmQBTjHA0K0+3e6yyGEa9A3tOP04OQpeBTMYdF
Qb3mlafeZ4aRzPvlsRrxIWhYFs2TjYyE0bJAujFGPF9S6XdP0h6CQKfF3sqR
CNisbklr9m0INT66cFQqdggO6m3xOfg1HIoGLe58Sh1C4rk9+fexIcjzq0X6
J8OBo9DUw891CJ3OrzkxNjcEF888p9t4PgzyP/vI7FMYQueS7j9s5RiGHhde
bduKUHCptUnn4h9CPQfLBK2UhoFuAoSrx0Jgl/3CPfqpQXTA9ofK1VvDYIht
pQ+2CIHPo2vbuD8OotALhsuR0cOQLBMveFEnGFjU+pSOxQ+ivrJ9HHUvhyGY
SUOT7B0E/jylBzSdB5FZGsMIF14vSEg3TwkY2oCWSFDhEl4vHGre+rXrcj/Q
lt/+TotFQBLLtpFt+HNZs4XTKhPPq2fbD/nF73YGsR7SBjo8P9dpOTm4Gte1
9tJHpIt7Q8dEhMMtPJ/37ogPOKLRD3z+eRFJbvGQoifVYGQ/iqaaHwg04Hn+
mF78g4KABwAh3dyp+PiLBlj+PK4rKbLWkr8FQWo5/6fK+mYkOl8rsiapH668
ZNFDdxNBQ+WR2/NTo2hJLfBIAf5/rQtlC3b7hEDA47TXKtXNiHlgNMsWz/OF
HVIWcuTDIK9dzX7+dTOylKetWmAdgMfjsYgUkwBW9rx610ZHULU67TMT/LkT
zF53QLQzDN6MzMxq4M+dCU6+hRk8nz913+SJ3edwWLqZccUhphk9aj/WTBs8
AGsrGUclyuNg/UR4h4PbCOpb68r+C48nLrMOfi/XR4DEZWEnDa9mJLCF7uI6
JxI8PVPsy28dAUXFW9QP3WhGuZPPt1qyDoLj0JeBxOSH0OkbdpRt0wgi/zov
2O1KAostzlJP70QA6XTUxT3nm5EQO/s9Zh+cs8xTXTlcL97vnEPmb0a0IS26
cX6DMPkwr3iHRwzcUMz/k/8Uz5+7Rlmu4M+vDFkzEj1eR9Bc4EjMwp9fgyFG
GofwOFbBZ7FT8Wc4dFqqZGV24/kz3aWbT38PQsnLnQKXPPE8ja5Q5uaJYbRJ
6vrHgigSiIYXf5orCIfddfd3pb9rQpvpeRvH4klwX1SGvUIhHLhfSa3/HNaE
fjF8k39iNAT6roMt3bkRcET5gnPe5yFUN5Z61iqZBOpmavNaP8JA3o1DQMim
CTErcp19nUGCB/e3ra62DoMt/hs1Nss1oWoS472U6iHQmvYlM7GEg6rQUv85
2yG0YLlhSOgFCZp+Om2W5wmDZ1Ah7LOnCR3iYn5/pYAE7uW/mtxDQ2ENK/+j
ywuNCLzKovfwDEOr+aunjVGhMO1e8cBk+xAy2n9lPLYY3/+ZbD6i0qEQx398
3OgrPv5XzUb/tySIdPE2k8gMwXmrbRl8hj/XjreLDFoMQ2wP6/VbCiEwPTbo
tFg5iLRrDoxHVZBg/9Tx4UdaIbDmh7DFRFAjmlF0o5Gsw/Nzic+LS2HBkHNP
HUvWa0Q/PU/ei389DHKk6YeTJ4Jg1cRD0zc2g+i28vknaz+SQIr5yamRH0HQ
pMDwpl6uERWceh7ijNfRF75yBL+KVoHTr4Y3C98eRdNJdMae+PnNeju/WURU
Fd6/CVl9uBav09UXvAJxPbTeeerpldPYFfFcSXpcf/h+vI6tG1//74YD8fsC
QXOb4FOHi4Ooq4WNt3dhGEqw62d6bgeA6Z7bSW5ig0jgq2Gr3N1+2NA9WLIw
aws3FYrnCu+MorTNmyJ2jA9DV/jZ3Ku1AbBkypDac3IQ3buctaeloRWUtiGB
O46O8NWT4bnvZhIai7x7m7+lFR7brnWLMXaEql0ifGGbSIhDz5NBoxXfz7sf
Tnl9C4TaWb589q2NqPUDp3/7xiZgz9rnIzDvBXJh7MNH8kjIbrBxQZq3Caa9
o6pc6r3A9kBqen02CdXRF/3m2dYEDGXpvZbfvOCO0y2VPzkk9CaX2z38WxN4
vDIyGGD3BJWnC7U/wkho2ytu24SpJoip3+z2YsoDHty9nZUWQkI5ho1zwqNN
EHpiq/Tiak/YLNA2Wh9KQl8/oiqOpGY4LXuNeYe1O3T7jIn+tiYhA1/G7+NZ
zWD6KyvWUc0dDj0YEy23xOfZ9+k5e1ozxG7S/uVj6A5NcokBXVYkVD9YnG1z
sQXE547YGTO7AccBiSBpDRK6Ozh46rB2C1ww92V9OuUKOt10aTuukNAzj7Hz
g2otoPSIBqv/7Qoi5Mv8+9RJ6OLI0xCH6RbYqHmCZetjF7AyCD6ef4KEYkxW
Kcn+boGU/DFmTksXmLp+ryHjOAkpjyu6mC60QE5VtuvRBy7gUUbCnkuSkMs6
I8UCn1bImXb/wmbnBPovzmUr85LQg2Nl156EtUL0ZnbZiAtOYJecXqO9i4RM
7LQ0JAJbIcJd+cpqA1yvDXpymYeEbtI3zTgvDcMPZ/d4QaUA2K9+tfK2yCCa
VWboIb6XYhTl6+B2ZBPI3eeu10iJQcML6Ye0esmwxcevxNhbE3Yq+1gJORSi
oESFUm1cn5orM6a9ehZ8ucRqR+0LkflJ6UjKPEnvTI7+OAmziQm7TPB52BpE
7JXx8Sd6wm1cq2/h9U26dDM+j67/Jy3i+1cTx5QOvzhsCNOOvHu8cH1SAhsi
vu8RGWnD9krwIiyFhyc64fOQVPR6ZPHxatvd1m/+agm63j4lJcR4m/Wlirj+
blp/o5SWOXTzDgjM4zrfzfAB4vsPWzYxHF6yuAKtHnf23cXnsbTyFZMi3vvz
y66n32QHxnLmkTZ2hSj481dxhOt0bmzrnkzZgNTeT8tk/Lok7jU9Jd6XEdA7
/YZ51TUYv34ggBGf59nNDULE+Dm3o8q5do6wmevd/kTLQpSYRcqXxHXExn1m
X4kDGOXb8y/bFKKZrE1KxPcKzm89svFslD6wfh7V2Zgcgz60DJ+4iI/PHmly
kl3tCn6yYcl8xoVo7sUda+J6m6+N8MinO4O+IE1/p2kh2vkueeIhPs/jpZSn
v60Nge/Y+KGzSTGoK0Z6gzk+nld/q3T8NTcYHOL9aKBRiLR6bGmJ9xw9tgeq
b+hxhUsWpOkcvUKU48DwnPB7M+9JvFDlMIKHgZWMjvExyE7X0ioZH88mpXSG
76o7iN4+W3dEphA52O7Y6IPrgpysv/Pp3GH8SFwj54VC1L3MkEJ8Dstk3LHZ
0+EW6Ku1a1rExqDq27EFg/h4g81aU9z0HnD4qrlcq2Ahup9kHlaG66ISqlU+
ze5AEjorzHOkEOUeOz1C+Pbuc4YMIfG34dAG6W80ETHIV+IS17FvZMhvZ8gM
vO0B4ow/ld8wFSIzu5jjLLg+pl9R5abmAbwl8ZJCWwvR4SmrQGIe+1qvq/Ou
pvA6tLyNPRDfh/V92tH4eJHt5MfT0R7gunNXbshQAbqoJztlhOuzq2laYmM8
YJSt/GvNQgG6xqaYSMyj1rZkbCJgBtEdrGvCPWPQ1xlz8qo+MkQw6Z9JjfKA
jPM3jBneFqCPTS4S9fg81cm6ZT3pHnDM8lhLTlMBIh0J4Cf4cI5aOp1RMIcJ
1vHf9g4x6GJvqpYlPo+C/mRGgIUHsJuvqm2JKkAZjst+krje1X3s16pQD2hL
8i6Pelbwn78TtWqrb/S+Ai0DafnuJD7iPk4X8Ple/WYOMQLnBuvuxiCBU+5X
RvF5jKQC39GLeoC7hWHT49sF6MmaEMccXI9/HyPDo+UBl00fHhF2LUCu1PnF
6nPyq3m8pS0Sf8sR8yev+eCzyrEJfnmu+jm05AnZeZe8zJNJyFJjJpns0QQB
iRwsT0c8QbmrL0v6MQmN+A+1fzndDDtVQ4JsTnjg+fInvWYPEtpbLS3Lq9QM
+cxuV8r2eYBEcFtUljsJcR+XEwz80QyP3SrZXYrdYNI7Pc72Jl4XX5r8cnJV
C1SPvvCYeeYGBukJ26/dIKGdpr/mGZNbIPudz8RbY1ewuxv9WFWJhEqYfG4e
S2+Bue6gg7TarnDtwvsT8ookFGhB8vwp1QrFyxmPGj2cYc2hWH+dAyQ0cKjk
Zr5MK4x5RrIZmTqDTt6TL9oi+PqTmL4RcUzt2vXCW+IK0jm/ndOv4Oe94/p+
Lm+cGzudO4dYwW54lZPz0CGvAC3xmvp64bqZZe4qHiE5cDo9e9cP1/Nv93/W
xPf5xzivDl3xqzAy639SGI9Lt+d/r3HHx9MrDK47X6INhSXHTzTg47OkRMxc
cH1DlGhH6NHrwCgr+4XhZQG6E05XRcQHtq90wB1rAm+n7FJa8XmyCu9Y2uHj
j/5gOkP/1QSi0ixZr+LjfdWPrrPBdZ0TW8c3G96FTHHh72a4HtlUNCeDz5Og
PeJxScoK+j82ORTj87h+jNtnio/P+Joi0sZvBa/sn2w4hI83YBrKNsH1+YdG
XGl51nCm65xMLr5OtvedR0/g8zyuf/XB0NwOit6WlJvg8fM+yzzvDXy8Bmvz
kzsidnDdLWluV24BWpBj0SX0dQMJd+bt7WEketuV4Gx8nkQzBWl8nnNv1e0/
fnCEWyH+ix54/MxbFJMlxkvR2rAzmjnCNqvp3vHMAnRll1b2LVyPWm5s7bN1
gsNhjoLj6fi+faIVdwGfx4tL4m6pgCtcYJEQmTYqREebtJwt8PHJt5K6bb65
gG/vQHxCcgHqFi5ffR/XtS9Yix257Aq39y9s/B5fgLwVY5vM8HlO5zeslXF2
gxgpGRI7Hj+/vW6WC8DHpx9ty8mQdwPum07XkiMK0AmHQfFHuI6dUbJsCHCD
vc1+pyWDCtADum+5RPyc528vmrB1B5bYJ94VpwvRwNwW70J8/K9DVXlvT7mD
j8EwbYVbAWp3O5xXS9yvtIj2gLvu4Bin9jDbHp/fqN1lCJ9nbfeVdfu5PCBV
qllICo+fNyJtu8n4+G0ZO0OXJ9zhzftjWfwmBeiTW3IZYz8ZWl7fKMih9YBu
vSdO/noF6G2DsIMEHpeUTy2W8jh7QK5ske8vRjyeJ/L+OYKPV1KNdzp32QOC
tvb/2nOhAE1ab+hTxfUEv8rtC3h8+Lrr9A8pmQI0XOl8NhafZ0vkSUWDp3h8
058aTh8sQPVCWxn98PE1He/2X/XwgEh5hoxLIgWoPD5hxzNcl70tQs5w9IBP
10o/XuYtQHskF4zX4Ov/fU7PRPOxB/CUucYvYjj/mx3tQ/h4zqAw3jlPD7i/
96LySeYCVMq1/zLTABluLf/h32jtARZOjVkmy/mou2NZldjnPckWGiQ7D/Cw
OLD2cWQBqp4+fPYsPj49/Y73k+seMFVwFgUP5iO2x68szXDd2kGs8aCSBzAc
Tlq7rT3/v/7+wH/G21lDZV4iHqZR9W4lwZZWcXfpXxm2Jwg9gvp9MJeyWImQ
iTDsTNOGrYReTR2/Zietfba9o3TJiKo4of/n/Jd3d+QV2fzf+mU6lbzK9zLS
qZ7FVYT+39b5/3b9pacyR/9pnlrq+KBX5dEuWfelD+wfn/in8WHXar5KmcbD
9lfPpeScHkAmT5TB0hIZWaRURNss4/v5YY6Eh+YhkFczunmwIxzJ+l+IIfpU
0ga1VfUPsELBp7U8EjfM0PMDG7WJ/3unqPzkl9lRTLfdw5Loi31zVw/l82KT
m3IM2o8qsc7OdEr/ceWhlb7YCjuPQ69YCsa13QIj+s0tHVrpn3jgNws35uUi
rczTrET0mxOm9h9XmH+/yJqrLh0vbUHpb7v/x4qutrtPWVz8sfS72JE7RL+5
wf/g9t7bopLoN/dA0j50m3gq7PLZqXzhtTtYdUe8ebxIRlkKPxSJ690VcEPH
/rQsfFbu23MUv96MLWqRxPUKod8/5jp3QkC5WgpxvXOJ05R+65dfuopPzvzA
wnXu2RHXK4Z1Ua73ml6c4vWXrVjKRus9xPU+a1m53ku3fokqar3E4ur+UPpy
LlOvt1jWc79TlzOWOGN7jLheXur1Nh9Jk3x7+o6027rF1UR/aj3q7+1cOj1u
rdzsKW39Rkzv/+l6LyY3d/9Tf71DO71nTM2ewfED+oe5Cp3hd8Krj23fyYhH
SvWDNc6Bif1UM6vIBajp74o4jnPImbkZQnB46O3DsqZzD/SIHpghOGiwllI4
WKY0CO+0WQOe6xMcCA5CNh0r973o+dXbqBdz91xF4RBassKBRTT8cs3uN5hl
6u8SgoOX+AqHmdJzMTv6IzABo3SRv/ed9807KsWhcR/bMO3bRdz3OioHF7eX
nCxel6R79iiZ/Z3Dwafdzx+ri0n3xZMH/02fQT0y141v3S9A/6lVkbOvA0Rv
EL43MUVGnXYCuwk+bHIKt76TVCHntuUicS5WbQl6QPCRiBVzOoMdgLdXeC4T
fAweW1H4eE/82tg2yQQN5BYbgg+X7Mr3KJ7lGb6MSxnEGI/5UPjg2dTK9yJ4
lobe2JZha86KlxF88kRX+EiqqniqsSZgQzYrfUWrqX2fX3NqZoad8MSa63K/
EXxqqXwuXw/HXsVrSrM/f2BL8LlA5WPOLq1u7OuLyazf1Ptv+IjKl5SXWDaD
dpTA7WcfI0CW5/SVVgcSinQdG3iplwsH0qPyNlneA/dPdocXJ8hoek5+A/F7
vKvM6nf8knOGDWROj5i9JWjkhKaGFc7zupoPV0WSBryLOD29HufpztXuSvCU
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
Ob+NkPM7AeV1kjVe4nmWaNp0gy0mr4byG7kVSyUnPAj3h7Mu/TrvoPANla2L
BwnkZDcFTD4D5WZCZ0/2qhgSTAuUFP7Gu/z/Xb4cB65NxJrrunIEtpxKnAtM
hvL5Tg/6Ta6X0B4ZHdlf4xbwXjRNpFOasFMpne9/Mz7G0B7i4lZBmqRAwo69
2taYPR+hPD2S48lsgy367AeBFZOPQ7nBuRS3ftSGYJhVnxNZbkJ4/dUyTY3y
3j++pV+tYIcMOJSvs8FELgGpnaWOR0Wo36csfcuSvSSaTuCvje18u+sFYC39
5NP4+CYQMOE3HyGSkfDUMffXlP2V+Zkdb3tvqYFRJkTxpWoa8uJq03f8fK1+
aZY8XY5q5wTFb3JbjwjMUfXbjma4hvGpE/oIDqjn5UzCTOtbHUJmNaDvbEgQ
sosE3zYvuhclkxHtFjkPZsq+Ln8s224nw3lwNMpqWzNlf36vQON1MkWPKg3H
l+Se/eAprS44/9IXcd+9DZ+3hHPP1+DAl+iX0lX76fM5kLkv1Hk3mtGH+Opd
IHgFXdCNeZxDsITxee4npOHld4iwQdP0qrduIAFhEhWxp8it0tvSbj5RBGz8
XqqrawOQg3kGS/h6UrrTLrX5Ndq65ubbiX5uJDGpD9ejWmYyHipVjLpEWRjH
0s0S3kA+uK5HkBUi7YLmGfG0aBPvEzLgPfxdI9ZFWokB6Ihlrd3hbyF/fK4W
djQQCJTx1wQvlHQfVQfe1V9vxFZfR2oqDIzmsPN6rt3zwXxiYHXJhVXPGEyR
o2Z2i5h+w8z7LG4DfaiY7XqX1xs3I7Mjnfi8XSYMxz5moGi1s9PMXOT8z77u
U7Cvezfs6776I9XOMqnrGWZtlqilnGPBB5EHhEFov7yLRGum2ymCRauZKF1j
BCE1KHYNLUV+dk2DqHfSaeDPR37ZjIYjheEJq2ax83HH0yXCantAZMCHfVEi
lxD21PMLmB7u1jMhEhIf0TX2xgGGWwWQ4aB6XP81zbCJPTLP0apvFx11+ZcI
9teofThHXZTUeDtuoSul1w5arntLWOij2vNBv/Vua40PuqrrzCWL+hKCLbSz
U16cL6ffhSA30hk4yBtNKFFmc6n4TtnPJM5m0KPnQeZicGhRdyQi/Lzl/Bfs
/kZVvzDrRRlwNpQgoatohdDdOeeG35+JV+e+t2EDeC6oMiXKdhTxuC30DZMn
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
/mkd/n9N/l+dvfsd
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{380.126644166018, 200.2309349465626},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 10}, {0, 10}, {0., 1.5124506031952068`*^7}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.291364773877904, -2.817464098675021, 1.358040159002898},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.710720087833925*^9, 3.710720123168987*^9}, {
   3.7107201695946684`*^9, 3.7107201903437047`*^9}, 3.7107202264129686`*^9, 
   3.710726470122726*^9, 3.7107278082349033`*^9, 3.7111327432239275`*^9, 
   3.7111329344128623`*^9, 
   3.711147132954541*^9},ExpressionUUID->"25a8ad0e-2397-43fc-a82c-\
b5fc3fda21c6"],

Cell[BoxData[
 Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
8gPkUxLebZhA/Uvf3/uHFRNKA6l/Uf6utJqjquJc6l+U13Y3yyhauoL6F+Wj
4ncf198TRf0L/unzxBgto03Uv/gOhluruSu4PRXj3/jrI+okareymvoX3C+6
2T09/jP1L3hau/zphRJSZC+AOytemD1xtjL1L7hUcA/dy4UG1I/gEurSuRes
+lF/gXcO9mwVJw6nfgHftjxcRkLeh/QHtzuatHhD2EzSGfxNv+PBc96GkZ70
3FknuqWNW8fh/aHv/uzMyLr7N8TQDXzESQeLmIpy0g1cftWIU7o2DTTv4e8M
Ff3naj0kOMxv4NFNvX0sNnUh3cAXT9HQ2HdMnXQDt/Xb+1nPzJR0A78Ss3D/
www70g08a3btq082rqQb+JDC3Opn4omkG/jUQe5tGaPmkW7gX2OO3VlbvoR0
A19uolG2IHgz6YbnK1jf4XG8023SDfzg/AKD2vpK0g18rabmXo3yRtINPLj/
q5gb6dKkG/42nefa5/RTod/FPBFdeKbf7+GF9LvgRsqhm+pN39Dvgrue3Xsu
WuIr/S741CllnQL6ylP9mFf0eu+wL6i6S/WD78zMqr1pUEX1g+fP011mIPuD
6gdPrGv/9vxRBVq/YR76ek/+3sz1Z8T4XXDlowbxHYcV0e+CT+7+TH78m3f0
u+A7LcVzTKp/0e+CL3/Sr0+kcmf6XcxnOrbqMwd84H8X3G/S+uyBs+7T74Ln
eAUVLVlYTb8L3sksw3n7iVYx2cls/psfU7Xymegs1Q+eu3z/tpd9H1D9VF5u
ePd9j2qofvC6o266soclqP2YL6NbAgbmbeDrB7/m+8w3aS9fP/iPxOzToYp1
VD94TEvZzrmVklQ/5lfHz98uL73B1w9eI2vYS/crXz/40ymhNzqZfaD6wStC
pHLvdZSm+jFPT3l6dbxMC18/eHOv6aVNTg9JT6zvKtY/umGuco7W+SivEb9R
tKgghdoDPi3jeslNk49UP+oZcfKswuH5D6mdKL/h+UC9C6Yy9L1A+TfLrKSl
9n8Uoxz+wh7Bv4X7LWg/2SVeGyVirObz98rY79d27Nlua0sl7Wth/BYW9YnJ
OFdM6xDw++7bJ7QFV9F3Cvz5sPF3Jq38St8pcNl+w4ztdOU51I/5JFRqWua9
8Y+pfvCk7q9tf6XUUP3gD/aXJo+a8IvqB3fxWmtUbdeR6sd8ohI9b4d+3FOq
H3zFQFP/bls/Uv3gYrebD7Z0kqB6MG+sK1g30Sn8GdXD85GScXs/UT3gkqMU
dGZMl+Kw7sc8EHMx73g7Hf58B/zSUwt7PyX+HA2802unQgPXRqofPHqpUYJv
qgz3P/fbtURTLq2VL0rgBPvtWqKU3g/95y8qF+y3a4luHp7ys+fTL7TPifd9
se2Hk9Xf+XrA+9dbrS84yp9Dge9WrNm107GZ6sF7XTnmjrloNL9fCl5wdPrb
82f4cxbwuV7TLu7d9ZW/v8feXy39JtX83Xw94EdXvpxQso8/RwD//SPNc+3d
b1QP3o8vt16mHnnK1wN+d/QEyyvW/P4tuChgRP+DNd/JvhO+dxh/+O+CGt2k
C5TkaD8H/dawpqnE7UoL2VngVnqzorbM7UTrbfCg730meXXWoXU1+PaRXwYd
O9+X1s/gh41n5t7xtad1MvgFCa0np6Q9aT0MHpLsUj3c14/WveAaHatP5GSG
0PoWfGv8ay+1LqtpnhHe88Hz4r0MmJzaz7dWkvQBH3C8wN18mjLt+2H9lSRn
PcQgtIm+m+Cq4Y7SfYNlqTzWZbGfBm+qj/lG5cHbc05jR9W1o/JYrx2cW1Pw
YclPKg9+I/mVRdSUjjTfYh3nKi50HHXmPc3PdA7uaeeSM+o3zfNY3+m1bW9I
M+G/m+A6ujZuab/aqDzWfc11JyN+htdSefDygptdXwyX5P7nd19fNKu6WnQg
uU7w3dcXnVu7f3xmpBSVxzpxiuj8cudT/HcQPO9qW/jNJGkuyLV5TpxRB5HG
tw0H441e2WeO6xPSr+KZuLfc7zdZgV2IJypsMZ0zq1Z8aE5bvJFrV+Lxg80K
ljT9FKvflhwRZ6RGfJJ9pMPO9R24WDOZprY2DeLjNCo6K+loc5L/jCst4gnX
Cq8UZ/fmIj628ynL0iFecf1Mc6XPEC7iuOwao9t6fDszzGVGNrtzFqVyk8r6
GxBfpzd9n8HeqVxdu3ZWcUcMiduMGee+RBTM4bn8JYu2SUg02ZfvmHAh504r
PRf4QXe7mz6hihyeC9zoVOpoRUU9ei7we9qtV8tnW9BzgT8r3ie1jRPRc4Hv
3/2wobe2Fz0X+B6XNksuyp+eC/yJ7UlX72cLua0h8jeyPhqIOhf8Xr6o7IZ9
SptEwWETd3pecE+n4DVpj324t2nf1CUkOos+Loub5hb3wf7Rkzif/rfrxe/7
t14OLFMibi6OTtcMbhNP3iOxoCxLhfgh2+Xf+nXqwj38IaXtGqdOXGbccvfa
mXqc0z/zRjfiu2tOXtqaZ8Fd/md+6E78asXkBr1uwzgNRVk1V2U94mOqVe+f
WOzFPbKXq29bqU981tnCeRZP/el5wUeKZmy4ahdKz4v1TMTKVVsvl9qI8fz4
GzTobeC3zmtp3gbf/lxKdWH1BA7/Rn02qYcWvpuTKh55vbihLOuHPX5fyzLj
5eqsKjHK4a/wnAvru449iy55ZqyhdqIf9Se10/w8cA3Nh2i/jfqU24dfZuSh
v6idDh+NXqfcovcRvHXtYd1Oex/S/i3q+dXn0E/tGHEe+hflOx7+blXX4xmN
c/A9NerLfb+/ovMy1JNseuj7N40HeRgPKJ/TKIq/m1FD7zt4W3WTe8CkRjpf
Qz1zbixa2RBSmYfxg/K746rHaA76KcZ7BG532TrzYp4Ufx7B6hma+O7F4zuf
8jDeUH6OaevstXcU6L0Db+4atXdgj678+QWrJ1Y+xumksaQY4xPl5yoOCZaf
okXvKbibibO4foshf97B6hm9tCpv8VolMcYzyt+df2FfemMveq/B2+8I6135
vR9/PsLq2ZkpHeD4Vl+M8Y/y1sbBaTGbB9M8AL54QdyhbrNH0Dk1uGqJtuHk
6yto/NM+dFhsSMniVDHGH8bjzdIlEkfePKVxDi5VHTkjXvodvS/CcY76yd/C
JfbApLGL8vBvlO+RbDbl3oMUsnfw3YlSH/i0XPchtQfv1zezvk6vjj2l9Rj4
z+dpS5W0K+m9E9o1KI//PznT7X36qEqqn87ZulW1XSp4KsY8gvqfe/zMdS2+
Re0EHxfW6+jFfg9Jh956kvmid7/s8bsrLYZX7Nr6533yj4unTfDf/ud93UoH
r7lumn/eL623G95u4HX9P+49bu9txwWu1f/jnp5Z27QXRWP0/7hXJlMhu0O7
l/4f96CwPjBKkHub0a078ZZs77adDXp/3OfZO1bWfVSO3h/3T7RUl2iv3aj3
x30Jg0DH4nn+en/0y+vSpa2jMwxFtXIR5/dfbiPdnnorvfv+H3062OnuabeF
1+dJ/Bz5bz0NRJHL84bWe3chfrN1rGPnCn3Rg8z98zbtVCYeM822yDNFX3T1
6fTey3+oEN/Y/tmBuIX6oqFbTiwPClcnbuo96+smN31R4+pr5XeluhGvarfs
yuMveqKxZ5pvDenI6xBeruOmYKYvkvxqZz1gP6+ndFeXGA9OT4S/4LdCZXr3
StATRR+WlXktyetztkf/Ux//M2+YrLeb7Pvf7IUNk/UaspwNRT9KvFpcf0oT
H5BycbCbk6Ho8TWTPnM78OekagWzNi4rNxB1G7igYJBMuz/sfdlXFsZtDXw9
s1+oOg1x/vO8ldZ/W4IVn6zg9X9wKXbgZM7gj/NNH4Wzp6f+Mvhjnf+39+Jv
/f639+Vv7f+bPn97rr/p9rf2/03Pv+nwN93+Np7/Ng/8bZz/bX742/j/27zx
t/fib/PJ396Xv80zf3uP/jb//O09+tu89Lf38W/z1d/ex7/NY397T/+v89vf
3ustEzZ7SEq8Jb/CXbYWSguiDov92PcI38lR8nIdRs5YlAeO8l/6dVGsuXtW
vGTck8USEq1UfsfHpZuMjFfngaN85byEX83DOf78iJWfeSJnS0Lmtjza/2Tl
J1WdHt9oVSQev+qLoYREeyqvZzFs5teI/bT+BPc43edA7ZC0vJza37ISq3i/
0ZSlV35eW5CT18rGH/mzMn/GEapSP9tW8v6MO43eDOg/UoXbxNZ74Bs0en6Z
38GQe/DP+oc/97dRtalPvmzJqQnWb+vY+q2vjeznNnt+PXbO9rzk9X5dxA/Z
OgpcTlSh8jVARxzmJl/XJub9SW//mjTtjmdvMfoL64hVmk77Evudpv4Cb5IZ
+Cv8LEf9Aj6795NxPrIPSH86B6+4L7NU7YUY+oAbMD9E6ANe+fliTu+RRqQP
eOuWl18COvQjfcA9vydlH7w8jMYb5tWKow7r/Dadp/aTP6CutuiM101qP/jw
WaEqMav480fwrdrjjb2D3tE4ofsIs6KHq0g303NR/czvD88F/nlWxbFTIX3p
ucivKEXXXH3HYHou2k+9uTAzcK8bPRfm7fVFPWaOCMii5wJf+ftp6J4Xd+m5
wJ8uzJr6beULei7wPW+T/Y+lfaT2g/dm/nRoP7i277p27UdaU/vBf5z/0GNa
h+HUfnDjxa+qki57Ufsx/z9/cCrpxc4caj+4bnFDD13uAbUfPCIheMK5Fa+p
/eQ3d2ba63jfRjHeR/BX+YO/FJ/vzuG5wFtL//Vfw3ORn53z2HUPTw2g5wJ/
kGv9qTLYhZ4LvHyxwYohBuPpfQT/nio6H3ptFof3EfyljtX3L2PCOLx3wu8g
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
   "], {{
     {RGBColor[0.880722, 0.611041, 0.142051], EdgeForm[None], Specularity[
       GrayLevel[1], 3], 
      StyleBox[GraphicsGroup3DBox[
        TagBox[{Polygon3DBox[CompressedData["
1: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
z5JzuB/dVLN+ui/pqK+CebYt8JFL8yfoXvIc6Nop0Zws9hxeDk4W3xBe65Ro
PXMc370yH9azctxL/PtCYbvxfGZf7cpg7gUe77TS9x8TzcXQvxOcYvSc7azf
Ty/9vOOj+R3mtlMwN8ScN6zMoY7PfLwkeE1uqfOqaL6tHT52MG/aunQ+hjls
pHP/XVp/j1XfqcLnYVPYZ6XnbEJ0rPxS5viWGJVvBR9ErEsf/M6Zpe0U9uuq
4FgfW0lu6t7M1yW+nJD5HVgbd2Z+Dvb6g5ltAzmJjjVzL+iPqWqX1Gx/Hko2
CBv4cLKD7D3mjb0IPiYdv5H5ftxri8Jzcl0ag885PDcnAc/Ls/KO8KpwAqxJ
eFX8Nr4dHDfP1CZxYqyT1oV565tyzz9zf3Pu77dX+s5Ha9zIzL7TNYXX6kr8
nyL5s7njdmwc64c9AoeLbzGgdNxHbEi8AJfNmtuu8He8MTcXd1pmzhl/Ex6c
NQrnCt/Nfvgo8559Ms3Vben9ifvPysw5doy23fgt+0T7D9i1vRPvCie8V7SP
ga9ySLQPg149LNq3wRafHG1/0Qldo20ouuLEaBt9jPAPaW+uWznuP5/5qTlG
75ZZ73wfrB/IcbQrvBfuzK1LeqU1MztznHty2g98Z3RPu7T2WIP9S8ezrO03
M78z7/tt8Lolz/Vd8HomT9S28H6ZlDsG5lz2IHPG3LGGjqicm4QPWVvn/Jv1
L/xHYR6RPCu2m7zKo5XtLva3teTvhXlHcrQrC3OH5IE2TXYZjp4YOssdR4fk
G+sytQb6b4Z+31GycWFbc5l+m1J6PHwg/kcL9ffX8SvRsRo5Q/w94kXyWkUw
V0leCp+Q2H26rvlX9LkL4LML++Pk+X4ozCGTn3s5Opb9LtpOkRt8qLL/AM/5
EbxwdPxH3pJnw/G6t7QeR5/jY+Pz81NvyacL8431sJ/JX3q35liTmBO+i/wf
uS78lWa5sf6t4mzJb9WvmRtjPO88OTgP8A9+XDDfj+MPJ0qMyvO1TxiO9MnC
fGbd4GuuzMwFM/chxSZFkj8mX5F3wc4Sq1UpXmtRmCO6PDd3Tf8DklOCc7Ng
fEHekRj2weB83UPBeYCQvvXUYNknty/BNT8N9lXYu8TN6wfzovgn7ZPeRn/v
XtiPmqpzdynsO90jvGZ0jh7uq3ewbsHv3zXZIGzRu9H6bwPh96L134bCRXTe
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

           "]], Polygon3DBox[CompressedData["
1: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
M83Z/k5rDFD/OvXf1Pr/as6nwiPUhufWG+iPU3XN/vgUnGvhjxPvh9OEb+fd
8o7UP11tCLYrrsn75F1Nw/8rvB+498fwjwu/X/bDdN554ffLu34C/65w3ED8
gM+L/uir+62u/lr139H9Xi38Vuoz+GVp+fzUOuRz4TZqTwvfoLXe0vxrJH87
tU5Yw14UXpz6nbRQv7/aotQ6uKn6/dQWCp8sfID6t7FPhD9MvN95vuztR7Ff
6h9ZeK2HhHuqv67w+2ke9WEPfU6W7HzGdH173cOz+A4aXyj5ycKz0V3Ci4TP
F34O31B4Mf678Cxsr/AC4cv1OSm1TmuGj4reFy5S25fR+DupfXLsB/rmAnSN
cC/1r9Bvej31nmikfi+111Lf877B/gHn66l4pu/Cj0sdE6DvRwm/kdrHxR4d
oft7Rv0bNfdt3d/6wmt/Idl04Ylac73kD2j8E+F++pzB2ppzKuujx3keqTHr
sN7UxP4Bz4nnxZnA/+C98n7xIbDXvK+rsI9RP/OceF6PSt5H8luC9cnZufXF
pZJPTK1zG+e2Eegh9BG2o2W0r6fx/iVvVdhWY7ObCg8Sfl54nvAwYpnCe3F9
7vhlDWdO8sGpv79b1MfYsP2Efyq8V79Vf4bm34oel3x+4vN3ve73GvZr1Bej
+eRssYb6f2jO15pbJbN/h79HfzO1Jzlruv4+yS/Ofb7x97FttXT9n8Qwkt8r
eRf157I/hccKd82tv7sFn+ezhN+I/k9F15foXvV/y+3LMoY/NEBtjtaek9j+
so/Zz7MT+8fsY/bzm4n97wlaf53w/Rr/GPsUrE/OlOx14b4af1zyHol/b+/4
3fjQ04QfKuxrE3MH9Z/Q/rtT/bexHbr+oMJn98Hok6CzD89sk5vE88p+eSe1
TsbOY+97pT5PXI8/g04YGe33xal1Aj5AM91vH2xXbv/kIOG+nJ/c/sSNwe+L
99ZSeFFwPEdchz9cB5sl/I/aUvX3VpuSO/5Yp9/yuuYfk3lPsjf3IQaSfA0+
bumYhtimuvAnmrODZN2FqwmvlbyB5FdkjqHeKB1DEUsREy0r7EexFy9Kvf/f
Z/9qrG1mn6kjejZzTElsuV/0dy9A92ut/WM81hm/EP8qPv9uwmcLNxO+A39W
+KyKr1kCd5B4rX3UbsAeSX5qxWu8l9knZ+3Thd/N7LM3Lu23oeuuSK0/J2T2
jbZOfT7HZOZLLkx9vmYV5oqqxXh3fGZbtlVqf2q2nu9+xBL4V8T6mc96tdTn
u3GMDzvlvpfXtUZDfFG1BexZtUMyx6xv4C+gc4gT2YPEilr/vdQ27tBg/UOs
xZk6XP09cseVxJfbYl/UPk4dA7Xn3thDktcW/kfr1UTnZY55iX1v15ylqTmZ
09W/SXNqJOZS4EsOUHuRuJRnJPmdaitSczwXqH9r/D7O/NHq31OYb0GnoFty
jR2AvkfPCu+v9Z7KHZ+mwX43/jc6AF3QX9+7Y2ZO6DnJBmrOR6l10FHqN9X1
gzP7qO/qXjsX9iX30tgrhX1kfGX2IHtxrq45WP231V9B/MwzE36p8Hnh3HB+
hqfWvy9rfM/MHBr+KXoF/QLHB19xs75zp8Rc1NMVfz/rcQ3XHqixBVrnP82p
HWynsFf4hPAzA/C5UtvEI9SfJPmPwt8J/0v8g44kThLeoO/aV3ia8Lc8T+FG
wjNy82X/E17Pnoi+E/p3z8i3nJ6b/0CHocs4QzUr5jzgPtiT9UpzLnAvnKFa
wqfoulczcxRwFXxHA63/X+7v5p7qp479udcRmfkqOI4G0f+Eu8EHGFLYv8SX
wEcYWth/xNZj8+8ozJHClfbUGlVLPzP879rxWfKb66XmEngWxOjE6nBc25aO
yYnNL0V/l9ah+Kn4q+hWdChxAz4WuhWdt4vW+zW3LiTmJva+WfI6pTkcuBx0
VN3SfBdnfw9dsyG3f4q/i42Zn9l/5fkPFp4nvDY4/sBXxf58Exxv4Iti/9pW
vBfZk7OC7TO2A5+qZTCHBZfFO9yxNOfcSvKtC3PRnJn98ZcKn6Vj1doXtuc3
B5/xhurvmvvsEyMR9+ATtw4+w4dKXr3w2SZGIw7Cx24VzNHB1cGJbF96DP+/
Xe652BT4JXgmbA2cEdzRFeiH0hzO15k5Rbgd9hTvtn3uvUa8S2yBDz28cLxO
7IIPPqxw/EvshQ9+Z2EbsDQzR4RtqBP5qlNzv7u6ke/skPvd1Yt8zmm59zrP
GH2L3uXZYyMWZLYx2I7rc3M9cD7Hl35GxJsn5n52PFP8SfxKnjU26JPM+hXb
9KzkjTLr7pMq5lzhXrnH6pKfoDZJ/YWSd8a+Zean8Q+JW+tH/nJBvJ4zC3eJ
TeQsY/OPL+zD4QuQ3yAefUtjzSU7Uvf5NLparXXFa7AW9oV7g5P6LPM9wFXB
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
LgybQv4MPnps1M/Uev0fts9Fiw==
           "]], Polygon3DBox[CompressedData["
1:eJwt13m8z1Uex/Gf+7v395OtQosMkq2ZQVPzyDYxtgqlJlukmlxdVCbKnmam
iWtpHwyypWVQGkqjGlmaqGiEmiiSBmVJE9MklOj5eRx/vO/vvF/nfc73fL/f
s3xv7eJBXe4syGQyC6iI5vvTPZvJvAIO4+vzj9OV2J/ymUxl5So0ms7BBsr5
yWwtzGQK1M9iKtKH2GCZY7lMZiJ/VG4l1hMrxTaXyWS2YDdo15lfhY+V24M9
L9edf4H6YKuxsdjF/HeyD2DHsFVYL2wR9cZWYH/EGvLfyz2GncTWYsXYqzQY
ew+bgrXiF1AP7FVsONaAP67tn+OmaJ2fvthJ7C98Ia3H+mEvUjG/RttS7BK+
vmewwT29TTuwEVgWmy1XiT7C7sLKYNP4HG3ABmB57Cm+Cm3HhmF/pa78UtcY
gtXlrzeWpcoHsZtdpye/GL9F7g1sjLpf8EPxNz3nKdjn6nZgZV3jaeWq9Inc
cOwHucl8AZWhATJDsDXaTtb2sxiP3HIaEfeAzdb2ypgwslOxInqX7Y910na6
8ma5XsZ3Ff8bmoftwnpj18U9yA6IZ4w9rK4p3wBvpfwo9ku5C/mX8dvk3sEe
UdeMvxtfbXyTsF3qtmEdsGnqP8B6atuR7xLvXW4MfxPVMN4T+BRtsvQv+RKZ
V2gQv0nbyVhL/qjcBOwItgK7HpuNzdZPeWqm3zn8a/jwmPNys+Su4O+lc7FY
XKKZbf50kZ2vvBu7ke/KPxFSrkAt9DeXLzLGudqeGfclP0RfOexJvjJ9jA3F
vpTtl03POZ735fyMeA7Y/fJVlc+KeUHL9F3qGr+lmuoKaY7c6bRV27tlxlON
mAcyjeVP8NX02VG5OvamuvfjOWGvYxOxN2I9YXWwrlgdbD22JdYC1gOrj22K
eYNtxi7Mpvcb73mnuq/iunKH8QWxnvgtco2Vp8pdLbdH7iOsOTYfm0dN3MOH
2KXYUzGv5A7LfYA1wB7BWsacw+7X53nKI7EZ/CSZx+kQVpafSTP4L2P9GUtT
uZ/T6/jH+GX4c/yt8j9gB7CSbJprMefa81upRdwDVox9H/3G9Wh37Iv6vdjv
18ayV/009dPpAvdxX4wv7jfej9xB/iX9NdO2If0Tbyo3E/uftuX4WSG+Kr5X
21b8wGjr92ysvd9B9Ax21O/D8U7kaipfg9XUdju1xBa6Rol+T6irh3VXX095
Q8xr7TZi5yuXyjWW+1TdnljX2BLsJRrnmtVi3lNd5XUy7f1+JXd7rDWZ9TQR
24/diK2MfZzG59P9ri1Mzzye/Wr+CI2X+5Zf7ro99P33GDN/Ca2RLc6nPWyS
3DfYYZqJ/Rfrn03nTJw3Y+PZ0ciY89g2ekjuMDYm3gv/D9fo6hrfYqXYXmwf
TZLbhNXGxvEXye2I5yu7Ut8TlPtSbbk+2GvYOP4WqoUVxTzFTuOXxl4W5ww1
xGKDeAFby2+Qq678e9eopWq7uspYW7mqyivVbZQ7E2uDVcFWxBmCbcN+pfys
tn21Pa5uJ74/1oLyWvkRMo2oKf9grF/sLv53sb8rj8f60Pn5tN6aZdP8jXk8
DNstdyDWr8w6+ZEx77Gd2EOFaU+OvXk6dgV2nzZnxHjpSboGGyb3nFw/uS/o
5jg79P+oMTeS+T9doP4Y/jxViHcUcwr7jl8Uawk7EvMZO84vjvMV+1x/Vysv
098o/dWK7xQ6mz5T10ldu3zaF2N/3B37G9YWO8lfpL+s8S2JvTGfvnXim2dX
Lu2rbeK66p+Wu9NvOzoLe1d9tbi3grSXPZZL6+O6bJrfMc+vktsX44k1is+j
cvn0bOIZ7cyl76zWWJ6fF+9G/x3oHOyOOOexe/hu9JPYD4rS+Mfk0z3Gvc4q
Svc5Np/WYqzJZ+ha7EXjGOy51OanUTvsD3IVlCvGNakb9rLcULl6/CRqjY2W
yyoXnlKULzWmYcbUxO+ttEB5SJz5dJ58WZn5MSfiPKZzsf5yC7Hh/LVUPZ/O
iDgrLnfdtrSRn6rtSOwy+XLK5WkudTaWoeqfVVeibn/sOcqH4myg8vm0fsdl
014Qe0IJ9h5WB3ugIJ1pcbZ9Tfdg+7G/ud8OMf+w0dgX2CKsI/Y+Vhd7MN5j
nId8vXjvxvEWbZS7TW4h3SA3Clskd3t8W2FtsuldxjstjrmibafC9KzimZ0m
8w1+r9wB11isv05FaZ+8KZv2zdg/u2k3BW+bTc80nm1fmX3UC3s79ldt2/A5
uSLakUvvr7m2S5QLtGkk89PYe3PpHIjzoJb+3olvjHw6Q+IsaRn7fJyJ2On6
qkT/yaW1/etT/TXRz88KTp318a5y6VumorbL5M6Q+yS+62I9y/Vz7ZOF6X3G
e/00l+ZhyzjHlHsqvyU3Qa51Lp0fd2TTfh37du982sdHZdPeHHt0n5jDcU67
biV9L4/vJ6wOreBXxbdk/G8hc5AGxncUP8c1mhvDodgD4zsXewJrgf073nHs
a1hn/dbgfwTbaaxv
           "]], Polygon3DBox[{{1716, 1227, 735, 163, 561, 1737}}]},
         Annotation[#, "Charting`Private`Tag$590#1"]& ]],
       Lighting->{{"Ambient", 
          RGBColor[0.30100577, 0.22414668499999998`, 0.090484535]}, {
         "Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{0, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 2, 2}]}, {"Directional", 
          RGBColor[0.2642166, 0.18331229999999998`, 0.04261530000000001], 
          ImageScaled[{2, 0, 2}]}}]}, 
     {GrayLevel[1], EdgeForm[None], 
      StyleBox[GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJwtkz1MVUEQhfftZd/FxBIrI4mJBdZqYkGCjY1PQYkKRDGRBw9Eo8EGsIBO
C20sNP5EjQkWkpgo2KBRAYMFFUqlFkqidtjYQYHfeecWm/n2zNzZ2dm5u/uu
dF6OIYR2VsaaL4fQifA7hTCM/YF2ADuF8ye8A3uKfQ98GtvfEMJnuBF9qxTC
Q9YDVhe+IfRu7PmyNcV251hiZ8lfa3DOAWyFuFb4KPYYazvx7djvxE8Q/474
b/AIPAd/havwDHwOvgq/gQf4ZoE8NexyyXkq7P/ga4LHqWVPdK1r6DvRR7GP
sC2s6/BzbJWYGbg/ug7l6cAewvcs+CzlUk71ai/rBvp0ci134FXi97O/G3zf
C9R5H98ifALuyhxfhSfh9/C+5G91r5uZa1iP9k/Ba3BbMqsP6kEv2io9PEye
CvvHyfdrjr7jIPot9AX0tsxv9zRam4X/wrXc580n59DbvdBbJMeo/x1FH45j
Lya/+z3lpQ9H0F6WnVf519FPFqx5qd8b3oR38e0Y/CR5FtTzJfWZ/evgPtTz
whvoB3PXfTv5fM3JL+47xn4F3oZ/ibN7ot/xQ8n3r89h5vedwxf1BsF53hLf
h/aq7FyaEeXWnIj/oZ1Nrlk9aS5mRrkHo88dwvbi+xjc2+nc/4nqGS/6o5nX
XcR55r3q0szrv/iCfo3YS8m8WLydZlT/0idizkTP5HByT5TvPzPGf7g=
          "]], Polygon3DBox[CompressedData["
1:eJwtkz9sjVEYxk/Pd8+9JEZTMdjsXQySTrpcTRTRqip1b29bTQiL1qAbA4uB
+BNEUoMmTWgtt7TaShETVwwYXANbLTYWvyfPGd587/O973n/POc5u0+fO3Q2
hhB6sBJ2KYXwqiOEu9hIOYQn4Cv8HyLpDbinEsJ+7AH/H2JN/h0ldoycDvAc
dhV/g3995J0vQjiJP4y1sE3wdmoPkvMI/IzzC/g1/Bdl15wCN6N7CavXTmxX
co9x4v3Rvd+VXV99vpK/FftAvAKew//MUoeje6p3HbyFbyt4vwPE9uFvI96L
/6fk2ZT/i14r5IxH15wC38Am8Of5t5f698EXwYPgDXJHS+buHtbAP5N8doz4
MvElbCB6h05iO5K/4lT7viRej+bkeHKP+Zyv3ZUjbtRTZ9eTd9FOE8R6wbPg
GXCt4jvQXegO9xB7S/0T4BrxL8QGsE/gm8S7kjlsg09FczsG/oe/Lg0Qb4D/
gtfyfIvYreAaqtXM/VVDtTTDb/zF4NluFz6vepP5PqWd7sK7difPcgE8DF4C
Pwb/iMaauZX1pF1UT3ctjsX1Qj6vHOWKE3HzMff7Bt7M/Ep7q8mzaCbt1pX1
Xi+8z3Ly7Dqjs0MZXy/MzRr4dTBHwivg58E7a3dxpF7XCteXBhqZP80rTWr/
I9FalWYred5p4j+TtSgNr3L2YLRW32N90fVVazRaO9Lod9WO1u502bnVYD1f
pvZIvt925lTc6s7E/WTm407W09Oy30dVM5etIWmvv7C2NGMbPJvfW2d+n9XC
mtZ705to533+A/ONmIU=
          "]], Polygon3DBox[CompressedData["
1:eJwlza1LQ1Ecx+HfrkyxWSxqsWm3X7s48BbxLWxYBFG0OIvGBS0GBYPCYAYH
BtnKLkx8wWKc0aCGRf0HLD5i+FzO9+FczmRlO9tKImJERV36zA1E3MANe8Lu
K7MX9FKI2B+MuGBLdu485jyurg78+8Eb/p23H3XOftgT27RPlLI6W2aJfa8j
9sVabNW+1srfHe2xKfvWexW7nPy/9TYUcccPnT/ZlXslO9cue2VnbNZuaZ09
sxqbsR90zL5Zm63ZHe2wHjtlqT3snQYb1TursqYW7Y57VTZt/wKnjC0R
          "]], Polygon3DBox[{{1458, 867, 1235, 604, 134, 1331}}]}],
       Lighting->{{"Ambient", 
          GrayLevel[0.8]}}]}, {}, {}, {}}, {
     {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0k1LVGEYBuBHc/waHU0loSBt2fhRWWpZZpmZggtxKyi4ESUsqo3VD/AH
KCJIy0DcBDLpLighrHaZqWlBi/5BG3XhdXRxc93POWfO+87LuTT2ZGgqLyLe
SF1+RNLP85yyXRBRad5jHf+wmX/ZyX8c4H8OM5WKKJTJ5F2cZpYzbOU8u/mW
g8xxlOscKYyYs2a9tb+bL3DWXHImYtM8r5fqP/QFPa1v6WX8yXJuM8MdVrBS
dvWz/MUq7rGa+6zhb362/wnr3Zdv9nGD9+Srfp1d8kVvYads6Nd4V67KmvkO
r8iqfptbyVnxvbmDTZLTb3Gdjbwpn/QGtssj2fS7Pn50vYf98kB6pVseSlba
5INnLifv9h+W9NAv4tCZNjijI6kwHzArr93PmGv5SsqTM+BLKUvOidOS1nP2
kdFL9RU9rZfo7/RivVhf1lP6CylKludzSbbyjLYRT+mxmKLjjsf5J9uMcRcX
806/uWPajj5+
       "]], Line3DBox[CompressedData["
1:eJwt0Lsug3EYwOFXte7ARhOJpTtbB7NSbR1apQ5FlQiruAF30MVsN3RB0UbQ
mXSmiTtwA30Gwy/P+/7zHfJ9M/WL0vlYRBT1m4zI8m4iYjER0WOOS1pWXisq
qKiSuq5Z5cC9a1zXhu6dl1nRg3mTb6xyS+/mbX65r8YP+w531TfvcV91PdoP
eKiO+YgNPZmP2dSz+ZTz+vYNk+MRP2x4/o0PnHU+tKf5Yr9KRXzaz/jKGtvM
85YLbHGO18zwktOc0ok5wSr/vCP3//9G+XspTg==
       "]]}, 
     {GrayLevel[0.2], 
      Line3DBox[{1240, 1511, 790, 1239, 1831, 1403, 1241, 1832, 1404, 1242, 
       1475, 1833, 1405, 1512, 1802, 1834, 1514, 1678, 1406, 1513, 1803, 1835,
        1516, 1679, 1407, 1515, 1969, 1476, 1518, 1680, 1741, 2002, 1517, 
       1477, 1520, 1681, 1970, 1408, 1519, 1478, 1522, 1826, 1971, 1409, 1521,
        1479, 1524, 2003, 1682, 1410, 1523, 1804, 1836, 1526, 1683, 1411, 
       1525, 1805, 1837, 1528, 1684, 1412, 1527, 1806, 1838, 1530, 1685, 1413,
        1529, 1972, 1480, 1532, 1686, 1414, 1531}], 
      Line3DBox[{1244, 1742, 1898, 1243, 796, 1245, 1533, 1839, 1415, 1534, 
       1481, 1840, 1416, 1535, 1807, 1841, 1537, 1417, 1536, 947, 1539, 1687, 
       1688, 1538, 1973, 1482, 1541, 1689, 1690, 2004, 1540, 1483, 1543, 1691,
        1692, 2005, 1542, 1484, 1545, 2006, 1693, 1694, 1544, 1485, 1547, 
       2007, 1695, 1696, 1546, 1808, 1842, 1549, 1697, 1698, 1548, 1809, 1843,
        1551, 1699, 1700, 1550, 1974, 1486, 1553, 1701, 1702, 1552, 1975, 
       1487, 1554, 1706, 1707, 1705}], 
      Line3DBox[{1247, 1743, 1899, 1246, 1744, 1900, 1248, 1555, 802, 1556, 
       1488, 1844, 1418, 1557, 960, 1419, 1558, 1976, 1489, 1647, 1420, 1559, 
       1977, 1490, 1561, 1745, 1963, 1560, 1491, 1563, 1746, 1964, 1562, 1492,
        1565, 1747, 1965, 1564, 1493, 1567, 1978, 1421, 1566, 1810, 1845, 
       1569, 1422, 1568, 1979, 1494, 1571, 1423, 1570, 1980, 1495, 1573, 1424,
        1572, 1981, 1496, 1574, 1714, 1727}], 
      Line3DBox[{1250, 1748, 1901, 1249, 1749, 1902, 1251, 343, 1128, 413, 
       344, 345, 1064, 259, 346, 1065, 260, 347, 1066, 261, 1067, 348, 262, 
       1068, 349, 263, 1069, 350, 264, 1070, 351, 1071, 265, 352, 1072, 266, 
       353, 1073, 267, 354, 1074, 582}], 
      Line3DBox[{1254, 1750, 1903, 1253, 1575, 1576, 1991, 1255, 1577, 1076, 
       1256, 1578, 1904, 1579, 1257, 1077, 1648, 1580, 1258, 1982, 1581, 1649,
        1582, 1259, 1966, 1497, 1650, 1498, 1983, 1260, 1499, 1651, 1500, 
       1984, 1261, 1501, 1652, 1502, 1985, 1262, 1503, 1653, 1905, 1811, 1263,
        1812, 1998, 1654, 1504, 1264, 1967, 1505, 1655, 1506, 1265, 1968, 
       1507, 1656, 1508, 1266, 2015, 1730}], 
      Line3DBox[{1269, 1751, 1906, 1268, 1583, 1090, 1270, 1584, 1907, 1813, 
       1271, 1585, 1908, 1586, 1272, 1814, 1999, 1658, 1587, 1273, 1094, 1659,
        1588, 1274, 1846, 1752, 1909, 1275, 1753, 1910, 1276, 1754, 1911, 
       1277, 1755, 1912, 1278, 1756, 1913, 1279, 1757, 1914, 1280, 1847, 1715,
        1731}], 
      Line3DBox[{1286, 1849, 1426, 1284, 1590, 1850, 1427, 1634, 1592, 1851, 
       1428, 1635, 1595, 1662, 1429, 1636, 1818, 1852, 1663, 1430, 1291, 1853,
        1431, 1293, 1854, 837, 1295, 1855, 1432, 1297, 1856, 1433, 1299, 1857,
        1434, 1301, 1858, 1435, 1303, 1859, 1436, 1305, 1860, 1717}], 
      Line3DBox[{1311, 1765, 1925, 1310, 1597, 1863, 1440, 1637, 1598, 1864, 
       1441, 1638, 1599, 1664, 1442, 1639, 1819, 1865, 1665, 1443, 1312, 1866,
        1444, 1313, 1867, 1766, 1926, 1314, 850, 1315, 1868, 1445, 1316, 1869,
        1446, 1317, 1870, 1447, 1318, 1871, 1448, 1319, 1872, 1718}], 
      Line3DBox[{1322, 1600, 1767, 1986, 1640, 1601, 1768, 1987, 1641, 1602, 
       1666, 2001, 1451, 1642, 1603, 1667, 1452, 1643, 1820, 1874, 1453, 1323,
        1875, 1454, 1324, 1876, 1769, 1927, 1325, 1770, 1928, 1326, 863, 1327,
        1877, 1455, 1328, 1878, 1456, 1329, 1879, 1457, 1330, 1719}], 
      Line3DBox[{1333, 1604, 1771, 1988, 1644, 1605, 1772, 1989, 1645, 1606, 
       1668, 1773, 1990, 1646, 1607, 1670, 1460, 1334, 1881, 1461, 1335, 1882,
        1462, 1336, 1883, 1774, 1929, 1337, 1775, 1930, 1338, 1776, 1931, 
       1339, 878, 1340, 1884, 1463, 1341, 1885, 1464, 1342, 1720}], 
      Line3DBox[{1346, 1608, 1609, 1992, 1345, 1610, 1611, 1993, 1347, 1612, 
       1669, 1613, 1994, 1348, 1614, 1671, 1615, 1349, 1887, 1467, 1350, 1888,
        1468, 1351, 1889, 1777, 1932, 1352, 1778, 1933, 1353, 1779, 1934, 
       1354, 1780, 1935, 1355, 893, 1356, 1890, 1716, 1737}], 
      Line3DBox[{1360, 1616, 1617, 1995, 1359, 1618, 1619, 1996, 1361, 1620, 
       1672, 1936, 1821, 1362, 1621, 1673, 1622, 1363, 1781, 1937, 1364, 1892,
        1471, 1365, 1893, 1782, 1938, 1366, 1783, 1939, 1367, 1784, 1940, 
       1368, 1785, 1941, 1369, 1786, 1942, 1370, 1228, 1738}], 
      Line3DBox[{1375, 1623, 1624, 1997, 1374, 1625, 1943, 1822, 1376, 1626, 
       1674, 1944, 1823, 1377, 1627, 1675, 1628, 1378, 1787, 1945, 1379, 1788,
        1946, 1380, 1896, 1789, 1947, 1381, 1790, 1948, 1382, 1791, 1949, 
       1383, 1792, 1950, 1384, 1793, 1951, 1385, 1829, 2013, 1739}], 
      Line3DBox[{1630, 1629, 1952, 1824, 1389, 1710, 1711, 1708, 1827, 2008, 
       1709, 1390, 1703, 1704, 1676, 1953, 1825, 1391, 1631, 1677, 1632, 1392,
        1794, 1954, 1393, 1795, 1955, 1394, 1796, 1956, 1957, 1395, 1797, 
       1958, 1396, 1798, 1959, 1397, 1799, 1960, 1398, 1800, 1961, 1399, 1830,
        2014, 1740}], 
      Line3DBox[{1732, 2012, 1828, 1304, 1924, 1764, 1302, 1923, 1763, 1300, 
       1922, 1762, 1298, 1921, 1761, 1296, 1920, 1760, 1294, 1919, 836, 1292, 
       1918, 1759, 1290, 1596, 1661, 2000, 1817, 1289, 1594, 1660, 1593, 1288,
        1816, 1917, 1591, 1287, 1815, 1916, 1589, 1283, 1915, 1758, 1285}]}, 
     {GrayLevel[0.2], 
      Line3DBox[{620, 791, 1831, 621, 796, 638, 1900, 801, 646, 1902, 808, 
       655, 1075, 1991, 1129, 815, 663, 1090, 1133, 822, 675, 1916, 1096, 
       1137, 833, 1850, 687, 1100, 1140, 845, 1863, 699, 1105, 1144, 1987, 
       857, 711, 1110, 1148, 1989, 870, 725, 1113, 1993, 1151, 884, 739, 1116,
        1996, 1154, 897, 752, 1943, 1119, 1157, 910, 765, 2008, 1213, 1215, 
       1122, 1214, 1211, 1212, 778}], 
      Line3DBox[{622, 792, 1832, 623, 1025, 1026, 797, 1839, 639, 1045, 1046, 
       802, 647, 1063, 1128, 809, 656, 1076, 1130, 816, 664, 1907, 1091, 1134,
        823, 676, 1917, 1097, 1138, 834, 1851, 688, 1101, 1141, 846, 1864, 
       700, 1106, 1145, 858, 2001, 712, 1111, 1149, 1990, 871, 726, 1114, 
       1994, 1152, 885, 740, 1936, 1117, 1155, 898, 753, 1944, 1120, 1158, 
       911, 766, 1953, 1123, 1160, 923, 779}], 
      Line3DBox[{624, 226, 1833, 625, 237, 1840, 640, 248, 1844, 648, 344, 
       657, 1904, 357, 665, 1908, 370, 461, 1660, 375, 1662, 463, 379, 1664, 
       465, 384, 1667, 468, 389, 1670, 470, 1671, 393, 472, 1673, 397, 474, 
       1675, 401, 476, 1677, 408, 780}], 
      Line3DBox[{626, 933, 1007, 934, 1834, 1009, 945, 1027, 946, 1841, 1029, 
       959, 1047, 960, 649, 977, 1064, 978, 1162, 1077, 1131, 1078, 1168, 
       1999, 1092, 1135, 1093, 1170, 2000, 1098, 1139, 1099, 1852, 1171, 1102,
        1142, 1103, 1865, 1172, 1107, 1146, 1108, 1874, 713, 872, 1881, 727, 
       886, 1887, 741, 1937, 899, 754, 1945, 912, 767, 1954, 924, 781}], 
      Line3DBox[{627, 515, 1008, 935, 1835, 1011, 497, 1028, 947, 1031, 961, 
       1048, 1976, 962, 1161, 979, 1065, 980, 1163, 1079, 1982, 1132, 1080, 
       1169, 1094, 1136, 1095, 677, 1918, 835, 1853, 689, 847, 1866, 701, 859,
        1875, 714, 873, 1882, 728, 887, 1888, 742, 900, 1892, 755, 1946, 913, 
       768, 1955, 925, 782}], 
      Line3DBox[{628, 1196, 1197, 1010, 1969, 936, 1013, 1187, 1188, 1030, 
       1973, 949, 1033, 963, 1049, 1977, 965, 1051, 981, 1066, 983, 1164, 993,
        1966, 1081, 995, 666, 824, 1846, 678, 836, 1854, 690, 848, 1867, 702, 
       860, 1876, 715, 874, 1883, 729, 888, 1889, 743, 901, 1893, 756, 914, 
       1896, 769, 1956, 926, 783}], 
      Line3DBox[{633, 1207, 939, 1017, 940, 1836, 1019, 1189, 953, 1037, 954, 
       1842, 1039, 969, 1055, 970, 1845, 1057, 987, 1071, 988, 1165, 1998, 
       999, 1086, 1000, 671, 1913, 829, 683, 1923, 841, 1858, 695, 853, 1870, 
       707, 865, 1878, 720, 879, 1884, 734, 893, 748, 1942, 906, 761, 1951, 
       919, 774, 1961, 931, 788}], 
      Line3DBox[{634, 1208, 941, 1018, 942, 1837, 1021, 1190, 955, 1038, 956, 
       1843, 1041, 971, 1056, 1979, 972, 1059, 989, 1072, 990, 1166, 1001, 
       1967, 1087, 1002, 672, 1914, 830, 684, 1924, 842, 1859, 696, 854, 1871,
        708, 866, 1879, 721, 880, 1885, 735, 1227, 1890, 1220, 1228, 1221, 
       2013, 1229, 1222, 2014, 1230, 1223}], 
      Line3DBox[{635, 1209, 1210, 1020, 943, 1838, 1023, 1191, 1192, 1040, 
       1974, 957, 1043, 973, 1058, 1980, 974, 1061, 991, 1073, 992, 1167, 
       1003, 1968, 1088, 1004, 1216, 1224, 1847, 1217, 2012, 1225, 1860, 1218,
        1226, 1872, 1219, 1238}], 
      Line3DBox[{636, 1185, 1186, 1022, 1972, 944, 1024, 1193, 1194, 1042, 
       1975, 958, 1044, 975, 1060, 1981, 976, 1062, 1231, 1074, 1232, 1234, 
       1233, 2015, 1089, 1236}], 
      Line3DBox[{777, 922, 1159, 1121, 1952, 764, 909, 1156, 1997, 1118, 751, 
       896, 1153, 1995, 1115, 738, 883, 1150, 1992, 1112, 724, 869, 1988, 
       1147, 1109, 710, 856, 1986, 1143, 1104, 698, 844, 1925, 686, 1849, 832,
        1915, 674, 821, 1906, 662, 814, 1903, 654, 807, 1901, 645, 800, 1899, 
       637, 795, 1898, 619, 790, 1006, 1127}], 
      Line3DBox[{784, 927, 1957, 770, 915, 1947, 757, 902, 1938, 744, 889, 
       1932, 730, 875, 1929, 716, 861, 1927, 703, 849, 1926, 691, 837, 1919, 
       679, 825, 1909, 667, 817, 1082, 1983, 994, 658, 810, 1067, 982, 650, 
       803, 1963, 1050, 964, 641, 798, 2004, 1179, 1032, 948, 629, 793, 2002, 
       1173, 1012, 1199, 1198, 1195}], 
      Line3DBox[{785, 928, 1958, 771, 916, 1948, 758, 903, 1939, 745, 890, 
       1933, 731, 876, 1930, 717, 862, 1928, 704, 850, 692, 1855, 838, 1920, 
       680, 826, 1910, 668, 818, 1083, 1984, 996, 659, 811, 1068, 984, 651, 
       804, 1964, 1052, 966, 642, 799, 2005, 1180, 1034, 950, 630, 1970, 794, 
       1174, 1014, 1202, 1201, 1200}], 
      Line3DBox[{786, 929, 1959, 772, 917, 1949, 759, 904, 1940, 746, 891, 
       1934, 732, 877, 1931, 718, 863, 705, 1868, 851, 693, 1856, 839, 1921, 
       681, 827, 1911, 669, 819, 1084, 1985, 997, 660, 812, 1069, 985, 652, 
       805, 1965, 1053, 967, 643, 1182, 2006, 1181, 1035, 951, 631, 1971, 
       1176, 1175, 1015, 937, 1204, 1203}], 
      Line3DBox[{787, 930, 1960, 773, 918, 1950, 760, 905, 1941, 747, 892, 
       1935, 733, 878, 719, 1877, 864, 706, 1869, 852, 694, 1857, 840, 1922, 
       682, 828, 1912, 670, 820, 1085, 998, 1905, 661, 813, 1070, 986, 653, 
       1978, 806, 1054, 968, 644, 1184, 2007, 1183, 1036, 952, 632, 1178, 
       2003, 1177, 1016, 938, 1206, 1205}]}, {}, {}}},
   VertexNormals->CompressedData["
1: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
rZPgSKhtfbkvHId+uUrq6A1i15e5083r6UjcKL03ry4TO+c2qbuLVOHQo1sd
k+50PFy4Wsl7KAeii8pf5snm4iTXvdfrk+n4JJxU8tU6D78+WmTMnEz6S5d1
krrsK6nLHFUm1a0JPVKp0pMb+zkH0YeHbm2s88Qyfg2mb8T6nw658W0yuThy
lTu0ptABmvc0vlOL6VirfkpfNSYXwU1TAk+DjWFdMiiXXkTHl61xycw/c+HV
6b2gUuP2v75uozOZxVKPq7GkVKx9caY6goayemv2E/UpR3fNkNoAEhSKBJ8V
OaLydlxjUy+hyxbZmdDiJ3Fn7XkFgzsh+LZK8tJw1ABY7p6/XEnUo+2rTN5P
7XsHRo3og52MFdg2NiMeRdxXDx0/PzUWz4JvyMHleYSuPeAXFpdL6PoOJrUv
3N3Z0It/o7qrO+EvXXaR1GWbSF12y3qHG0sdHfckG84NRGaB8ozTIvTOM/zg
c2d6Taw3co14kzWThYkZl3czh+xRZ362v5vo6/V9Qr48F88GA4u76I3RB/AV
Yl80WU38X/rDLro8zsZ4Y6r9YQfNf33dOGYz65cy1CD37s6Hd2/eQOeTINZZ
Qpeto+3uCN9IQaXBfP9txUCo2kh6cn3vx5O2U5kuqsRzJCb83JL+Fq07Ti/+
yVUG93KGRoU3xPX2MnvmMJ+Bi95h3gNJmZBdXZMRSej3lC1Kyy4HvUdS2XbR
636v/6GzzEmdZbW1Y7ihhdATRx8p9cVmIj6Su/G+tQcUFTbNuxG8f9bjLtfH
TLTyx4319tvi1BhPxiSxj9tt1+zv+9+jnmdReMldQ8Qo+A7uJHgJw/5LXQbv
sW6y4lvGxJ/rZvOdzDZX5kLc42taqFrfBzvGhvDvmhSs7xlZYtBaCZHTBxLU
zPqgm7LcWY6VAscc76KO8FaMtk6k758fQabNL5+sS8NQcw1M8CrvRWj0AnrW
5gkIWhuvvve1HaPk+2l85Ptpm8n30xo17rib363HatUtxMlLw4vkJCu/w5Fo
I/0iWEm/iBukX8TStP9wJpJfIXnL4sNxUffr8WAP09e7UzRUWL60LTrlgiu7
JJN0Qzvw2L/uFYccFVZrlNhr55wgtbVY2jqqB/XVqTs/KE/h/dYlNgdLTTCf
YpRTUNiPpNO8a2+cIPr+ZP0vlTq3IZ/xQ2GTbjdqZ7J1uyO6MbFJLVStbRw8
UjXfXFr6oMeb1urR3oVib71aiYXjeBG21IrhwQi+Lb21ZOLOAEaWr6hfwduP
YFKHlpE6VJrUoXe69WSGLcYhr8uwVMh4EM+olgKOio1QWHtn/mzeELxOZvGW
UMfBMj9lYKiVjWXMpS8YV40glLbQzJ34eWEGUQNx5xIQ63J5tOzUKFq3/zLh
mx2FQ8QbrR9fg7CO9J24TPpOaJG+E7wkv0ByRZLHdVQ7890YxQ/rKzbzfaMI
7F5uvw122LgtbNJ/6zgCMov3XWEYwei9u72f79pAwzTI5VnPOBq40mUvbB3G
qY+tfhF8BrAeHekz85jAjQKph98khpC/r2enrv0NqOVo7FybPIyt+qHaUkLt
0GV+kLD8wAhKrSPPpLaM4L6g3o4tSm04EXGWxVlyGLZ+i6bNT47DnWrD0nyq
F2z8XyIjM7rhaPFYPEZ4Eot3rly5r7sTNn3LlAzm27GO9fTnxckTMIq7lZS9
cADUk+ukykUbIEjq8SFSj98k9fjxUMY9L9ZOwctJZNd28y44LduTXqJSBaH5
yYu2vpN4Z7Hl063wAUxv1JhZtukt2s91t1xeS8G+NEuPLQwDUFrB99WxKBJx
31NZvB0o6LD7Nm8o3w+Pet4cK0VfvCH9LnaTfheOpN9FKsl5SG5K8pDFsQvn
HCmoX5bz6KRCPxwyk9l6WMzBtbGrnefQFI4udDgwcawX9lfvXql+bYLFR3S4
fq2ngL/UuO3dggEU0Xrcl67RB0vJjeR7FlPgUPtQsHRfDyo+q7jI3L+N7d3C
ehFxk9iupeIqkzSA2mjVdpvp6+Dqz7womzuFp7nLh9fwdsNV7U07r8AVSD0w
nZrxH4fMccuHxfzNWOaiw2hWNwDdvoWaSgoTsBz3Z9uk1gSv8/pZi370o07y
iVOAHQVnc3wkHye3Qf6c4OzFJ63Iz/jIJ/9wCt/NBjnKJFvAbSR6bPVIE5KO
ajxf7DsFaaF17CsTOvC9cJ457VfFX9+PK5CfYyiTn2MkPEobEo+jYjyZmvvO
rAXt7n0uJgYl+KTU9cOLj4rvUlX3+g92Qsege8/Bzwn4on9P7PQ1KsSMOeP2
6HYg9cHBL4w8IZCtT7ya+ZiKsJKXK7petKN6Q/FuLa5nmCb9On6Sfh1cpF/H
LMlnSL6a5OEu023erlQcFUrL8PZvB/37Ir6v9YY4ML6+ZriVivNHQwILNrXh
rsvilWWq94nnoFrnrSoVN4tEE4/f6YAc+3inyNQt7OOs5B6bpSIo3l5/hUkr
LD/w33RjV4dprdb+/eNUiHBcW7BcphmBQk5qGk+L//r85BH5+ckF8vOT5207
E3+Z0rDr9ZKtlx424O6XPrUDdgVouprFe/MkDQIsHZWefs1Ilfc47+31Cnsu
Ge3eeIMGSbbFO6dWN0P4qNsqWvgLCGis4p4h9vHwiRwMeNKEijKO3Odhj//y
Aykh/UDMSD8QkLyA5HdJvrN2T4SjGQ2PXUavTRP7/DxQInSm4w6hv2/rXwuh
oaux7M0y70a41/BzB3zSg/iSkWhpdRo8qTGSMWubUfE46vZp6xvYs57x554k
GmKmUy938TXChHNLSZLEn/3BdjzbeNgq9z42d3ekXzyRCNPo0eiAj3RcYk7Z
M+1UisWcPDnyUX3wsnKqXSRKgaSO1Bbb3fXQrb7suDt+FJHvt3LcZx+BnlhD
zOijFpg9pL4cE+kFlb4kbW7VJKpOy2cVmDQhQ36p20cJCsrUf8YFX+iC9WEG
7ajgHjjqc8n15Q1jmwcjc+TlIej9zT9k83/9Q77u8z8hPIAX37XnRjaOYyiA
qf2JYDs69vneVlVowcH6QJakbipiHuq7FRwpwDanOdYp0xbcuDO9WXEFDayO
xiFXg1IwmS7netO+BZsYKk7QN9IglLftx9H+iH/4L6mQdfP2wVsqB51bsG21
y+QpPhpMaxRHQpuc/+EHcoH0AymiDu8zJdYvLo4SDSTWbwq7ZCPoaIa7Bx/T
pP0HIc1k8LKMWJ/e/Wvt3UwHLM3QFLQi1m8N+TGZTqwXZai607dZFztZlbt0
iPXBY92ZS5ZO4qFTcujyvcYo2jzPYU9wJXbH9SsJri2gm97qpYWzwrKx5u+L
oD7VKCSWW4wL0a9/2eyjQ/Iax9uGxaXIEncyEvcvRvnV1wKXib6/8+meud3C
vQiutxyJPtqN7K1ttdAfh3Hqnlr5jCFIB0UsW6QziIVcx/vyDxPnd/gof8Pz
QRx4qyFn9qMD+/TPyC3zGsU2vvTBMd5R+PTxDvrEDGO6+wyHd2YzJnvWToVx
jmFgiW3/yp39eEG9tbHpXO8//D1ekP4ebrePBHjtn0C2QLz9DqKO8DP0LylL
bcBlz28vF58ZA3aH2We+H0Ei805/BrZMjC9/d8JEZQx2r9ZFltSMQP9ntr4D
02s84J3Ovqc+BlWUVio2jeCli91cf93Lf/hKXSfr+AO6okAgwY8IWl5WI+pq
mXr9JIOr7T/8OhpJv45bKdsFf/tvMJpwOf3267BRqpiVL7oPk7iA1m/E+qfP
zK9l/Pb3UH/hubHGEqHSVivyiPV6C9PHfYj1ffxZFk+o6jikzRO8RmgSNxvW
m//261isSI+L6rqD6GEzMVaC37vq1DxFcNq9SwIj9WqQSJfbeH1/AwrtrBTu
ixTBP0HUUsWQhrlwUZfpk41oSl6/49GPQtTulPaKukCDpoim+oGLI/C5tPqS
Zn4bNP1K94SkD0NfoGe7sMYE/LcJMpprdsNFtmVJQnwnvn33qbvKTUFg1wKd
Ryq9sNvtbyhqUwte0q/DhfTr0CP9Ou5PfxO/dX0KDK8eWrw07gTLt0rO7c8r
EbOCGjzdQYGs0upL5/f3wcNGpXHHj2QomBbHm49SkJ7Nd8IWfcjM4nrFqByB
5HBpHZ5JCl5N/ygIPtmHmzumx/vCff7hf2VF1v2hII8mY4JvMf+1/7efRqfW
yybGJFP0kP4bHaT/hijpv+H1SD/sEbF+HZv8fjFivUDjQZlAAx0Mhg60Xv3t
pxFZsN2OWJ+QP695y9YIsnvs74UR64OanMQWEOubVHcc6N2gDIOc1YYGxHqJ
nOhEM2J9GJtdafxCLQTnHi+2IbiU0Uy8DMH3+E690DK5jDVLSmUE9rbjskv3
3kChApwNPP6ST4aK/KVtjE4/x7GML/j29pwmBI/Kq34i9GdMtO2iipVTiCv2
i3pwvRX6G2V/9q1rwRrd5bP7j1BhvO3t3fNX2lDUOWDpbVaGGdJnI5f02WAU
+4/PRmSVyKtzr6nIblzjn5rVBrnY7Un2N17D8qNQ0GwKFcc+B70WKWzD6OPe
ULZ7QRAqCSraT9Rrtk8sSzcT9Xofo/VIpdrTf/hxcZB1PIiNKYIpnYr4y+c6
Kgm+ZeiagQKjIQ5dc17ORvC1Klv1OgluG78/UEpJA4XGjq+WEfznmpaP8wS/
nnKxc0+AAhQ+XHybcq4Ra1tNztzni8GmgTW5ZaE0hKhq7HWy7oXtVrFlxcy5
2N0cuuPYIAWMRwqU1T5NYk43sMCytx5MQ9tPmW/qRbNu4GCBDgWrPY1s7gjX
4/3pSzG9Bd1ICHxt2beVihtjLSJveZogZ2V47svxRhw+uqu16A0VG9r1Xt/W
aUC0oPjlYyr1KKxMju0ToeFawFy2TEkjXCxZAtyHCjFF+nLokr4ca0lfju4z
bMf4XGjoCfPFzI9G+KRnLJkYj8Lg8lWZ291oeHd8Y0UEI/FzhefPLHV7Di9X
x5uB7jS4s0hpZzI1wWCxv/U7zsf/8A0zJPuBZF7a9W0E37XKcS8bwcMsS0Xq
a/SxZM2q04IEP3xrQo2f4JoMYXFH6dchU1La9Pu9+ssBjzfWEftLFXIcULog
g5RHRRq6lS2YXv/1ntOTCCynppvsX0nD0mztYqsPA3Cc++qakpKJ/UWLgkKk
J6E/+zYpTWsKzEe+Na7wqcbmJ1OZfFUdSN+z6qpk2hSW1LnmBTtXwTKF6aVL
SjtuzCQF7VxOw9jt9K0bqutwbvnR3DyNWtiu5nwxo0ZDfZfWlfgzNSgLOHo+
MqoKS32FQkVS27E2hUV4Z08IFOrMixfaUaF7jEtk5/Zh1B1arXq4OA2PdOcY
x9PG0XjqY3zkZSoW7v0SSnUoh7fEjWq6Vit0/cqdWN2pyPRw2rAxtgyxr3te
2zu2YOfZTRfpnF3YZz/hwHM4ABL3Z188+j6Fq2LW2o6TI/i1QK3kokoKwrp0
nPccGoPTYuu17N+p8ChI2653ugTv2A8maKc1Iae/fNejzTRk0K/IHvAqxrqb
awwOE/9nc68o3lefyrHkaajymRgjqAsk1Feo03GxcZgvZnUPhnV7pyVKfHHg
JvvsmM0UPONdzZfLjOHjWZcthj8SIakpubmAqANPco+ee6VHw51zPAWXIwqx
YjDsmfTjBjwsPC4X60zwg7stFrAVgsNXVLLhYz3C3FeMKdIrYCDhJ6AucB+a
decMmJToaLE8rG+Z1ot760QHEk954X51e3TfqikksPDIbNYdx2T9CWZvsThI
bGoUWhkyjObQF2mmRZV4l9tZtGVMHyPRq2b6ztGxdjn9oSlLP/bJeVJ4Zz0w
HTbtM/WGAs6wxxKxZydwjWO7ScnlaAjEbK86/XQIzHV7o4NMq1CsE59HDdKG
rk6IFY8EHdrr1vE9fNkPTXO6gJulK8KfXFn66woFT8VT2yXnJ6Cgq3+waksE
akpj+ObDB6ETVHNt3+pqMKI3FXs10aZacN9NmI6jocPl59cPYK//bJZnhzNE
Hi2Q6mKlwOPwlU0P3CbBuE0/7YBdKK5OfT480jIANom921a8qMbqF3kMVlrq
EFFZ4TOz7/d7M/+Z/3pMzn8ZkvNfev4ptzmZKHCkt5xKePUSthMP2eO2/Hu/
iz/x4DNFg3szN4upfv8yfPxZMgTZfjxPmaLD2HizZPqWDuyXexAXO5WPF79k
vE5tpmK48W7sRrMmiHkHdUy6ReNWS1vC7Qc08HAwbu2Q7kPbXa2BBI0crLdc
J8H4mgIzm1u73xygYLHEy29nnOvRnFT0ZvxWD7YZX/911ZCK4wMsNXsPNCIk
+sPCKaEG7N+0YV60qhVWJ2xLGsXDocjX5iI+QMXWOMHhn6cH4bx80jx5TSbY
ZOTrKGsnkfbcYHnXsymo9hmlqTNX4zvv+8k7RzrAa3yDO/MoDVHTNZ9XGdZi
MjzqzPRENQY+daVsf9wBd78PY9M1QbAcuLt6WJ4K9lwmlme6w1jvobDuwoE0
7H2QbG5vM4429cra7UZUpA5H7LVZWY6E7R1hivQWhK4NiCqv6ILzkcTiUu8X
4Al0iBqrn4JRY9jEA55RsD9I5zzSnYz8SPqCq0xjaD/Zu3SOOH+ij41RhMeK
QYlMcDFSaALrIKvSbu0KuAw/v9/N9AAaXOsZJlTo0FqZEzAb2YPzhSHhphY+
iEzfmXL92hTUnphQ1CzGwH5yOj6FLxH9Thde3okdga/gy7MfzWmoOrEsNEKx
EBstoq60ijRgLLhfKF22EoqJLYk3yu/B+/sKpWEZOij3Hnht2duHa4+nFq8R
9UTyumn9Ox8oSD61rETzyTi2BvG3ljrHIker66Kc2TCEy7udKjiqsE3K2/rH
iC7eNwfLaknSUap8mqJzvB8qrie31l10x9TBkkNnvCgoMQ5h/kn0b05mbf7e
uVE4KDTKl3lnCKE5oZy03CrE1e87o7fwNlSFOQL3i9IxdiSRal/WD/sTXTPZ
Wx/jQHTi4yIxCtrCVkCa0Gctk2mLH0SG45KgF+dS50FopBYeqrtUjbjHEUq8
wxoAy8u21YfpuL0p5cWU6ADqv6S+e1jgBIehtO7g6UncF5wz0gmaxKvtrvkn
1oXCfKND+VT2AI6PKI4W1FSD+n1X9+PLN9EeVmzUt5uOpP6XIVQ2oj+s8kwb
mQ3EiwSlyDUrBqAWf/T8otlJsDY1SEhxdcDqa+SepNA2nPt6w8z+2CQ6LG75
FS1pBP8Oy++F433Q2KP4Wqp7Cs6735/o4GyG1a2be77MNSLWQH6WuYYKadf9
shbNzZAQ4eSN+Fz8Dz8KD9KPIuRwouVv34kfVQ2OugR/xSna+32BAUoKe68v
JbgIsyVHCMF5vvN/FT14E/YBZnZOMxR8l8jd//hmLS7Qgs3NdnXhPJOx4NMh
KvQOq06de14PtRUn3I2N6iBjuN9t3Qoq/OUr/R5RK8AicUVikUUbzr5fXyhQ
TsXdUvYVbFql8AgZP/rgaTPOSu+LszlDA+XZPYU1HkUoK3QtVBBphCmpi9eS
ungjqYvdv9vVn8zswJJ8AVMeJiqcZe47XnmcjwukH4Ii6YdgRPohmJL8LMn1
SX5OYXTMj9oBqYl1UjLE/kIL3MfWH4mAyr4D2ScG+tG9vOhK2U4K3u1o7LLN
DoMAqeN+aP1Hx/mSOu77gjWxT7nGUcB2hOVu6zD8+YWrL2S/wznSx6CT9DHY
RPoYyJK8nuRsJDdUvePEfXAcvIzrPz6gDMMteFG2hHMghk2VorQDJxD1dpbr
7a4h0K9KHstb4o/5GW//Tr90+N+cafjVR0dgs5xY7AM9PPKmLO65Xw9G1rKT
41M03HZD2vpnuphY3/3lTMQgZIOu3Zs6OQYTkePu2afaMO5hna22dgTyR08k
TT0dgZ+JU++0XgsESL3/hNT7kqTenyx6yMYxP4STH1m9vH6Mg3v+8NqWZHv0
kz4DAaTPwHPSZ2CO5A4ktyO5ROOV1bLEPjqZ49QKYp/Pzwa2uzzXRLbzNo4r
N0ZR3VWUyd8/Cimf/ourXmr8I0evj8zRC51VFzka9BbSpZcO87pNIVgzj1XY
qBvbmDeJqTnWIKr+Yr/kAAWCFeku27K6wMgw/H/dR5W83zjJ+42XvN+EHJ98
Ksl4JaZxuEsX8XT4GviKRkoUYpZtMwdVPh2Kjr11VR50HGNfGmi1uBCRNaPf
Si/UY1/KgjXdYUTfef6TOOVJAbrfn3SQGXklxraqgPJ0jI7aMscB+cJU3CG/
B+EnvwfZQn4Pkq5+f829T6/EbpsltbB8o+PVkAK3CVcUNmlZ+zN6p0N/j5SK
WAcdytYicZqDkb//Lsv//zxXDDnPdYBzo54hcZ8kTTIdtCbukzNeagfPUlwg
SM7FfyHn4i3IufiNz/7Dp0huQPIr5Jy7DznnXk3Ouf+J/6kPaSbnx5PI+XFV
cn78T+tdBEQWvqinoTnrmo737/ymYddLtfUq+PR9zOT33HeEsFpMAnsN5Koi
XFcOX8ZUJ3P52A06Fk8vO3OPqwLj+ZdKea4oQG5v+KHfc9+bsjoFNVeWYmx/
/8u8RFk0XmdfaZBLhwiVF2t35qOPZfNt3VNXsf/4ap/acmIfdns9nrgcGNga
duwdVUL/a7Y9v+e1DbeV3d+ok4Unh867K00q4HC6nODvecaj+p2qv+cZpfIF
W+4fk4fF3POvNyZoyLbhPvvUrR7OkSuVpQOVsXp97kkZETqGcy3TJhdW4+Te
76EcM0rwWXXouOTv95vWnC4ykypHSUdwcGyAPOI1qpoE0ul4dkLowvZtBdiU
nrK4ZYsyluselHIqJO6bSt/NGtJ5oLHs9Lx8+wqMg15sXVBNx+MRsYylVdk4
IGVnRdmqhA8DSj7GTcT90WtjJBXzHsOr9rAvEVdAMUtMjtZeKtak1PftRyf0
5xMyY6eUUFRk78jKQcNnZqnYLTWEPh9mjfAqlEOtbSLf1ws0sB6K/Mnp04zk
ZAXpo+myOKp1dWI1UUcOa/Xo2RN1pL3jXMcDoT/nuTDOCmcXETourPrnIs1f
jWgJ7A3nPfvnOWgFwd7Pdc7EdRtcoaRGLwHj3U1Lbz2ThbwA8760Y+EYvfbl
xgWVGOxRU9jt9JGO6RL6mZHhQIgZFX2fmXHCioSf/NbzdNjObGrD5iS4nVOT
+v0e773qW5Xu+XR4xPe/M//t78dFX/7rSyXOKReEUhnpGD2SY5m28S06F+jr
jgWE4jTDxZvKg3RcKtryfAl7BGx9RVizPlvi53vLjdzf6dAvbTtkOZaPmTR/
tsv9GViaKWzK50nHqXz+7ulLOQid2ausFfscD7m8fChldAyqzF/flhaNYnfa
K9aiB3gaTgjlL3SsWnVWg0W4EuUX03d3pKUh5LluxrZDdPC9jv/+S7gQH2NT
RmubPBG5rJ0q/ZoOUc6qkwo3YqH68kOMbOYddATJlvTP0LG9m8NuY1IDnvVO
XPa3SoGGwAOzuDjaH6+zaGVcPA9zCbyumj/eXv0EXA8PL2Z+RuxTxerWp/8a
n1+v5nBddRtVhiLUQ9N0jEsV6jz52gI+W9MzqdOJcOhObtz/kwpFscV329YM
YnGc5EejiiIsFJJXHKVP4J6fxq1ruyfwwyF7a+OGOizQjtzZyj+IHfysjXGD
UxAa/dYjpNqIHb8OuFo6N2M7k/npCULHB7scUKeLNaG3XYHpMNHnFP/MviFH
6O53Qql8UuZNMPcbPOb4/i1+6cpLWBvS4BQeMOvs0oSM0ZvMNVci8VAr+xeX
KQ35XFvOT7s2ARr+y+Zo3uDy3CJ8xIyG58bS78ufNMHEwOH7nKMDKHv8ja0I
Xn9510IqwQ9e0lsYufEBwj7p2rgSPNkhb9titybs7xRSkk9XxzHtBAc/gg+6
HzFuI9Ynf7wdvUfuz/e//I639MsnytD7hFPaYI8zJLmrl/Ca0hHmlOfQzpKA
berfhdUuqCP86oVNVZ+I55/F3OdZQgeaEk+8tvoYC44L6XXHT1EJvWDT6P9w
GKypuRUXLAowl38hfN/ecdysS6xgaZ2Ek16M/nveKqx/vpvBbkU/Gjx2Di3O
p+JT4RuDiht1aFjXyXDiRQMs3IeyW18S+mKX0ben1+sJHaD1+lxLASI+5ab9
bKHhRIYct59LPdxLvMq5/QldcsXq4egQDT29A+/cPOsRYLvI4cLJMEKnb7gp
NkZDYUWp9rR3Pfju1nm3jT/DDoeSEtZxGlIkYuRdfOohR3SeRR62sBWq2CBG
cOMvCbLhBM9fL3Dv8BGD38/fofMEj3iwf20YwafGL2cO5P77OaOb26Xv8LJX
IG9TWfIxZnsIv1po10nUiVwyV47jb7lygyKHZvYrJqLanNIb76aKl0uGlvgT
50kDmU93jMyne0Dm033v9XF80d6N+zdU/LRLo6CneUlQ59EUNsWIT581H4W8
quKF1Z65UP1earTKeBThbG5iH5im8HJ2Nk8lvwxlm04kv/DqBoPa1rWLLxH9
8OAjMfdTVfAc/hYelFr7Vz4dN5lPJ0Dm023w3z6S85WGxzcZT1WeqIZ9wbsv
yg25OE/m1iWTuXUdZG6djGPxxTtb6GDt691ta1+NwlORZzlVEv/xvqs6+b5r
qj6TeBmhY5x2M6355FkNcYFBxe7ioL9y7kTInDsBMudO0//K4Ml9dHAGeZvH
+1YjWnmLM88O97/y7x6R+XezZP7d2Q+cId3E+hXetySe+VVDYblbZrib1V+5
eLvIXLxfZC6elozmLON+OjgsxTjeE+srxkLiJz7r/ZWXN0fm5dmSeXmFaYZh
y4j1+fY+XNG/9289NXD2uvJfOXppZI5exf9jjt6/5WemEpeGNlSh/QOjeeQv
M7jVrVyy5Dgd65Q9N73kTkKPOpfXg7MKmE0tq8um0+Fz2s2oYoZGnKfVloI3
StDXv3zHE+lyCDD2fk8krr/jfRoE9hD9Wmw6u5NYBr6w85UVm9ERarTXzO9m
KW7KXyluan+FFzKGOWtsiD5V4lP5krul8C9sMahWe47UFr/c50Sfx5+YcHXB
/VJwjSlyHx52Boeeevc0wd++nrmeQfAL7D3mDLomKAu4I8pqR8eV2be3Bgku
pZ0eseqTJkIG+w+wEVzIp59xmWEpukzYpp5a/fu8PPV9lTdzLJKwyGSDwI2d
slh+p3Q3I3Ed4rRq4vv56ViStnn0/NEiVPi2i2vOl6D21gbTJiviOS5W3Xxz
QTG4pL9Kj42lIaqy+uAoUW/dWet2FhwuRqpBQb6BaxSuzDRt/elHhznDLosZ
iWJcfbs5KG+jL4pqxPmFXhB9kZ2/4tipYuRYn0lYnOAIv0/8Z+wJfrP00I6A
08X4VlRbFSZmBGr7+34fgg8lKcunE9y1gvW0dKMG+vMWLfUneM7P3feLCR5X
GWC7W/vP+a1/4s3Lhb6qVSShEFfYL8tJQ166NFqVRoe2mNLeD+doeGJzbGnb
nRwsvTR3PfNUExLkw7IKiHMrUHvazUivAD6NGe0XWYvBf/p990NvOlTU3+VJ
Hi5Ekwa3w8xMKthWF8iXRBJ9kIZIw1btQgwqKnieD43ADFv6r48xdMwM/tC1
NCpE6YpFSmLHveEZy2b/KZbYp44z2di0EN/slPXuttrDuix57744OgJG5l7z
mxVi17lXgu33DVEgk5IlRvCZiMN1VwieWMR8fQubOiQPpL4/QfCFSRn+SgSf
uFlKMUz8s+/Hn/h//VSppJ+qAOmnmqjGdHjt8mT45DUePyp1FjMN7tdrqXQI
kD6rEX/wWU0nfVYfkj6rQrfO/tjuRYMmU/u1N+rvsTLex+hRZgPueQyWz+vS
IXZ3g61sYR421XjGlmgW4k2QqNUUcT275zdkCbzJRxyVheOQXAqWmJy9cjKV
6Js2U+VshvLhMpr9qXRBOGbzbaTeE/18kntdgNCHfJjoh079euUJxmvtwk/f
0aF7wy5K6nM+2ts0BJ+es0N7+z6rQoIvZN5i94Pgp8d5ao/RDLCU4Z1ILcFP
9Cg+EJnOxzaDKpMw73+fb2vc9mxvmGgdnJb5PfK/rIecS4Nzh5fQYXzKt7lD
KhmCi/12zn07DaH6YR4Z4nrei5p7vK19CHe+1XS363nCYznT3dXrJ7C/VmVr
7skpfOmW+WkRHoeC7IyLZo09uPrj3r3blTTckRFK25TzDiLNb8wYNerROxXN
ME2cG25vom3WbsjB+Z/pB7Xm87HhQ3ysbwodPIJ1qSFFueDvPTCyZioJCfzD
K4MIvab5RWO70b48qIjVd0hHhqJ3L9MSpwI6rBctu//9XB78lnjbJl96BlXu
8jdChD7iejHmqyybhx93Zt43frIBX/eNKHWCx1iJnu+Sy8Oj8rMT4mfuQT7A
d0Sf4Nv2tBw7Kp+Hbu7wup7Qf/++95+4ZzNTk19LHUKiOCj6S7QRJJN+6tlP
on8NPG19wjIZy5+ek2GXOAntH95n+6foCP/QHX1NaRijFuxPHMM9sPsSJd03
dRyyUUuUchKmoK29xFf4/it8667bGy/aTdw3Tguvf6HBcfaQFu6kwfHANe1x
g1qwUI59OuNDPO/e3CyHq9/DueBKDbtLHjwCH380z6EjWyu2JskhG0ptx4RN
776BR/MeixhCl9w/0txqO5ONlonEZRsowehflrKPu5KOIPvoxkurcrBuq9I2
7YseOL+hWi+N4E+d3qozcOZgmcvG1UKJ1sjqlE/sIPij8KQTgetzMHpOdbaM
7Q6ut2jEDRLcOELz0ATBWWtE0s8a/ft55z/xlMTPrcv21KMslet2/wlNuOXl
yncTdXTVMmc1keJhWE1db3Nb8wS3gk3bii6P43E9xaNiIRVvaM8eJryLxJYV
VzzyOjpxyFVlT+oGOnp2bd2/RisV9Hkhodea1WCy+PJucwQdvaZrasJLMvBq
XbCG960cWNOmvM+VEvWi6xv/Zff3EDftyY1WSICYh27Gt1o6Fk9RN75emEXo
/wbTB90vwZ+ZX7u6gagjl/wow7xZWP6NobL8nBteHrPM9Sb4qMrNto87smCj
9sPwZpolFJh8fVMInhF7xzZGIAunPJfx2/Pq4VPTyHwmwa0rRkpWCmbhoOmX
dKVn/3P5fXtvy3loEXp5Z+fVSKuF7+GVzK57vISOBKEcS5VH+RCu07OOVSL6
uou+Gr3r6JAZo9/BlxrYPqvYIGxESO2r7xx766cI3ZGi9iy+DSueLhOYGh7E
nM6x6BPTo2CyO7GZ53Avnt9SP5cpPI5vkjtlzlG7kUDOYx4g5zF9/juPOej/
83Z3P8qUWneZ81Kw4OizW8xWieh52jaxbrAfFraD9R8EKGDMcUt6MBSEYQ/x
96ZD/Rib06Yf3k3Beet50anT7rjH7BBQQ/B+m7ir+QS/FzbzuTTWCnaLDLN7
CV6t3/16iODDGZFPdVfqo1PzvONv/v3Nj0YawW+UUeb3WCjjwAzL12suRH/8
LSugj6cUDAVObsqpNIzffBWzuLQD2awVg3XnmuFzdKKA24IC520TVjq7h2Bn
tX+fo18vXGTyqihuw9jRsm/e9Ek/uv3eJKadbMAZmdyeip8T8HjsQy0SHYO8
7b5svbR2PHsbVbXg4CCG3T5NrE6bBE2R/1bLs25wXrXXPRDbDCZyTrOEnNN8
Q85pdr5MEhg9OIUtG02PJR/rhZ1v4uu9bx0QuPx21Y5DU2BfErDi4+/3SKkJ
UgPnHiD2TGvwQYKfWy72ZM3xXlgkHT3qNfTn+dwMUk+x/k1PnSFzut+QOd2m
ZE73VzKnu5DM6f5A5nS/JHO648ic7uK/5XT/VwcdIHXQ3/XOEKl3/q5Tjvwt
j/u/eoRB///M4/6v7lga/3/mcf9XXzz5Wx73f3VE8/+wjvgZUiYef6oPzVe/
fhdrDYBhp4KRwzgFNtqzXecejuPQgaAExsm3sFJZPrv3zjDCrFuW16+nwn4t
Re1SSQG+RO3b/GIdcd2yjr1/20ZD+5D1TO2GEjDfLGkyrq7ElRM2GpoKdGhN
yvNzrCuF+TsZ+aCYLNiJ36PcJ/p/rk2/tBMNSrGMuWTNhqOukOi9nEsh+KRB
G3sU0f/zuEmK30k0h2701OQSoo4ncwp19BN8ssdJe902HTg6r5xfQXC/Ib1P
CwhdUOCfHmUW/O+vT+/NMMjEj6PllIA8x/Ek/PT8zJwoSZzjlpQMx3NUjEcM
1Frw5UJ9zygbV1Q7TiXkqIgQ5/3baJxKTS/EquFugxbDStQ69n510yN0bgz/
eseWIgSeXvvpAC0Lt15brHhA9O2q1bdeGxJ9e/XyBZlz8+bIlQg85ElwivkN
gwSCa99du365oQ6WZLZrvCC4WsYD92yCf5S78qpz4t//XdM7JfO4Dan4uUfj
YrxOJj7eM7R4ebwdg91rHy+eoyHcwlfw54N85Bzet0TLrgqclQ+DTa3pUFxo
fyqLVoDr/Jm5Qouz4TqTVy9C9NW/Ghc5yxJ9dZW13cFSHx14rK5zkyD4+6mH
fQoE9296urKL9c+5e3/i/Dk2LEGsRD0KXC3gyp+DLdcG55dqVsGAkeXX6yfE
9RFc2CQknY8k3c+vOhdm/+v9Z7ljgwWfE/1z2nvr+cIcCIkKrjv3Met/7Dk6
L7173O1hAZrsIq9WBNVAOZQ7OraRhmvkfEo4OZ+yk5xPUfUzMz+l1Q9K0FF2
l5RJaB/humG3sBKrDR5uXBbfDxcOix1rN1Mgv0XB4c5QJg759u2UzumH60JJ
kUERCs7tyotyNIzFCDk/kkfOj5iS8yO3LyS95+lshMTKq4czsmqxQ6vCUsef
imXuKrnLRseQ9DIlmuXGEFoWUF34Axrg+FMk6UHIOPamcEUKfR6C8xDNc31h
AV4dDCx2rR1HisJ9PwNO4tw8W1iu65iMso2bn//sGEeUT2CLOe8wLM6K6Hrv
CYMyOZfRTc5lHCfnMr6Zn3ZNIvix6s9GwgQ3c2R/WPlCDVcYGM4Lb+jB44KP
Fwwe1+L0ERUTAWMK2kzzPS12TeJO/s7n25d1Q3HnGuW5zjbUnGuSNoyn4Art
cMqX2B7EHPNr8n1XDqfV2a+mV0/hhf1+FmnOXvxc0Jak6JGBhV+P3Dqyawr7
rMe1DA/24tcu1sJunhhkuG8YukTUL5rPLvZvIr2wcoyk9kY+Byc573CanHcw
IecdltT02x8i+KMg46OLiTrl5ztq73xACzmrzp+7TfCA+TfO6sR6L8vdH0ey
FCHnF1zDKkIDH2etJ4dKE8Zfzu/afy8fTSV3XuyWpkHn20jSnF4TmJ8si63Y
noUFDF+ld+nQMKLC9lLXtgmB8WMrVA4l4SSz18l1d2no6/Q+K+/YhI5tL6Mr
U+NwsiNopNuIhh+yStHij5vwUGnu6M6KEIw91R9jNaGBaal97gHXJoiycMcz
7QrAmXE78XhTGjSevG65+aQJupHM+uJ8T+FCH7DTMaPhcpHH2CzBwz7XF+Vy
mkOAfH/ekXx/vp18f/6q1GZ+F4ILs19ZzuTWBIdjZc9MvbTx4X1YzCOCiyhQ
nvMQXMZvkbejiCref5oUdCP4TIJI1iqCax6jiQ+t+Pfn2Iu7d5Z00ANwwH/9
nIXGU3DkjvccnP/tLyP5+D53HRbEpKuaEHWIsnaH5NFbU9heZDsgb9+O+tSA
C36VQwj8svTR+pkRlD5x5Y7f0IwFLNl3GY/0QzzmqodK8gTMvzQbC1j3In5E
q3g0Yxz7Z1be4OnpxIDG7HelVd0QfRJuueXdKOLaGIdWRAxAvT6s5IhyPwoq
7bT0fSbRbLrGulaqGutvBQ/kU/tgcs5oTmVqAhJLI0fL05rAd7Fst0RsP8wo
9oXm6yjQuP41lFUkG23cFaWbn/ZD6sW41VPKJGpS/NjvLS2GUVZUQEh2P3al
/3jHIkzB8Tkx2b1Fr2EhZnX7aHo/uo44MJwl+sPUVyNf2OtSkcP+UFC6oB83
qu0LJ0DB3ksMcbeOBELbpsO9IK8ffd+NteVFKcDVow9MDCKQpWx7zZA4N0pW
nXlYKUFBp+NdKY9oV1SdlOxhIbhXdNf9/QRP+yWluJLVG8FyntFvCc63OkVY
nDhnXlvwCJ3gtMCCn07qQQRvtLlxj4vgI5u2fcmNssfg2fbOQoLft3I1VyW4
nvbUqXA3HZyviehJIPjbrbojv3mnaLT3NwlDcL7lU84h+BeZpBkdgl9hiTZs
WHAVFxMPFVcTfPEE08P/b5/b7HFX+2/i9plnQ37ZRdBruF4fmJULycrecjZ1
Ovgsu8/aoB5vpBwOX++vwJeijWkBp4hzeNG2Mue33QgJuC2xn7UNW78uYVff
PYmsSz+X3bg7DCYvhyRuy3549PDIHpAeRCGzvMfzuAE8Ern+JfdeNzSbigMa
vUexkGfFk1euY9CJ6mK6zDqEiyEWGfUpzdD1WbW/VnUULLJrZCpXD6JI/pPO
rzXdeCZ4SJvLZRxdteKfnbqHUG13rWcLXwkEbfeWvdw3ju+7Ly6o9BnC7JWf
l23LatDrzi7nVj4O8Q/7JDtWE7pcS+OQ2cRbUM4cL6lLGUetjeuFaoZhxC5U
/eRZnoOgK5X2bu3jULTfa8jDM4wsbcUwZpdIPHJP2iXZNA5rNi6+gg3DqFgg
GnhJJgEqxxOW6XSPQ/RM5lWZLcP4cLbwmfRGH/wqUeLg7RqHwQcZXym+Ycgd
C86OzH6JaEX7SRni3L7yMOU1F3Fuj8TF3r6a7ADHtPynCwje6nrMu4PY54qV
rf30VjfMbtqo7ELwDKaHPr/P/7Nn9uquOvMA/NpumkYEV+a5+lCU4F3BAZP5
HpZwll3p60zw7dIeAToEZ+289qWlXx1SoZrSfgQfV6n++nufxUNl9tfndGHh
LvLk9/5HOYpo+gRv81jTUKR7DakIKLigXI8zJmFXP5bl4s384tkHRB9/d1jS
JDa5DcOyGnl79pbD39rmSzsXFTv5Kk9tuzgEpQLVCfEHzUioySn4cXMM1hSn
4y6/xpHs8lSxPL0TFmsy5WbTeoj6MsRcLkeB7cfyDrNTPVDeGJgp2ViHEa3t
ogfnKSi4ONjq8LMH3Lteb5mbzAOrSFYmfxEF16zs7/bm9cB5/cZ3+0NLoZLP
wvRm+xTeVKZWCe7uhdQD93Pz995gtuWkVQTnFHKvJonnbOolzpUPMjS9dGyc
iMz9vm8KVokcb8yFeyFs9lB3QVMwuitfmPjtnkJB+g/e4kO92Hd4T6/WwmhQ
7JbwGhH6S5L96uw+oh7tFlKtCd/nAUbmAdFIot71urxefZ7Qa0VmDm06Xr5Y
NM0guoKoX48L32rXEevvhlulhzy1Rrv9Y6F2Yp/Nl/aMvSL4r/VWl2o3O6HI
0+XLYWK943TIt0mCH9xpfsX+oz4kWvxytxL8y+5jxr/1XRCPvNlUohEq07lb
JAhuahnZMk5wpsqhYT8lFZxzZj69n+DMH8UrOYl66nrr7und4rfwyWPTqDrB
TfKOixgR659fbqqfaZJH7AH9QVeXGmxhc+xk2RGAIochY0keOmQfLbrYL9OA
j/ldq244REDOek5GqpyGuW7arzKeLtTHxNttbn4H525O1hvNU3iitoVXbfEI
Zp+oBwdalEP1iEV6vsIYvH5MN6N2FG2jdjU2RlUY1Uw301IbQbG43mflYQre
s+p7uoU2QOb29uELnzuIum+c882Cii4Pe64r1Y04caQuSVy2HopzpTTbciok
WzRUc1iaILwg5KPSsSoov/JOOYFanDsuu6sowRPlsjzG2RxE/bLiCtbK6gHz
nJRu5edkDHhIdT3FFPKX2tzgvDqKxqB2bpHjxWjq1T5vrDSKwp60tSbuE5jm
bwzM3leBrpFVb1QPDWLcIyIkTpKKN9oUg4nEWhjwsTwKr2wGv53UtQsPaZCZ
YjhrKlwPLqW0S8yXSuDx9nN4Pw9x3nAxtR/RdEHvMbcuhx10VJL6+hCprx1I
fX06f9mmmm19GN/s+nrhxjgcdAtavoPQiYqk7i4idbcRqbs1j1pwKMqNQWvd
g9MR9vkIjY+16HQcwTcnnqSldhQkmDfdyaWWoma6xPp0RC/mSZ1eT+p0CqnT
N0n82rNsKw1eAh3v6dOVsDhz0etwXj0mpp5Pm/DXo+ajb53GlC1EV7WkGs8S
fcY7y9etnIPg0z8gmnEqAmyZNjXcqpMQ9arc/555EpPOJuts9mbCuPDNwQXK
gwgpfv3460KiTzxdJnxSSRk272/ndnTRYSTQn3nqTBM4F3GzZf6wQ6awrNtC
BxrEja//bFAbBmVReeqcewSG39osEIoaBy1m/Vm6CwXreW/Uv61/h8StmyMN
WfoRw0RpvW2RjSdvDVYKaSmDxynQe+tv37ClVaVivq0YjBWoq9Oyh7/aXuG0
D1Tc3zttmOQ8Cq9HRQ4OVyJAS3J7sj9lFEcdWfna3kxBTPek1E37dKic3bQ0
rKoL/WRepP7f8iJ/kTyT5O4k/8H/nxzJF2SOZCqZI8lN5ktWkDye5KpkviQD
mS95ksyX1CH5ZpIfJrk0mTvJQOZONpC5k7IkX0XyHJL3CfvfOuSTA48x+SLB
gwqw2WhVwFNBh8H7iSdct4vhobAr+nStGrYevbkLhH7jP3MsZGBpO96vUvFM
umwJjjc7HCteUXGIoypnx4peqK0SNdbmd8KS2WbbH8Rz5CgwUubzcQy+X0/6
dfa/xKLKHxeHD4/gS+Pkews3KoQnPwokmifjeu1qg/Bd7ZC7VyCYJUjDuk8a
z+/wvIX90W7W7sxmiBrYZ6a1Z2LzUdqz0F5pJKfUsm1ppcPTJD0jx6AcH/Jc
0lYa3UTWePjoCR06vEdfLLUoboFpq6Hew+kHoHjdGXVYR4MkR29Ww+4xLLMP
vPBk1hcHhZPq+JeP4rj6GseLD4m/49w7NWHzeCg7dixh9G6H3779c6tDaHB6
kceTwJ8K5rBDS92mG1BqNfYpZCINT9LU43qCTsM6f6KJNkCHavK74zkxyei0
vLy67ps4Lv76LmY1RUfew6HeNm0qNGrF01l+RWM0yF0vkK0DNR+GDR4Rz811
b+3qDQopiNlZ7hP/s/aPffhF8nlPJ593Y/J5/04+v5Xk80sjn99g8nO2ePJz
tlzyc7ZtLtY3Onr7wXFRzUPxSAjR53Lc891FQVKiVb2b3ARCsMX91ap3qNAv
O9BydQjuXEI7f5pT8VHt6dvWh4UYdFhne5O3DceUlaXNBqpxKkqXbZuAMcz3
1xdG7KIjdocSs0/tAHrblZMTUwPQo1kZxes9iadBPc56cpP4fiRF/PHit9jX
f8niwqJBeDloL9/1kYrH4g7izIb50FXezF68uAU1vCO7W8trcNrRouM8jyGO
C68/v3wzHXOf0mj3/IlzRvF+J/9PPzT7H10etHgSDmsTUm9wE/3ru51Fn3ST
ifrER5lu7wfLa8G5RdaToLIsV8y92k3U41vCUyytUD5hIcFtScFcvpxJ48UG
OJVzMER0dMHFo1NQNpaKa5v8QjI+NmKVxJHDEs41OO70WkXyNA1Nef1145pN
0JeQfvjRKQehtnJCu/RpyIDeuVb7Jlz6asqhtiIBe2cfcPgZ07BKONezhdCJ
yz/8qB23fImR+h8Z7YQerHeW1HYi9F3mlqt6j0aeoKZ39011Qq+JJY8Ufib4
WONPmTgZS3xjt1nmTHDV0x9dfhA8RJZ59+NcXbzO7M3+rQdznCYiBQh9dzdx
wPPS3j9/L2D+Y+kexwSi7u8rfbu2uQb8qgxev3a2Q/hM0eQjeRpMEnL8j3PV
4wnd7Cnvlgq8DM5qXJwwgUM7X2/oESjGR7Ofn7L1BnFq04pt5pZUWLWJ6J2c
r8Blza3jhcL/O2dwhMwZ7P5bzuBVMmfwG5kzWDVzfcH9dgpCgh8t01iVhw3R
qRPOz3qx9fZONl4DGmJ7+MW2KhZDNMCOn4Nej1YTNpHW+lHk/HJ6sX5DLK5Y
i7XQbo4i02x7iKDnFGIMigKE5bMgvEHueMLCbvSkuZk2ZI+BorS3yzc2Cmx2
F/sqdUegQZ6fy8jz8xh5fq5YoXSDl5cKV76bnWvZM5C0/FjEWHXHX3m+S8jz
s5g8Py+WH9T5yj2Bz+JxP3lvheLkiJJLXdUQzizcX3yIQoX+m81+nwdT8Dx5
4iDP4VawevINBEVOwIxvRNWp8CVc94R7rt48hBVv5xWTDtBwvjZAeFl9Eoy0
wiS985txkJcpRpZ9Escpfbrjyv7Qihj4qe80iL1RhmqJxP3GIn8i8OuiRMyo
o7DUvAmral2+VRxqwaPPI3dOCQ7gkumrJ30t49hy8NPG+P5uWAT9r+bONJrq
LmzjPBEZQoOhyVSGFCmViDuayVwZCiUcQxkzJoUyk5lSkhQajCGEYybzPMs8
O8cQTap3W8+ud63T6sOz1vvh/fpbZ1nH3/5v97X3fV/X/fLNCmOg2PvCoNCz
H96b7J3N2YN06PqvE0LrJqFw8sS4OW8TCD6r12lFOveJxZLlo9FJeNNo3myg
XgyquH9+CPfPp+H+eW96u1jZoX64G3vn2DzaR2Js7HPv6QfD+HXHJSLiJDFF
5xSkl4sOe+atWeUGPe3yhg2I77FpSBxFnKvtymaqRCsY332FZQrxwzcHo0cQ
j9vCwTSjfAnCKfIHL+P8wV+5hMOY62G+gHMJ1XEu4TLOJaTkv/IKX+G8QjGc
V8iO8wop+TqKHMM23OfPiPv8lSg4HUW+YSjON6zH+YaU/Ffu4Sqce6iLcw+X
cO4hJZ/HnBbnId7CeYgfcR4iJZ/F/DLOSezGOYnOOCeRkjtgDp/5xiSURkHS
+mRsingQvHnbQ2M+NwoyTNJBH+bHoUX3UN9uiQiYOXmrZWz1MCgmmxzXRzqR
FPe4OxbpxMD7qg1RN9R/5/pV4Vy/f8r+zfWj5L/y/qIDJs8PD3TD7JaXIrr0
TlC7yvCsd+00ODd3t93ZMgSQe81ZZpUXsEv3xY0lTUDFgOv6oaEmqC+M3zc+
awaza8yYlkNIMD+t+PLZuw7YMnbRlVB/HRZ6RzWkPWb+8zkYj/6ewkHJaUge
udcYv7MPavZuOht3RP13H3gO7gM3x33gBcoh/CPZZEhftrpXNkeEilchjdox
Wr/zy5go8svuR2VQHXMjw/kOOgmHa+WoPrRWOhytBqVhRYcKo8igUqsltV6+
FCrHa9R79NRAbbFRQvMFGTp+dugK2heD7/KNh+Xf///lTH3dzLaH8eA0rDFx
kPAV7wNxMQXVyAPK//nnUOc5vPByQnWcePLtz3ebweziybnUc6pwTl05ZeX5
Lzq3MMai53+Fah135mtVML3GYREuToZVs35BlgE1MJL2yFvF+r/3I/1Xvp5J
YXIZ/d39ihnm+MhEYB6tfWNBUoWKs+KKnsVIH/Qw1JsrFcKGM3y98+ZqkG0l
tG7xPRleRbFfNtuYD53pTdpqb9RA5UgITUkjGfpTmhd6hfKAU2Tn4uNWNcgc
I3RuIvRDjn7xS1u9SUikmw2VHaoDi4/Su5IMMiDkdMje1pWcm4jD+qKjZND6
8Xhm2fQtDAlz6MjyBMLZM91BZZ1k0DmSl1+hVQGiSiILa/uSQbUtyOgqgQyy
uwvomZumQErK08KzrhduR6R9SuQtA+/wcftzW6Yh/wZJUYa3D8w5UnoMpt7A
Ks3Fmlui0xD58map9/4+8ClhjQz1iYc9aTHfotbmQsOVS05SHh5wSCvEZ0Mr
GU7bKJ+XeVADd3inGlXGn8HExKSdkDAZOPYPU2la5gCsF3i209MJhH2qrZXb
ySBuR1iXLJUNX9U7Cp57WsF3loOO/H1k+KB34cH7VyRwqb+aesG0AW4cIV3r
yCyEbHZ31cFOEoj9bNsk6tsA8b2uSb5HU4D6lFto2zAJCJds6YVCGuCAQkGN
bVIMfMhgfuw4tsK3Vm4IQ3XGe+KACX0guB9bbbdpnASmr1pSfBCvDSLsumhy
E/LM78bJI17+8It+NOIF80LDW6uvgtha9/0JAxkgp3R584+3huj/ZY+W9BgZ
aHZlT50jkABYlqMYCNXAecb7Ywl9LYhUKtpObke633xu/4M7NVDh7dBrnPQK
Qmy5qPlF0e/HvCxoHVIDJ8KPN1BvegjbVQLW6Owhw7WWd/qV4TVQ3zz4c+yu
HxxqT989iLg0I9uTkIgauLIlPJ1zwRlM2j3G/kHrP2lCxb4IcWvfh1MkAzOQ
xb6ywxS+stIfN36TtCcDs7fIdOeFcqjwEgqSVHwJha2gK+FUDj2b3HSg9Rok
XrWRT7tNhi/9//qs0mKf1Uzss+rG56EQF0CGunU3ezVQ3ShGfjGyPvoluBqk
PFoKJ8Ox0OkpMSiF9hlexrMc0bD404vry+sSoP3O6cDjYQgNEeINITFkSMge
e/r5Yg/IbOhQbBD1Ax3zU9zVydPwbflfP9Jh7Ed6APuRXg8+p3v+MRm4nXMW
Hc8Xg3JSB51b/kug6zM9F5dAhsrQuFxxq2JgNGz7ESgdDSy9F6njksgwv+tS
mjnaP7lbI/kOJPvCaVvizjUrvqMKsRVF74mw7ZDw5pCyl2B02+X2oUwy+D/8
mr9/kgiPLOye7z8RDQVr1w/uRe97EnNsfwva52NGy/RO5fjCvEyMzCvEq3lc
iQkLREjikWU3FnEGEexX+QL7Vcpjv8rEY64MXejzjkPXE7+SCoBMZaL2A33/
ww1Gu4cKyfDyDO1XeulCEOgwiV+Wi4YHRv9cbi4iA21Hzbq7aD+pzWpxncj0
BVohjpsKaJ9ZO8kZv6RWCAW9PKPHhZzBTUJchYC4P3XPqSX1QjgnMHfH76Ep
ZIdJpq4WIMNsMG++ZF0WpBgJhNKtrv7tA3kL+0C+xj6QT2JE7vkR0f4Ry6LE
HvcOht4ue656/RLaqGn9jCvJwCh3X2Ru+R1UPJ8tXbc/GjKaxdsU0f52KUdr
4+b1+aBFs+buzhe+cHsxXouIeIWz1rIlZz7kNWZcWd7iDDBdq9yDOI+onGUm
Vz54u5vd8gk2hUCyApc9Wue8bdxX6ze+gXWFWWqE+vewsNSzIyQR7SvUEUvU
/+SAUCsr08nXeaCO/RgzsR9jBfZjbBi+46RUj55nsJ7tffo8sHhiupWfPxom
tZhIAmi/HVRmU2/ny4NxQ8bgZ/d9YWdrSnAU4uonpml2CefBtW7LfmZmZ8hh
9snLQFyHv441e2cemNwecv7p9ncf1KALfGxupxugVf+UVu/mbljtS3D82DgF
n+eKS74IdsLnZTbtzrRhIFfMlRdODgOz+pu99kX9UH0uq/zCEfS5k2tZNWaj
YIcJg50gsR8S3hSmnj06BXYOJnSDZt6wT/NpgQHiaQNlJzMRl1yclr8+7gC6
d7/YGIx/gMky+QQaui7gynO2VUb6p97b9UVxzzio3Uw/Fcc/DLpzQv/YtQQB
y+tFu72ofstQv2Vtgeo3prVV+32cb8O2RNFLpfum4cYa7toQaVT/5JxMdhT0
+u0bFop9wwqxb9iw/TYDTaRPj15g1liZr4kQsw1SdXGFm6WGZZlRg7A/TbyT
fDgfMqsNF1IrJyDAiXq7Q80UvNzRs0n6Vg3QMGs/NFPrgYccHbf8wrugPyNt
LIb7KSzoMr++t3EGCpmJUrKBI/A2jvCUyPwOCqppPZ5fGQPfTuYBbcI0CDON
mTprVEJRd6pId2cXPMbnIcn4PCQHn4d00BxlpS5GevbdqY8ZX4vhw1ENfzOf
VpDNJvLGXSaBFP9brXqtIuARSfOjRvroPvZ/cMD+D0XY/+EM9nm4jH0edmOf
hx8HwgJjjk8B3VDj5hzep7ApfZQhKr0fDmGfh4PY5+Eg9nlosFAqMdKfhku5
tMwc3XHAqmNY/fZ2LzReOF+02NEP35VONj3dMgWE5zYliRvSQZho+GnR+AN4
EkK++4reguMsNqNtA1OQ3stsu1L/PJJa0tRE9Y/Mt5rcAGNtcD0k9HkBvV9y
3uw3TFG9QfUgcMnIQguyb23cVIzWc8GD+sZaVG/M2izwfnukBc2zd9KPHkkG
6tRiUjPjWxhp8lom1JJhO49D9tGj72DRNCR0G2M56C6z8Jaqk+FMBJuYXGsF
MP4jwETY1wxUZga052Zn4Jre9feve5uAOU5nXi6jD3Ivs3wQs5mEgF3j9YW7
uuCahsiXDsIIbHCv4anuGfrjPpSI70OFDFS8ZNE612M6K+WE1jnxybfGkNA7
IMnOdkcfcf8F4Yh8xIsHH9zZSW8P808+RpnqvIfwtzefZ9iWQqNV1LVJVAeY
svLpOV5ug1L1zyn5fY2w/xBV3fKjaRiNb/XtaEbvUVuScrdcN4Q63Zt3ujf2
x72bCb53a5LpOHsQ8ccMIxed0PuSeyCgxVPeFTLYskO5+D7As4P0VbknGiAj
VoPNsXAS2inudxg2/Xu/o+utqcv8jARdnILL7IYNYGu6KHysg/iHvriN9cXf
9plfOWhyFDloejgHLeIvOWjWOAeNE+egKeC5fis81x+E5/p5cD7aF5yPJk6R
j/YZ56OdwPlov3LQvuMcNC6KHDRxnIM2Q5GDloVz0EYpctACcA6aPUUOWhjO
QVPAOWi/5oXp8bzwBJ4X/q/1vMn81vrDgz1gnVm8Q2UoEiw75hoq/KbhbIij
7HTAKFCfPLSWRikNjE9GvmyKGgWNtH2vGaRJsEMvvnJiuAQ8j+/NK3Bugmpx
palL7Oj76KT5KUaVgcPbG9cjNcpAb933zGEDpO8Umz4r7i+HT9r2vHF5WTDq
pBh5ZiXX/CPhyXmrcsgUvCAQJxQAztUH6joQb5OXq3S2Lof+PimZzKu3IKfC
qYga6UeOgSfbGhEPfsARoPzeClZRfxRiRlwoZV3tHOINikHPOhsuQ1gS/Za9
iL+xUmGmtyyHmzXP1Fqp/j7PaLj2ka+gHwned4FgSXoRqmN0PhRNNID8LlHN
n3JkWChIE5CxKoGjcxuK7NRL4A3pbuce9D25Ij1TpRlKQe/GdebowDdgnrnA
YY707PfpqbqLx0vhqGsO101/F9hLbP/hj7hWi2N1AuIXJ+qNyu0s4NmzqqYI
xG3YJllzERdmFf0Qzf/3OQiFkN0bRN+R4HBw+7tzfoVQp+k38WKhHhLZOWdp
r6Dnk9i1YdeTImB0OO8r97QIkjY3KkhHkMGs6pQI7+Fi6JNQczIoSIfql/wS
kkhf98kVGp92RPXk1xuvCtvNgSY92OsI4tbUn7JX5lyeljqbPXL6uy9lvJbY
N4tZEnj3deqzOb1D6/3z6VzzWpgKO1jr40IG3z3cLVUcRDgq1u3fJEEEcK45
LYrq1U17hN3EsoggsEvWze1AGrj0EE73oPqwlEb8adE8ERY+uet8K/n7eW9W
IrNXdBAZIkQjWJz88uHnfbik8TEf2BNObnR8Q4bnddN8+5oKwHieuOt+fcp/
fi+SZ+ZbWFFdOp3bM0EOeQffN2SI1Aa8/uvnmV6LfS4szIDrHB2m7VkPQcoy
VuTCMBlaPNJ4biXnwYPas9/X14TBx+RSx2N1ZAg8nPj+hXIlbGCsWZTySoOY
sCtvtDXROsgMGb03Q4QR3+qRkNh7MDFutocFPZctqWvjGagbQPHIeEen3Wug
PrLZK3uGBEeq+Gbl9UqgcPVAr2GtN9xNojrM9oQM3o57ww3JI9B2PuJgwM8q
cH6lylCrP/pHPVOP6xmC0Adv7XNlcGddYIpyvwdw2quZ0iGdw+f8iV8qYwBc
tnyyOHYjF+ReCN0bt50E0xOyh1rox8GbqroovLYcTtkCV5fm8B/ztmF43ta0
8fRU/CAJBFY5tXgFNcClyLnUvqinoCV9ZPeDUVRHTaooXQttAOfY65G3XcOh
haXIrxbpVg6nnXRqSIfOFKxxT1b0AufPzeNCSJ/GBESbBCPuG0Vz1vgfJ9gg
4+dyDPHnn+Q+rejWgKQfJWNPzeCi4p67q+bKwa6w+2HWvtsQ3GLqyH4D6R9+
Ka6K5x3AfMaEULwUCwLrfFIZPWZA22vf7enUIXDaGy65SjIbovYYVrqtnYCP
14u2pruRgFNmbXOgXzU4s9mOWW6u/mMutRbPpc7spfnSuwutn6Ls2gtBNbC+
QeOBbVcs1CnLp9eIkaH5anDSh7AaWH3IffcJ6xBwODIjlbKif+cfOcojPTtc
vt19ZMEDRr5XGcwjbq4X7x2PuMsmsaqKK3ZQZUsltRrVP5Myy/o5iF/4aure
X2QMx7D+naHQv7/mK5/g+UpzPF9JOW/4Ds8b5lbPSXigfaOnNsYo6kgp+Jzi
VWDZFPXH/N0knr9joEkXC0I65RDTqYSNtsXAkqby8s1oOGy/XilJRDr0K81B
1XKkQ5/xoT8Rq/cf82X38HyZ8kiDgnkWGa7zqgKRRAQbj4HDYSxh4KEmHWyM
3oOZbhP+YLQ/2Diacs1SewKLvkZ1OuKC7qGp+UiHrqqLb9ja4/Dbx0wb17H1
uI79laeQjvWpCNanv+azjPF81hU8n3X8qrPbMaRDE9Qta3pOFsJrdo5U0dsh
MLekasGO9OaC5KODnSqFkJr8mLnl2B3gJmXUnEM8gjUnRgPp0NBVzmevLtjB
Wa+yVBPEnxOcOWk0CuFW7Y4+jQACHMZ19RFcV0viutr+hr8wk8skzFn83BFQ
Fgvb9liOfZoZAJnvuWdmD5NBSfhODqtLNqrzWQckhP8318AN69lIrGcp56H6
8TxUmeuV5fEqMgj3xv5cZs6H0M76q/7CwbB9WHH+Pqqfffh2Rhmx58P047ai
7ZXukOa0wFmPOK+jvTUd0q2uS1z0NurXQeIHz4c+xMMu5jBUrMxJZVPrFFQZ
AReu/7kpfN7ov8xYbRibhNJ9RpGD3o8gPmFKOExpAOnyooqfWmSI53QuobPJ
BE43pQ5m/QqgpdIr4k5G+6W23Ky3dA7UrxZ47NKU81v/ZmH9m471L+W80lY8
r1R6wjBmxf/knGWbrva2PDjV2jvgTRUEprzcoy5IFwzYuRCkBPNgo0zOl6+u
blAdOFaXhHj7+xRzOqR/1yvMXn0waQPUxv7fshB3uGC21Iv4gR1Bcs+O/T1H
b5iij0sY93FxJlziDOefhjqfsh4X4T7osgo9/cMW/R88+mnZVGwaDtyfOB9y
oA968uu2XWiJg9lLYmsucZOgxfy8/MXTzWBslBITZ1PyRz/tR9xPuzX7h6gP
4h9neRm5/JuB7ZWtxL5FfbhA0Te+G/eNU84rxeJ5pQVPecuSrn7I3N5XIMg9
BVlrRXOMk1L/6A8Pxv3h6+3uPzmXOwY8Xj4CZw4OQbnWd6l6weY/+rdVcP82
gUaL8S3i2RMnZ3YjTm1XniN7/jII67VU+NdPgMemnOOBcd3w7oXxa5G2ThDZ
t15pr+0UjM3sCaE37YUnYgxN2fa1f8wN5eC5Icq+6wDcdx2j0XzgIOJxJwck
lhD3rt3wfbWNCTRUHnNXR7xkkDXyFeJdCslxY3w6EEI4Qc13ZgZatJnGy5Oa
wP8Qu1JxbuNvH4+32MfDFft49JdYTQpak8BQcg1ngGczjI+f4wGH55AlJ3vJ
wp4E7bRBak6+zRBdo0STwxEFFSNs3KUpVSAWUz9wgMkGxq06157QJgM1znti
pch7Gi687NNt+R5kUvzeDNJZglhwcpmyChn4X9HpLCC9/Dh8eFasIgjoVw+e
6ur/35yjz/hcURyfK34N85CPG2iCFw8jXZY0E0DN876dvS8JDmK/O+G/+N1d
wX53JAq/Ox/sd7cf+93Z+Ak+Fk6ohlIZs6VpfwI8zNmi7y6L3nNtQgltej/I
B9ol7GrwASsljo4JxSmYmKkk5AnUgBZRvKGfaIj2r4Jiw4PkP/oHvuD+gQOR
OkUv5KaBIW2hJVK0FloW2tUD5LqA3jMl7x/BGehTsTDQtquC++kST59ta4dD
D67vVy8dAz7z4bDE+ldw0+p4Gq3OCFzBfddE3HfdhfuuVfC98DC+F87H98K/
+m87cf9tI+6/JdlpOo43j4PJZs9a1eUhyJLyLtbtzPrj/pQD35/SntjIIjY1
Dm4mvY3SLMOwLS/V+KniA2C6qeK3xnoA1Ni2UMlpecDnusvc5c2T/2f3OIE0
abdWzk++fDsvoxtQA/vy6cKeXNUEWVcazY9oP7f/sVi2cn4yVfL2rrbReYha
O/Fq5fykR5NBtF0oD0bojJhC086Ce8LpWmYnEuz2nyub9W6G2W2sYafKVOF/
AFbecwI=
    "]],
  Axes->True,
  AxesLabel->{None, None, None},
  AxesOrigin->{Automatic, Automatic, Automatic},
  BoxRatios->{1, 1, 0.4},
  DisplayFunction->Identity,
  FaceGrids->None,
  FaceGridsStyle->Automatic,
  ImageSize->{380.126644166018, 200.2309349465626},
  Method->{"DefaultBoundaryStyle" -> Directive[
      GrayLevel[0.3]], "RotationControl" -> "Globe"},
  PlotRange->{{0, 10}, {0, 10}, {-972.8817368757589, 0.}},
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02], 
    Scaled[0.02]},
  Ticks->{Automatic, Automatic, Automatic},
  ViewPoint->{1.291364773877904, -2.817464098675021, 1.358040159002898},
  ViewVertical->{0., 0., 1.}]], "Output",
 CellChangeTimes->{{3.710720087833925*^9, 3.710720123168987*^9}, {
   3.7107201695946684`*^9, 3.7107201903437047`*^9}, 3.7107202264129686`*^9, 
   3.710726470122726*^9, 3.7107278082349033`*^9, 3.7111327432239275`*^9, 
   3.7111329344128623`*^9, 
   3.711147133296543*^9},ExpressionUUID->"b1e1f6be-4a53-44f5-a505-\
77517b6d9a20"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Clear", "[", "y", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmp1", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Kappa]", ",", 
        FractionBox[
         RowBox[{"Re", "[", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["\[ImaginaryI]", 
               RowBox[{"2", 
                SuperscriptBox["\[Pi]", "2"], "\[Lambda]"}]]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Exp", "[", 
                RowBox[{"m", " ", "x"}], "]"}], 
               RowBox[{"ArcTan", "[", 
                SqrtBox[
                 FractionBox[
                  RowBox[{"\[Alpha]", "-", 
                   RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}]}]}], 
                  RowBox[{"\[Beta]", "+", 
                   RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}]}]}]]], "]"}]}], ")"}]}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"-", 
               RowBox[{"Log", "[", "a", "]"}]}], ",", 
              RowBox[{"Log", "[", "a", "]"}]}], "}"}]}], "]"}], "]"}], 
         RowBox[{"Re", "[", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["\[ImaginaryI]", 
               RowBox[{"2", 
                SuperscriptBox["\[Pi]", "2"], "\[Lambda]"}]]}], 
             RowBox[{"(", 
              FractionBox[
               RowBox[{
                SuperscriptBox["y", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", "m"}]], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  SuperscriptBox["y", "2"]}], ")"}]}], 
               RowBox[{"2", " ", "m", " ", 
                RowBox[{"(", 
                 RowBox[{"1", "+", 
                  SuperscriptBox["y", "2"], "+", 
                  RowBox[{"y", " ", 
                   RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}]}], ")"}]}]}], 
                 ")"}], " ", 
                SqrtBox[
                 RowBox[{"-", 
                  FractionBox[
                   RowBox[{"1", "-", 
                    RowBox[{"2", " ", "y"}], "+", 
                    SuperscriptBox["y", "2"], "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y", " ", "\[Kappa]"}]}], 
                   RowBox[{"1", "+", 
                    RowBox[{"2", " ", "y"}], "+", 
                    SuperscriptBox["y", "2"], "-", 
                    RowBox[{
                    "\[ImaginaryI]", " ", "y", " ", "\[Kappa]"}]}]]}]]}]], 
              ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"y", ",", 
              RowBox[{"1", "/", "a"}], ",", "a"}], "}"}]}], "]"}], "]"}]]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Kappa]", ",", "0.2", ",", "10", ",", "0.2"}], "}"}]}], 
     "]"}], "//", "Quiet"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tmp2", "=", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Kappa]", ",", 
         FractionBox[
          RowBox[{"Im", "[", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox["\[ImaginaryI]", 
                RowBox[{"2", 
                 SuperscriptBox["\[Pi]", "2"], "\[Lambda]"}]]}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Exp", "[", 
                 RowBox[{"m", " ", "x"}], "]"}], 
                RowBox[{"ArcTan", "[", 
                 SqrtBox[
                  FractionBox[
                   RowBox[{"\[Alpha]", "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}]}]}], 
                   RowBox[{"\[Beta]", "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}]}]}]]], "]"}]}], ")"}]}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"-", 
                RowBox[{"Log", "[", "a", "]"}]}], ",", 
               RowBox[{"Log", "[", "a", "]"}]}], "}"}]}], "]"}], "]"}], 
          RowBox[{"Im", "[", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox["\[ImaginaryI]", 
                RowBox[{"2", 
                 SuperscriptBox["\[Pi]", "2"], "\[Lambda]"}]]}], 
              RowBox[{"(", 
               FractionBox[
                RowBox[{
                 SuperscriptBox["y", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "m"}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   SuperscriptBox["y", "2"]}], ")"}]}], 
                RowBox[{"2", " ", "m", " ", 
                 RowBox[{"(", 
                  RowBox[{"1", "+", 
                   SuperscriptBox["y", "2"], "+", 
                   RowBox[{"y", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}]}], ")"}]}]}], 
                  ")"}], " ", 
                 SqrtBox[
                  RowBox[{"-", 
                   FractionBox[
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "y"}], "+", 
                    SuperscriptBox["y", "2"], "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y", " ", "\[Kappa]"}]}], 
                    RowBox[{"1", "+", 
                    RowBox[{"2", " ", "y"}], "+", 
                    SuperscriptBox["y", "2"], "-", 
                    RowBox[{
                    "\[ImaginaryI]", " ", "y", " ", "\[Kappa]"}]}]]}]]}]], 
               ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", 
               RowBox[{"1", "/", "a"}], ",", "a"}], "}"}]}], "]"}], "]"}]]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Kappa]", ",", "0.2", ",", "10", ",", "0.2"}], "}"}]}], 
      "]"}], "//", "Quiet"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tmp1", ",", "tmp2"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"y", ",", "\[Kappa]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7111469880892296`*^9, 3.71114700153126*^9}, {
  3.711147115044506*^9, 
  3.7111471191245117`*^9}},ExpressionUUID->"5d596d22-19f7-4497-8cfe-\
3fcf312d46a7"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQPWsmCJy0d3V1YWdg+GAP4d+0fzJxJSOIb2IMAo/t
U1IO/v///z1U/qW9SZEoE0ieAQw+2Pd4lX4CyYOVG3+2Z9ZvAqtPTwOBb/Zc
PWIsCPN/2p8LMGQD8c+eAYE/9qFeyYwI8xgcjPzL/yHsY3RYfyqeBeEeZoeD
7Jv/guTPgfWzOHw+N1G+lPUD1D42h+v/V3yTk/hgzwg2jsPBK933cYY8zH5O
h7db+0rNVWDmcTu8/b3jcrfGB6h5PA4bv3nNP6wDM4/P4Xpj4jIRI5j7BBxu
CKcsLbSEuV/AYfZHcQcrV5j5gg5PfJd0cUbD9As5lAa53zGdALNP2OFysZ78
lSsfoe4TceDnzZJdeuAt1DwRh7+GfJFGFjD/izoo7r6aLt0HC08xh7OxvyX3
b34PNU/cocyRWWPJifdQ8yQc5Bas3r736nuoeRIOm+IC7m26BzNP0qFs1Q0d
wacw86QcjqiErT73EmaetEPkRfWE8rcw82Qctm/+oRfwAWaejENQ8/LwaZ9g
5sk6WCsuqc/7AjNPziEr4/GEb19h5sk7rP4TrWf5/T00/BQcNhQLzHT/8d4e
rDxNwWHzM2YenZ8w8xUcnnSzsbz/CUtPig4Lt8xfMf3Xe3uwdTMVHRqt4pnU
f8PMU3IQ3v/20JLfMPOUHLxXzT0u9AdmnpID36tc8+I/MPOUHUIkN7Mf/wNz
v7JD7uaQtYJ/YeapOGicZ2EKAfIBieNgmQ==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQPWsmCJy0l5OcVsjA8MEewr9pL7k87dr//+/tTYxB
4LH9nrX73oH4EPmX9stmv2IEqWcAgw/2kdsT/oPkwcqNP9v39L7/C+Knp4HA
N3sOSZb/CP0/7TfbGTOD9J09AwJ/7I+qNiGZx+Cw/spBFoR7GB2ybt0B2wNx
D7PDLU8vsPpzYP0sDu7O2p5NbB+g9rE5nP+vJyct8cGeEWwch0MNp4uzsRTM
PE4HtvfN63gkYeZxO1gKGpzhF4eZx+PwxKX1y2wRmHl8DifLn3d5CsHcJ+Cg
VsjyRFoA5n4Bh8b73l/1+WDmCzrMbBVMqOGB6RdyqLa0+P2BC2afsMPLydd/
reKEuU/EIWkq25cWDph5Ig65Al4T29hh5ok6dP82cVgN95+Yw2x7xuVvWGHm
iTsoHs284coKM0/CYVUer+E2Fph5Eg67r29iNWGBmSfp8PpUxdGjzDDzpByM
bbKvpzDDzJN2uLxtWzYPM8w8GYdkhZPiB5lg5sk4PGr4EFDHBDNP1uHJM2ZL
ZyaYeXIOGpY5ojxMMPPkHaIKrvDcZYSFn4KD11I1rc1APlh5moJD4KctF3sZ
YeYrOFh1HI/OAfIh6UnR4eEcZwVfIB9s3UxFB7U5v4WN4eYpOQRXKzpIwc1T
cjBw6Ulghpun5JDl94rjPQPMPGWHNulPtXfh6UvZYf2mmtVn4OlPxcH114ms
vUA+ACY6Scw=
      "]]}, {}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9205315391846548},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {0.9297662329194355, 1.1144601076150493`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.711147008655326*^9, 
  3.7111471399625807`*^9},ExpressionUUID->"86bb7e35-b3ba-4077-b4e2-\
f2cedfda67a6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"y", "=", 
   RowBox[{
    RowBox[{
     FractionBox["1", "a"], 
     RowBox[{"(", 
      RowBox[{"1", "-", "t"}], ")"}]}], "+", 
    RowBox[{"a", " ", "t"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmp3", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Kappa]", ",", 
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["\[ImaginaryI]", 
               RowBox[{"2", 
                SuperscriptBox["\[Pi]", "2"], "\[Lambda]"}]]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Exp", "[", 
                RowBox[{"m", " ", "x"}], "]"}], 
               RowBox[{"ArcTan", "[", 
                SqrtBox[
                 FractionBox[
                  RowBox[{"\[Alpha]", "-", 
                   RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}]}]}], 
                  RowBox[{"\[Beta]", "+", 
                   RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}]}]}]]], "]"}]}], ")"}]}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"-", 
               RowBox[{"Log", "[", "a", "]"}]}], ",", 
              RowBox[{"Log", "[", "a", "]"}]}], "}"}]}], "]"}], "]"}], "/", 
         RowBox[{"Re", "[", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["\[ImaginaryI]", 
               RowBox[{"2", 
                SuperscriptBox["\[Pi]", "2"], "\[Lambda]"}]]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{
                 SuperscriptBox["y", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", "m"}]], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   SuperscriptBox["y", "2"]}], ")"}]}], ")"}], "/", 
               RowBox[{"(", 
                RowBox[{
                 RowBox[{"-", "2"}], " ", "m", " ", 
                 RowBox[{"Sign", "[", 
                  RowBox[{"Re", "[", 
                   RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["y", "2"], "+", 
                    RowBox[{"y", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}]}], ")"}]}]}], 
                    ")"}], "]"}], "]"}], 
                 RowBox[{"Sign", "[", 
                  RowBox[{"Im", "[", 
                   RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["y", "2"], "+", 
                    RowBox[{"y", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}]}], ")"}]}]}], 
                    ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "y"}], "+", 
                    SuperscriptBox["y", "2"], "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y", " ", "\[Kappa]"}]}], 
                    ")"}]}], "]"}], "]"}], 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["y", "2"], "+", 
                    RowBox[{"y", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}]}], ")"}]}]}], 
                    ")"}]}], " ", 
                   RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "y"}], "+", 
                    SuperscriptBox["y", "2"], "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y", " ", "\[Kappa]"}]}], 
                    ")"}]}]]}], ")"}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"y", ",", 
              RowBox[{"1", "/", "a"}], ",", "a"}], "}"}]}], "]"}], "]"}]}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Kappa]", ",", "0.2", ",", "10", ",", "0.2"}], "}"}]}], 
     "]"}], "//", "Quiet"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tmp4", "=", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Kappa]", ",", 
         RowBox[{
          RowBox[{"Im", "[", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox["\[ImaginaryI]", 
                RowBox[{"2", 
                 SuperscriptBox["\[Pi]", "2"], "\[Lambda]"}]]}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Exp", "[", 
                 RowBox[{"m", " ", "x"}], "]"}], 
                RowBox[{"ArcTan", "[", 
                 SqrtBox[
                  FractionBox[
                   RowBox[{"\[Alpha]", "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}]}]}], 
                   RowBox[{"\[Beta]", "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}]}]}]]], "]"}]}], ")"}]}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"-", 
                RowBox[{"Log", "[", "a", "]"}]}], ",", 
               RowBox[{"Log", "[", "a", "]"}]}], "}"}]}], "]"}], "]"}], "/", 
          RowBox[{"Im", "[", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox["\[ImaginaryI]", 
                RowBox[{"2", 
                 SuperscriptBox["\[Pi]", "2"], "\[Lambda]"}]]}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["y", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "m"}]], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["y", "2"]}], ")"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], " ", "m", " ", 
                  RowBox[{"Sign", "[", 
                   RowBox[{"Re", "[", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["y", "2"], "+", 
                    RowBox[{"y", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}]}], ")"}]}]}], 
                    ")"}], "]"}], "]"}], 
                  RowBox[{"Sign", "[", 
                   RowBox[{"Im", "[", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["y", "2"], "+", 
                    RowBox[{"y", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}]}], ")"}]}]}], 
                    ")"}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "y"}], "+", 
                    SuperscriptBox["y", "2"], "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y", " ", "\[Kappa]"}]}], 
                    ")"}]}], "]"}], "]"}], 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["y", "2"], "+", 
                    RowBox[{"y", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}]}], ")"}]}]}], 
                    ")"}]}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "y"}], "+", 
                    SuperscriptBox["y", "2"], "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y", " ", "\[Kappa]"}]}], 
                    ")"}]}]]}], ")"}]}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"y", ",", 
               RowBox[{"1", "/", "a"}], ",", "a"}], "}"}]}], "]"}], "]"}]}]}],
         "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Kappa]", ",", "0.2", ",", "10", ",", "0.2"}], "}"}]}], 
      "]"}], "//", "Quiet"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tmp3", ",", "tmp4"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"y", ",", "\[Kappa]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7107226952124667`*^9, 3.710722698637477*^9}, {
   3.710726240149721*^9, 3.7107262808355927`*^9}, {3.7107263438335037`*^9, 
   3.7107263934143915`*^9}, {3.710726782155875*^9, 3.710726782889076*^9}, {
   3.7107268529341993`*^9, 3.7107268719994373`*^9}, {3.7107269197355213`*^9, 
   3.710726958666793*^9}, {3.7107270213633027`*^9, 3.7107270215973034`*^9}, {
   3.710727071703034*^9, 3.710727154190349*^9}, 3.7107271913340144`*^9, {
   3.710727283038376*^9, 3.710727294317196*^9}, {3.710727334801267*^9, 
   3.7107273354720683`*^9}, {3.7107274060329924`*^9, 3.710727409308998*^9}, {
   3.7107274527082744`*^9, 3.7107274573570824`*^9}, {3.7107275315226126`*^9, 
   3.7107275317566133`*^9}, {3.7107276113177533`*^9, 3.710727674950265*^9}, {
   3.7107277102219267`*^9, 3.710727782212057*^9}, {3.710727841323561*^9, 
   3.710727841838362*^9}, {3.710728013959554*^9, 3.7107281886907854`*^9}, {
   3.7107282539195004`*^9, 3.710728270526533*^9}, {3.7107292056980762`*^9, 
   3.7107292149898987`*^9}, {3.71072924952936*^9, 3.7107293318995047`*^9}, {
   3.7107293663599653`*^9, 3.7107294357296963`*^9}, {3.7107294717979593`*^9, 
   3.7107295075064793`*^9}, 3.710729551500557*^9, 3.7107296012520447`*^9, {
   3.710730444224971*^9, 3.710730480514639*^9}, {3.710730550521962*^9, 
   3.710730573525007*^9}, {3.710730606554265*^9, 3.7107306738041935`*^9}, {
   3.710731051540492*^9, 3.7107311276242356`*^9}, {3.710731436762784*^9, 
   3.710731459523224*^9}, {3.710731601844198*^9, 3.710731617727332*^9}, {
   3.7107317733727884`*^9, 3.7107317815428205`*^9}, {3.710731822981921*^9, 
   3.710731827307932*^9}, 3.711132658011053*^9, {3.7111329119285765`*^9, 
   3.711132914284711*^9}, {3.711133016752572*^9, 3.711133028547247*^9}, {
   3.7111330604900737`*^9, 3.7111330610911083`*^9}, {3.7111332057693834`*^9, 
   3.711133212990796*^9}, {3.7111332489758544`*^9, 3.7111332867630157`*^9}, {
   3.711133528037816*^9, 3.71113353668231*^9}, {3.711133762861247*^9, 
   3.7111337659934263`*^9}, {3.711133997383661*^9, 3.711133997530669*^9}, {
   3.711134082003501*^9, 3.7111341207297163`*^9}, {3.7111341867204905`*^9, 
   3.7111342059535904`*^9}, {3.7111359146621275`*^9, 3.711135935355168*^9}, {
   3.711136014668521*^9, 3.711136050583589*^9}, {3.7111361131828537`*^9, 
   3.7111361492219334`*^9}, {3.7111405100384126`*^9, 
   3.7111405106084137`*^9}, {3.7111446089604588`*^9, 3.711144620853485*^9}, {
   3.7111446598075933`*^9, 3.7111446623085966`*^9}, {3.71114472842972*^9, 
   3.7111447714408083`*^9}, {3.711144886343012*^9, 3.711144887105014*^9}, {
   3.7111449257100773`*^9, 3.7111449317750883`*^9}, {3.7111449677901545`*^9, 
   3.7111449742251673`*^9}, {3.711145114046385*^9, 3.7111451432584486`*^9}, {
   3.711145210241599*^9, 3.7111452416706877`*^9}, {3.7111453633609447`*^9, 
   3.711145363950951*^9}, {3.711145642915621*^9, 3.7111456806906924`*^9}, {
   3.7111457425518746`*^9, 3.7111457893130264`*^9}, {3.711146073948522*^9, 
   3.711146099687642*^9}, {3.711146284151017*^9, 3.711146321379119*^9}, {
   3.711146373787327*^9, 3.7111464111594667`*^9}, {3.711146543721203*^9, 
   3.711146552505367*^9}, {3.711146901969515*^9, 3.7111469076815243`*^9}, {
   3.7111470060873165`*^9, 3.711147022898362*^9}, 
   3.7111471506106*^9},ExpressionUUID->"e2031879-133c-4b5a-a01e-aa8181506cec"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQPWsmCJy0/xkSzsjA8MEewr9pHxB66Of//+/tTYxB
4LE9t9RZMB8i/9K+donBNxCfAQw+2H/MOs4KosHKjT/bnz73hhfET08DgW/2
UZdVmRDm/7R/6HP1H0j/2TMg8Mdea08IB0geYh6Dg983UyT3MDrw1CiC7YG4
h9khep2fHIh/DqyfxeFAmiUjwj42h9I50mogPiPYOA6HzholBoR5nA7RM3j3
IfzH7bAorlQJYR6PwxmuVQoI8/gc3G4GH0T4V8Bhh4HYJoT7BRwUPDV+/IOH
j6CDYIGVIEgeol/IgTX3PtsvuH3CDvyvT765C+RD3CfiECkos4IJaB/EPBGH
LyGOQixw94o6HFmTGIpwj5hDzYT8twj3izvcijh4F+FfCQfTxctuIdwn4ZBf
/nM5wv+SDtwZn2YhzJNyOHvulhoifKUdflX47P0Pd5+Mw/pz15IZ4O6TcWjS
WF+OME/W4Y7+ek5GuHlyDl0HvhggzJN34P9hYYSIXwUH3vcJ4PQAVp6m4LBq
rno0wnwFh59/zNYg0pOigyOHtRmID7ZupqJDa9OXIIR5Sg4fpE9ZI8xTcri0
I78MYZ6Sg9VElfkI85QddiobuCHcr+ywN5EpHGGeisP1F+5g/wEASItGfw==

      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQPWsmCJy0z3i2iZGB4YM9hH/T/trKq3///39vb2IM
Ao/t51ybL4aQf2mvmfqeH8RnAIMP9iET68HyYOXGn+3X33IAi6engcA3+5nT
DrEi9P+0z/bX+Q4y/+wZEPhjr+oYyYgwj8FB4s88boR6RocbG4//Q7iH2eH4
DWV5kPw5sH4WB7/X/5gQ9rE59O25KgfiM4KN43C4vieOD2Eep8OXlrQ/CPO4
HQKWmSGZx+Pg4bJeC2Een8PXljNg+yHOE3CQW6PIAZKHuF/Agc2ihQdhvqDD
pfL7jAj9Qg5thx5+QNgn7LCNScsT4T4Rh7c9m9gR5ok4HBMJPAlSDzFP1GFC
QutvEB9inphDZefS/wjzxB1W/ilKQJgn4bD071cuhHkSDtEcpkII90k6VLv6
8yPcJ+VwLea8HogPMU/aQVLvCNi/EPNkHPQ3zWFCmCfjwDt72QOE+2QdRGp7
xBHmyTksnvSeG2GevENJD5MgIn4VHPgXRHwD6QcrT1NwiFY5xIswX8HhgGpu
NiI9KTo0+fkIg/hg62YqOsTaMrMgzFNyOO+45iHCPCWH9CP8QQjzlBzuKr/0
RJin7HB5zwwWRHgoO6T2PWZHmKfiELFZxgXEBwBfU0Uz
      "]]}, {}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9999827452053499},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {0.9999837517528664, 1.0000038827031945`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.710729428194883*^9, 3.710729488755189*^9}, 
   3.7107295279903154`*^9, 3.710729594918433*^9, 3.710729654901539*^9, 
   3.7107305069928856`*^9, 3.710730662228973*^9, 3.710730838782483*^9, 
   3.710731297663336*^9, 3.71073146235283*^9, 3.7107315670911293`*^9, 
   3.710731620391349*^9, 3.7107317209096603`*^9, 3.711132699233411*^9, 
   3.711132881290824*^9, 3.7111329169018607`*^9, 3.711133012385322*^9, 
   3.7111330638502655`*^9, 3.7111331733835306`*^9, 3.7111332693390193`*^9, 
   3.7111334239098597`*^9, 3.711133754610775*^9, 3.711133985580986*^9, {
   3.7111340725909624`*^9, 3.71113409527526*^9}, {3.711134179250063*^9, 
   3.711134191223748*^9}, 3.7111342662670403`*^9, 3.711135921512147*^9, 
   3.711135983706471*^9, 3.711136095939828*^9, 3.7111363404108667`*^9, 
   3.7111406871067724`*^9, 3.711144870135975*^9, 3.711145135102434*^9, 
   3.7111451674945*^9, {3.711145226065635*^9, 3.711145234426668*^9}, {
   3.711145753763899*^9, 3.7111457917070427`*^9}, {3.711146092111621*^9, 
   3.711146101381649*^9}, 3.7111463454832573`*^9, 3.7111465560153933`*^9, 
   3.7111468393703623`*^9, 3.7111469737721953`*^9, 
   3.7111472315832396`*^9},ExpressionUUID->"c9b47521-5541-4a41-b11c-\
673b718a922c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "a"], 
      RowBox[{"(", 
       RowBox[{"1", "-", "t"}], ")"}]}], "+", 
     RowBox[{"a", " ", "t"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"tmp5", "=", 
   RowBox[{
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\[Kappa]", ",", 
        RowBox[{
         RowBox[{"Re", "[", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox["\[ImaginaryI]", 
               RowBox[{"2", 
                SuperscriptBox["\[Pi]", "2"], "\[Lambda]"}]]}], 
             RowBox[{"(", 
              RowBox[{
               RowBox[{"Exp", "[", 
                RowBox[{"m", " ", "x"}], "]"}], 
               RowBox[{"ArcTan", "[", 
                SqrtBox[
                 FractionBox[
                  RowBox[{"\[Alpha]", "-", 
                   RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}]}]}], 
                  RowBox[{"\[Beta]", "+", 
                   RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}]}]}]]], "]"}]}], ")"}]}], 
            ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              RowBox[{"-", 
               RowBox[{"Log", "[", "a", "]"}]}], ",", 
              RowBox[{"Log", "[", "a", "]"}]}], "}"}]}], "]"}], "]"}], "/", 
         RowBox[{"Re", "[", 
          RowBox[{"NIntegrate", "[", 
           RowBox[{
            RowBox[{
             RowBox[{"-", 
              FractionBox[
               RowBox[{"\[ImaginaryI]", " "}], 
               RowBox[{"2", 
                SuperscriptBox["\[Pi]", "2"], "\[Lambda]"}]]}], 
             RowBox[{"(", 
              RowBox[{
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "\[Kappa]"}], " ", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{
                    RowBox[{"-", "4"}], " ", "\[ImaginaryI]"}], "+", 
                   "\[Kappa]"}], ")"}]}]], 
               RowBox[{
                RowBox[{"(", 
                 RowBox[{
                  SuperscriptBox["y", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", "m"}]], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["y", "2"]}], ")"}]}], ")"}], "/", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "2"}], " ", "m", " ", 
                  RowBox[{"Sign", "[", 
                   RowBox[{"4", "+", 
                    RowBox[{
                    SqrtBox["\[Kappa]"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "t"}], ")"}]}], " ", "t", " ", 
                    SuperscriptBox["\[Kappa]", 
                    RowBox[{"3", "/", "2"}]]}], "-", 
                    RowBox[{
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"\[Kappa]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "\[Kappa]"}], "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]]}], "+", 
                    RowBox[{"2", " ", 
                    SqrtBox["2"], " ", "t", " ", 
                    SqrtBox[
                    RowBox[{"\[Kappa]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "\[Kappa]"}], "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]]}]}], 
                    ")"}]}]}], "]"}], 
                  RowBox[{"Sign", "[", 
                   RowBox[{
                    RowBox[{"-", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "t"}], ")"}]}], " ", "t", " ", 
                    "\[Kappa]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "16"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "t"}]}], ")"}], " ", 
                    SqrtBox["\[Kappa]"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"4", " ", "t"}]}], ")"}], " ", 
                    SuperscriptBox["\[Kappa]", 
                    RowBox[{"3", "/", "2"}]]}], "-", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "\[Kappa]"}], "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "+", 
                    RowBox[{
                    SqrtBox["2"], " ", "\[Kappa]", " ", 
                    SqrtBox[
                    RowBox[{"\[Kappa]", "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}]]}]}], ")"}]}]}], 
                    ")"}]}], "]"}], 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["y", "2"], "+", 
                    RowBox[{"y", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}]}], ")"}]}]}], 
                    ")"}]}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "y"}], "+", 
                    SuperscriptBox["y", "2"], "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y", " ", "\[Kappa]"}]}], 
                    ")"}]}]]}], ")"}]}]}], ")"}]}], ",", 
            RowBox[{"{", 
             RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}]}]}], 
       "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Kappa]", ",", "0.2", ",", "10", ",", "0.2"}], "}"}]}], 
     "]"}], "//", "Quiet"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tmp6", "=", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Kappa]", ",", 
         RowBox[{
          RowBox[{"Im", "[", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox["\[ImaginaryI]", 
                RowBox[{"2", 
                 SuperscriptBox["\[Pi]", "2"], "\[Lambda]"}]]}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Exp", "[", 
                 RowBox[{"m", " ", "x"}], "]"}], 
                RowBox[{"ArcTan", "[", 
                 SqrtBox[
                  FractionBox[
                   RowBox[{"\[Alpha]", "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}]}]}], 
                   RowBox[{"\[Beta]", "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}]}]}]]], "]"}]}], ")"}]}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"-", 
                RowBox[{"Log", "[", "a", "]"}]}], ",", 
               RowBox[{"Log", "[", "a", "]"}]}], "}"}]}], "]"}], "]"}], "/", 
          RowBox[{"Im", "[", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"\[ImaginaryI]", " "}], 
                RowBox[{"2", 
                 SuperscriptBox["\[Pi]", "2"], "\[Lambda]"}]]}], 
              RowBox[{"(", 
               RowBox[{
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "\[Kappa]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[ImaginaryI]"}], "+", 
                    "\[Kappa]"}], ")"}]}]], 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["y", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "m"}]], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["y", "2"]}], ")"}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "m", " ", 
                   RowBox[{"Sign", "[", 
                    RowBox[{"4", "+", 
                    RowBox[{
                    SqrtBox["\[Kappa]"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "t"}], ")"}]}], " ", "t", " ", 
                    SuperscriptBox["\[Kappa]", 
                    RowBox[{"3", "/", "2"}]]}], "-", 
                    RowBox[{
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"\[Kappa]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "\[Kappa]"}], "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]]}], "+", 
                    RowBox[{"2", " ", 
                    SqrtBox["2"], " ", "t", " ", 
                    SqrtBox[
                    RowBox[{"\[Kappa]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "\[Kappa]"}], "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]]}]}], 
                    ")"}]}]}], "]"}], 
                   RowBox[{"Sign", "[", 
                    RowBox[{
                    RowBox[{"-", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "t"}], ")"}]}], " ", "t", " ", 
                    "\[Kappa]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "16"}], "+", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    RowBox[{"2", " ", "t"}]}], ")"}], " ", 
                    SqrtBox["\[Kappa]"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "2"}], "+", 
                    RowBox[{"4", " ", "t"}]}], ")"}], " ", 
                    SuperscriptBox["\[Kappa]", 
                    RowBox[{"3", "/", "2"}]]}], "-", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "\[Kappa]"}], "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "+", 
                    RowBox[{
                    SqrtBox["2"], " ", "\[Kappa]", " ", 
                    SqrtBox[
                    RowBox[{"\[Kappa]", "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}]]}]}], ")"}]}]}], 
                    ")"}]}], "]"}], 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["y", "2"], "+", 
                    RowBox[{"y", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}]}], ")"}]}]}], 
                    ")"}]}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "y"}], "+", 
                    SuperscriptBox["y", "2"], "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y", " ", "\[Kappa]"}]}], 
                    ")"}]}]]}], ")"}]}]}], ")"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}]}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Kappa]", ",", "0.2", ",", "10", ",", "0.2"}], "}"}]}], 
      "]"}], "//", "Quiet"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tmp5", ",", "tmp6"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"y", ",", "\[Kappa]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7107226952124667`*^9, 3.710722698637477*^9}, {
   3.710726240149721*^9, 3.7107262808355927`*^9}, {3.7107263438335037`*^9, 
   3.7107263934143915`*^9}, {3.710726782155875*^9, 3.710726782889076*^9}, {
   3.7107268529341993`*^9, 3.7107268719994373`*^9}, {3.7107269197355213`*^9, 
   3.710726958666793*^9}, {3.7107270213633027`*^9, 3.7107270215973034`*^9}, {
   3.710727071703034*^9, 3.710727154190349*^9}, 3.7107271913340144`*^9, {
   3.710727283038376*^9, 3.710727294317196*^9}, {3.710727334801267*^9, 
   3.7107273354720683`*^9}, {3.7107274060329924`*^9, 3.710727409308998*^9}, {
   3.7107274527082744`*^9, 3.7107274573570824`*^9}, {3.7107275315226126`*^9, 
   3.7107275317566133`*^9}, {3.7107276113177533`*^9, 3.710727674950265*^9}, {
   3.7107277102219267`*^9, 3.710727782212057*^9}, {3.710727841323561*^9, 
   3.710727841838362*^9}, {3.710728013959554*^9, 3.7107281886907854`*^9}, {
   3.7107282539195004`*^9, 3.710728270526533*^9}, {3.7107292056980762`*^9, 
   3.7107292149898987`*^9}, {3.71072924952936*^9, 3.7107293318995047`*^9}, {
   3.7107293663599653`*^9, 3.7107294357296963`*^9}, {3.7107294717979593`*^9, 
   3.7107295075064793`*^9}, 3.710729551500557*^9, 3.7107296012520447`*^9, {
   3.710730444224971*^9, 3.710730480514639*^9}, {3.710730550521962*^9, 
   3.710730573525007*^9}, {3.710730606554265*^9, 3.7107306738041935`*^9}, {
   3.710731051540492*^9, 3.7107311276242356`*^9}, {3.710731436762784*^9, 
   3.710731459523224*^9}, {3.710731601844198*^9, 3.710731617727332*^9}, {
   3.7107317733727884`*^9, 3.7107317815428205`*^9}, {3.710731822981921*^9, 
   3.710731827307932*^9}, 3.711132658011053*^9, {3.7111329119285765`*^9, 
   3.711132914284711*^9}, {3.711133016752572*^9, 3.711133028547247*^9}, {
   3.7111330604900737`*^9, 3.7111330610911083`*^9}, {3.7111332057693834`*^9, 
   3.711133212990796*^9}, {3.7111332489758544`*^9, 3.7111332867630157`*^9}, {
   3.711133528037816*^9, 3.71113353668231*^9}, {3.711133762861247*^9, 
   3.7111337659934263`*^9}, {3.711133997383661*^9, 3.711133997530669*^9}, {
   3.711134082003501*^9, 3.7111341207297163`*^9}, {3.7111341867204905`*^9, 
   3.7111342059535904`*^9}, {3.7111359146621275`*^9, 3.711135935355168*^9}, {
   3.711136014668521*^9, 3.711136050583589*^9}, {3.7111361131828537`*^9, 
   3.7111361492219334`*^9}, {3.7111405100384126`*^9, 
   3.7111405106084137`*^9}, {3.7111446089604588`*^9, 3.711144620853485*^9}, {
   3.7111446598075933`*^9, 3.7111446623085966`*^9}, {3.71114472842972*^9, 
   3.7111447714408083`*^9}, {3.711144886343012*^9, 3.711144887105014*^9}, {
   3.7111449257100773`*^9, 3.7111449317750883`*^9}, {3.7111449677901545`*^9, 
   3.7111449742251673`*^9}, {3.711145114046385*^9, 3.7111451432584486`*^9}, {
   3.711145210241599*^9, 3.7111452416706877`*^9}, {3.7111453633609447`*^9, 
   3.711145363950951*^9}, {3.711145642915621*^9, 3.7111456806906924`*^9}, {
   3.7111457425518746`*^9, 3.7111457893130264`*^9}, {3.711146073948522*^9, 
   3.711146099687642*^9}, {3.711146284151017*^9, 3.711146321379119*^9}, {
   3.711146373787327*^9, 3.7111464111594667`*^9}, {3.711146543721203*^9, 
   3.711146552505367*^9}, {3.7111469270037093`*^9, 3.711146935799856*^9}, {
   3.7111470538176813`*^9, 3.7111470788451557`*^9}, 
   3.711147159802783*^9},ExpressionUUID->"e1ff38a3-ef6b-4795-89ce-\
a4dfe9180325"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQPWsmCJy0V+7/COR+sIfwb9pbvr7CAOKbGIPAY/s3
zcuR5F/a76r3BcszgMEH+808K378///eHqzc+LP9JS7GvyB+ehoIfLO/1mzO
gND/036fgw0jiH/2DAj8sd/77Kn/DGmYeQwOVfKxrKwGMPWMDu1nrj52NYa5
h9lh8tGDyxoNP9ifA+tncbj760fFJt0PUPvYHOaVLPX9q/HBnhFsHIfDL8cL
258qw8zjdHiosezJfDmYedwON/1KHppJwszjcVi7lOXsFGGYeXwOf14aLKzn
hblPwMGF43hVDRvM/QIONvpHPf7+eg81X9Dhg9Aq1577MP8LOTwqFD5puuw9
1D5hh76fW7Yld7+Duk/E4fBU3qLkQzDzRByEi3jbEnxg7hV1mGjGez3ECOYe
MQcRY5tgPzWY+8Uddvqn2sjKw/wr4fCndDWTkRTMPAmHqhdNZ3rFYOZJOpxi
Pbt+G9x/Ug6pQd8kswVh5kk7lOk8Dmvhh5kn4yB0ZcG8l7ww82Qcmg39F3by
wMyTdbhUtvBvBDfMPDmHD3sMv/pxwcyTd3iWZfgnhRMWfgoO8euLP0/l+GAP
Vp6m4HDHluX0XXaY+QoOSkrrPC2BfEh6UnSQdHO5vhQY3mDrZio62LuWKyiy
wcxTcpAt+Zy9khVmnpKDV0qugC0rzDwlhyfX1N/fYoGZp+xgI6w7uZEF5n5l
h2n7Ck0MWGDmqTi0+hz49pT5gz0AJcZR4w==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQPWsmCJy0r7vfz8vA8MEewr9p/7bd/vr//+/tTYxB
4LG9vP7lTyA+RP6l/cr93Qwg9Qxg8MHemHnvH5A8WLnxZ/vg0iowPz0NBL7Z
2268+hqh/6d9OkcGWN/ZMyDwx5759wKtV+Ew8xgcOrQOegR1wdzD6MD2KXi2
b9sHqHuYHbYf23Z/fvkH+3Ng/SwOLns0iuakf4Dax+bQF+//+kXEB3tGsHEc
DvZT5eq0fWDmcTqsfJ/FFOcIM4/bofdotJu7Bcw8HgeLBKd3iwxg5vE5aDtu
CDDWgrlPwCHEv6zxkArM/QIOR5J38qsowMwXdBD727bFWAamX8hBpf+q2hUJ
mH3CDkFcKaFvRWHuE3EoF532OlsYZp6Iw7wYsz/2gjDzRB1eaS0tjOGHmSfm
4LdmavY2Xph54g5cjdbqrjww8yQc+Oe+/s3ADTNPwsFwkdy+x5ww8yQd3Pcs
ZnrBATNPyiHof2YyJwfMPGkH42ucfC7sMPNkHAzXn9o2hQ1mnowDs5vYkh+s
MPNkHfr+PszIZYWZJ+eQ9PL7nw8sMPPkHWYwM/c3ssDCT8Hh9gzNJbJAPlh5
moJD+02bq4eZYeYrODy6up+1GMiHpCdFB6nr7zW0gHywdTMVHc7fnRrwgglm
npLDtSd1R9YwwcxTcvA0/3GtjAlmnpLDyglZz1yZYOYpO2RZz8qSZIK5X9kh
amrqlw+MMPNUHKJuZ4mfAfIBl0hVMw==
      "]]}, {}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9498681806716563},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {0.9545153206343444, 1.047458119888106}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{
  3.711147326412859*^9},ExpressionUUID->"d772f66f-b6c2-466b-8572-\
10e36ab75e90"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"y", "=", 
    RowBox[{
     RowBox[{
      FractionBox["1", "a"], 
      RowBox[{"(", 
       RowBox[{"1", "-", "t"}], ")"}]}], "+", 
     RowBox[{"a", " ", "t"}]}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tmp7", "=", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Kappa]", ",", 
         RowBox[{
          RowBox[{"Re", "[", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox["\[ImaginaryI]", 
                RowBox[{"2", 
                 SuperscriptBox["\[Pi]", "2"], "\[Lambda]"}]]}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Exp", "[", 
                 RowBox[{"m", " ", "x"}], "]"}], 
                RowBox[{"ArcTan", "[", 
                 SqrtBox[
                  FractionBox[
                   RowBox[{"\[Alpha]", "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}]}]}], 
                   RowBox[{"\[Beta]", "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}]}]}]]], "]"}]}], ")"}]}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"-", 
                RowBox[{"Log", "[", "a", "]"}]}], ",", 
               RowBox[{"Log", "[", "a", "]"}]}], "}"}]}], "]"}], "]"}], "/", 
          RowBox[{"Re", "[", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"\[ImaginaryI]", " "}], 
                RowBox[{"2", 
                 SuperscriptBox["\[Pi]", "2"], "\[Lambda]"}]]}], 
              RowBox[{"(", 
               RowBox[{
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "\[Kappa]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[ImaginaryI]"}], "+", 
                    "\[Kappa]"}], ")"}]}]], 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["y", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "m"}]], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["y", "2"]}], ")"}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "m", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["y", "2"], "+", 
                    RowBox[{"y", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}]}], ")"}]}]}], 
                    ")"}]}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "y"}], "+", 
                    SuperscriptBox["y", "2"], "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y", " ", "\[Kappa]"}]}], 
                    ")"}]}]]}], ")"}]}]}], ")"}], 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"t", ">", 
                  RowBox[{
                   FractionBox["1", "2"], "+", 
                   FractionBox[
                    RowBox[{
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"\[Kappa]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "\[Kappa]"}], "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]]}], 
                    SuperscriptBox["\[Kappa]", 
                    RowBox[{"3", "/", "2"}]]], "-", 
                   FractionBox[
                    SqrtBox[
                    RowBox[{
                    SuperscriptBox["\[Kappa]", "2"], " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "8"}], "+", "\[Kappa]"}], ")"}], " ", 
                    "\[Kappa]"}], "+", 
                    RowBox[{"8", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]}], ")"}]}]], 
                    RowBox[{"2", " ", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}]}], " ", "&&", " ", 
                 RowBox[{"t", "<", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["\[Kappa]", "2"]}]], 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Kappa]", "2"]}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox["\[Kappa]"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "\[Kappa]"}], "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "-", 
                    RowBox[{
                    SqrtBox["2"], " ", 
                    SuperscriptBox["\[Kappa]", 
                    RowBox[{"3", "/", "2"}]], " ", 
                    SqrtBox[
                    RowBox[{"\[Kappa]", "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "+", 
                    RowBox[{
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{"\[Kappa]", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"16", " ", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}], "+", 
                    RowBox[{"\[Kappa]", " ", 
                    RowBox[{"(", 
                    RowBox[{"48", "-", 
                    RowBox[{"8", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "\[Kappa]"}], "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}]], " ", 
                    SqrtBox[
                    RowBox[{"\[Kappa]", "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "+", 
                    RowBox[{"\[Kappa]", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Kappa]", "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]}], 
                    ")"}]}]}], ")"}]}]]}]}], ")"}]}]}]}], ",", 
                RowBox[{"-", "1"}], ",", "1"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}]}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Kappa]", ",", "0.2", ",", "10", ",", "0.2"}], "}"}]}], 
      "]"}], "//", "Quiet"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"tmp8", "=", 
    RowBox[{
     RowBox[{"Table", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\[Kappa]", ",", 
         RowBox[{
          RowBox[{"Im", "[", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox["\[ImaginaryI]", 
                RowBox[{"2", 
                 SuperscriptBox["\[Pi]", "2"], "\[Lambda]"}]]}], 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"Exp", "[", 
                 RowBox[{"m", " ", "x"}], "]"}], 
                RowBox[{"ArcTan", "[", 
                 SqrtBox[
                  FractionBox[
                   RowBox[{"\[Alpha]", "-", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}]}]}], 
                   RowBox[{"\[Beta]", "+", 
                    RowBox[{"2", " ", 
                    RowBox[{"Cosh", "[", "x", "]"}]}]}]]], "]"}]}], ")"}]}], 
             ",", 
             RowBox[{"{", 
              RowBox[{"x", ",", 
               RowBox[{"-", 
                RowBox[{"Log", "[", "a", "]"}]}], ",", 
               RowBox[{"Log", "[", "a", "]"}]}], "}"}]}], "]"}], "]"}], "/", 
          RowBox[{"Im", "[", 
           RowBox[{"NIntegrate", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"-", 
               FractionBox[
                RowBox[{"\[ImaginaryI]", " "}], 
                RowBox[{"2", 
                 SuperscriptBox["\[Pi]", "2"], "\[Lambda]"}]]}], 
              RowBox[{"(", 
               RowBox[{
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "\[Kappa]"}], " ", 
                  RowBox[{"(", 
                   RowBox[{
                    RowBox[{
                    RowBox[{"-", "4"}], " ", "\[ImaginaryI]"}], "+", 
                    "\[Kappa]"}], ")"}]}]], 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   SuperscriptBox["y", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", "m"}]], " ", 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "1"}], "+", 
                    SuperscriptBox["y", "2"]}], ")"}]}], ")"}], "/", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"-", "2"}], " ", "m", " ", 
                   SqrtBox[
                    RowBox[{
                    RowBox[{"-", 
                    RowBox[{"(", 
                    RowBox[{"1", "+", 
                    SuperscriptBox["y", "2"], "+", 
                    RowBox[{"y", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "-", 
                    RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}]}], ")"}]}]}], 
                    ")"}]}], " ", 
                    RowBox[{"(", 
                    RowBox[{"1", "-", 
                    RowBox[{"2", " ", "y"}], "+", 
                    SuperscriptBox["y", "2"], "-", 
                    RowBox[{"\[ImaginaryI]", " ", "y", " ", "\[Kappa]"}]}], 
                    ")"}]}]]}], ")"}]}]}], ")"}], 
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"t", ">", 
                  FractionBox[
                   RowBox[{"\[Kappa]", "+", 
                    RowBox[{"2", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "\[Kappa]"}], "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "-", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"-", "8"}], "+", "\[Kappa]"}], ")"}], " ", 
                    "\[Kappa]"}], "+", 
                    RowBox[{"8", " ", 
                    RowBox[{"(", 
                    RowBox[{"2", "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]}]]}], 
                   RowBox[{"2", " ", "\[Kappa]"}]]}], " ", "&&", " ", 
                 RowBox[{"t", "<", 
                  RowBox[{
                   FractionBox["1", 
                    RowBox[{"8", " ", 
                    SuperscriptBox["\[Kappa]", 
                    RowBox[{"3", "/", "2"}]]}]], 
                   RowBox[{"(", 
                    RowBox[{
                    RowBox[{"4", " ", 
                    SuperscriptBox["\[Kappa]", 
                    RowBox[{"3", "/", "2"}]]}], "+", 
                    RowBox[{"4", " ", 
                    SqrtBox["2"], " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "\[Kappa]"}], "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "-", 
                    RowBox[{
                    SqrtBox["2"], " ", "\[Kappa]", " ", 
                    SqrtBox[
                    RowBox[{"\[Kappa]", "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "+", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"32", " ", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}], "+", 
                    RowBox[{"2", " ", "\[Kappa]", " ", 
                    RowBox[{"(", 
                    RowBox[{"48", "-", 
                    RowBox[{"8", " ", 
                    SqrtBox[
                    RowBox[{
                    RowBox[{"-", "\[Kappa]"}], "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}]], " ", 
                    SqrtBox[
                    RowBox[{"\[Kappa]", "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "+", 
                    RowBox[{"\[Kappa]", " ", 
                    RowBox[{"(", 
                    RowBox[{"\[Kappa]", "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]}], 
                    ")"}]}]}]]}], ")"}]}]}]}], ",", 
                RowBox[{"-", "1"}], ",", "1"}], "]"}]}], ",", 
             RowBox[{"{", 
              RowBox[{"t", ",", "0", ",", "1"}], "}"}]}], "]"}], "]"}]}]}], 
        "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Kappa]", ",", "0.2", ",", "10", ",", "0.2"}], "}"}]}], 
      "]"}], "//", "Quiet"}]}], ";"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"tmp7", ",", "tmp8"}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "Full"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"Clear", "[", 
  RowBox[{"y", ",", "\[Kappa]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.7107226952124667`*^9, 3.710722698637477*^9}, {
   3.710726240149721*^9, 3.7107262808355927`*^9}, {3.7107263438335037`*^9, 
   3.7107263934143915`*^9}, {3.710726782155875*^9, 3.710726782889076*^9}, {
   3.7107268529341993`*^9, 3.7107268719994373`*^9}, {3.7107269197355213`*^9, 
   3.710726958666793*^9}, {3.7107270213633027`*^9, 3.7107270215973034`*^9}, {
   3.710727071703034*^9, 3.710727154190349*^9}, 3.7107271913340144`*^9, {
   3.710727283038376*^9, 3.710727294317196*^9}, {3.710727334801267*^9, 
   3.7107273354720683`*^9}, {3.7107274060329924`*^9, 3.710727409308998*^9}, {
   3.7107274527082744`*^9, 3.7107274573570824`*^9}, {3.7107275315226126`*^9, 
   3.7107275317566133`*^9}, {3.7107276113177533`*^9, 3.710727674950265*^9}, {
   3.7107277102219267`*^9, 3.710727782212057*^9}, {3.710727841323561*^9, 
   3.710727841838362*^9}, {3.710728013959554*^9, 3.7107281886907854`*^9}, {
   3.7107282539195004`*^9, 3.710728270526533*^9}, {3.7107292056980762`*^9, 
   3.7107292149898987`*^9}, {3.71072924952936*^9, 3.7107293318995047`*^9}, {
   3.7107293663599653`*^9, 3.7107294357296963`*^9}, {3.7107294717979593`*^9, 
   3.7107295075064793`*^9}, 3.710729551500557*^9, 3.7107296012520447`*^9, {
   3.710730444224971*^9, 3.710730480514639*^9}, {3.710730550521962*^9, 
   3.710730573525007*^9}, {3.710730606554265*^9, 3.7107306738041935`*^9}, {
   3.710731051540492*^9, 3.7107311276242356`*^9}, {3.710731436762784*^9, 
   3.710731459523224*^9}, {3.710731601844198*^9, 3.710731617727332*^9}, {
   3.7107317733727884`*^9, 3.7107317815428205`*^9}, {3.710731822981921*^9, 
   3.710731827307932*^9}, 3.711132658011053*^9, {3.7111329119285765`*^9, 
   3.711132914284711*^9}, {3.711133016752572*^9, 3.711133028547247*^9}, {
   3.7111330604900737`*^9, 3.7111330610911083`*^9}, {3.7111332057693834`*^9, 
   3.711133212990796*^9}, {3.7111332489758544`*^9, 3.7111332867630157`*^9}, {
   3.711133528037816*^9, 3.71113353668231*^9}, {3.711133762861247*^9, 
   3.7111337659934263`*^9}, {3.711133997383661*^9, 3.711133997530669*^9}, {
   3.711134082003501*^9, 3.7111341207297163`*^9}, {3.7111341867204905`*^9, 
   3.7111342059535904`*^9}, {3.7111359146621275`*^9, 3.711135935355168*^9}, {
   3.711136014668521*^9, 3.711136050583589*^9}, {3.7111361131828537`*^9, 
   3.7111361492219334`*^9}, {3.7111405100384126`*^9, 
   3.7111405106084137`*^9}, {3.7111446089604588`*^9, 3.711144620853485*^9}, {
   3.7111446598075933`*^9, 3.7111446623085966`*^9}, {3.71114472842972*^9, 
   3.7111447714408083`*^9}, {3.711144886343012*^9, 3.711144887105014*^9}, {
   3.7111449257100773`*^9, 3.7111449317750883`*^9}, {3.7111449677901545`*^9, 
   3.7111449742251673`*^9}, {3.711145114046385*^9, 3.7111451432584486`*^9}, {
   3.711145210241599*^9, 3.7111452416706877`*^9}, {3.7111453633609447`*^9, 
   3.711145363950951*^9}, {3.711145642915621*^9, 3.7111456806906924`*^9}, {
   3.7111457425518746`*^9, 3.7111457893130264`*^9}, {3.711146073948522*^9, 
   3.711146099687642*^9}, {3.711146284151017*^9, 3.711146321379119*^9}, {
   3.711146373787327*^9, 3.7111464111594667`*^9}, {3.711146543721203*^9, 
   3.711146552505367*^9}, {3.7111469270037093`*^9, 3.711146935799856*^9}, 
   3.7111470538176813`*^9, {3.7111470848892827`*^9, 3.711147092737378*^9}, 
   3.7111471650148287`*^9, {3.7111483686146784`*^9, 3.711148376799692*^9}, 
   3.711148423946783*^9, 
   3.7111484840949073`*^9},ExpressionUUID->"d5545fbc-32b9-4d9d-9594-\
dd8a7b117d95"],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQPWsmCJy0V+7/COR+sIfwb9pbvr7CAOKbGIPAY/s3
zcuR5F/a76r3BcszgMEH+808K378///eHqzc+LP9JS7GvyB+ehoIfLO/1mzO
gND/036fgw0jiH/2DAj8sd/77Kn/DGmYeQwO1fKxrKwGMPWMDu1nrj52NYa5
h9lh8tGDyxoNP9ifA+tncbjz60fFJt0PUPvYHOaVLPX9q/HBnhFsHIfDP8cL
258qw8zjdHiosezJfDmYedwON/1KHppJwszjcVi3lOXsFGGYeXwOf14aLKzn
hblPwMGV43hVDRvM/QIOHvpHPf7+eg81X9DhndAq1577MP8LOTwuFD5puuw9
1D5hh90/t2xL7n4HdZ+Iw8GpvEXJh2DmiTgIF/G2JfjA3CvqMNGM93qIEcw9
Yg6ixjbBfmow94s77PJPtZGVh/lXwuF/6WomIymYeRIONS+azvSKwcyTdDjF
enb9Nrj/pBxSgr5JZgvCzJN2KNN5HNbCDzNPxkH+yoJ5L3lh5sk4NBv6L+zk
gZkn63CpbOHfCG6YeXIOH/YYfvXjgpkn7/Asy/BPCics/BQc4tcXf57K8cEe
rDxNweGOLcvpu+ww8xUcVJXWeVoC+ZD0pOgg6eZyfSkwvMHWzVR0sHUtV1Bk
g5mn5CBb8jl7JSvMPCUHr5RcAVtWmHlKDk+uqb+/xQIzT9nBRlh3ciMLzP3K
DjP2FZoYsMDMU3Fo8znw7SnzB3sAo+5SNg==
      "]]}, 
    {RGBColor[0.880722, 0.611041, 0.142051], PointSize[0.009166666666666668], 
     AbsoluteThickness[1.6], PointBox[CompressedData["
1:eJxTTMoPSmViYGAwAmIQPWsmCJy0r7vfz8vA8MEewr9p/7bd/vr//+/tTYxB
4LG9vP7lTyA+RP6l/cr93Qwg9Qxg8MHemHnvH5A8WLnxZ/vg0iowPz0NBL7Z
2268+hqh/6d9OkcGWN/ZMyDwx57j9wKtV+Ew8xgcOrQOegR1wdzD6MD2KXi2
b9sHqHuYHbYf23Z/fvkH+3Ng/SwObns0iuakf4Dax+bQE+//+kXEB3tGsHEc
DrZT5eq0fWDmcTqsep/FFOcIM4/bofdotJu7Bcw8HgeLBKd3iwxg5vE5aDtu
CDDWgrlPwCHEv6zxkArM/QIOp5J38qsowMwXdBD927bFWAamX8hBpf+q2hUJ
mH3CDn5cKaFvRWHuE3EoF532OlsYZp6Iw7wYsz/2gjDzRB1eaS0tjOGHmSfm
4LtmavY2Xph54g5cjdbqrjww8yQc+Oe+/s3ADTNPwsFgkdy+x5ww8yQd3Pcs
ZnrBATNPyiHof2YyJwfMPGkH42ucfC7sMPNkHAzWn9o2hQ1mnowDs5vYkh+s
MPNkHfr+PszIZYWZJ+eQ9PL7nw8sMPPkHWYwM/c3ssDCT8Hh9gzNJbJAPlh5
moJD+02bq4eZYeYrODy6up+1GMiHpCdFB6nr7zW0gHywdTMVHc7fnRrwgglm
npLDtSd1R9YwwcxTcvA0/3GtjAlmnpLDyglZz1yZYOYpO2RZz8qSZIK5X9kh
amrqlw+MMPNUHCJvZ4mfAfIBoSBVNA==
      "]]}, {}}, {}, {}, {{}, {}}, {{}, {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9498681806716616},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageMargins->0.,
  ImagePadding->All,
  ImageSize->Automatic,
  ImageSizeRaw->Automatic,
  Method->{"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{0, 10.}, {0.9545153206343494, 1.0474581198881057`}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.710729428194883*^9, 3.710729488755189*^9}, 
   3.7107295279903154`*^9, 3.710729594918433*^9, 3.710729654901539*^9, 
   3.7107305069928856`*^9, 3.710730662228973*^9, 3.710730838782483*^9, 
   3.710731297663336*^9, 3.71073146235283*^9, 3.7107315670911293`*^9, 
   3.710731620391349*^9, 3.7107317209096603`*^9, 3.711132699233411*^9, 
   3.711132881290824*^9, 3.7111329169018607`*^9, 3.711133012385322*^9, 
   3.7111330638502655`*^9, 3.7111331733835306`*^9, 3.7111332693390193`*^9, 
   3.7111334239098597`*^9, 3.711133754610775*^9, 3.711133985580986*^9, {
   3.7111340725909624`*^9, 3.71113409527526*^9}, {3.711134179250063*^9, 
   3.711134191223748*^9}, 3.7111342662670403`*^9, 3.711135921512147*^9, 
   3.711135983706471*^9, 3.711136095939828*^9, 3.7111363404108667`*^9, 
   3.7111406871067724`*^9, 3.711144870135975*^9, 3.711145135102434*^9, 
   3.7111451674945*^9, {3.711145226065635*^9, 3.711145234426668*^9}, {
   3.711145753763899*^9, 3.7111457917070427`*^9}, {3.711146092111621*^9, 
   3.711146101381649*^9}, 3.7111463454832573`*^9, 3.7111465560153933`*^9, 
   3.7111468393703623`*^9, 
   3.7111473864310083`*^9},ExpressionUUID->"22390e5b-7a1d-4063-b71a-\
d25b316d3fdc"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Steps towards expressions above", "Section",
 CellChangeTimes->{{3.7017558119816885`*^9, 3.701755815430575*^9}, {
   3.7051739233050485`*^9, 3.7051739235850487`*^9}, {3.7059172194988327`*^9, 
   3.705917257057094*^9}, {3.705917720596261*^9, 3.7059177349139347`*^9}, 
   3.70591820760131*^9, 3.705920033112227*^9, {3.7098521718543997`*^9, 
   3.709852235658512*^9}, {3.7099988333897*^9, 3.709998841387336*^9}, {
   3.7103644584929233`*^9, 3.7103644600217257`*^9}, {3.7103645042186036`*^9, 
   3.710364506106207*^9}, {3.710445956207261*^9, 3.7104459587032657`*^9}, {
   3.7104581319186974`*^9, 3.710458136817978*^9}, {3.7104975259703817`*^9, 
   3.7104975558260098`*^9}, {3.7105116763151827`*^9, 3.71051167642762*^9}, {
   3.710683811584429*^9, 3.7106838528777905`*^9}, 3.710683891429996*^9, {
   3.7110708295202055`*^9, 3.71107083589657*^9}, {3.711148610396487*^9, 
   3.7111486183195086`*^9}, {3.711148817150113*^9, 
   3.711148835556141*^9}},ExpressionUUID->"fe390dd2-8189-44b5-8830-\
9dd4374d43fb"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["y", "2"], "+", 
          RowBox[{"y", " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], "/.", 
        RowBox[{"y", "\[Rule]", 
         RowBox[{
          RowBox[{
           FractionBox["1", "a"], 
           RowBox[{"(", 
            RowBox[{"1", "-", "t"}], ")"}]}], "+", 
          RowBox[{"a", " ", "t"}]}]}]}], "//", "FullSimplify"}], ")"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       SqrtBox[
        RowBox[{
         RowBox[{"-", "\[Kappa]"}], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"-", "4"}], " ", "\[ImaginaryI]"}], "+", "\[Kappa]"}], 
          ")"}]}]], "\[Rule]", 
       RowBox[{
        SqrtBox["\[Kappa]"], 
        RowBox[{"(", 
         RowBox[{
          SqrtBox[
           FractionBox[
            RowBox[{
             RowBox[{"\[Kappa]", 
              SqrtBox[
               RowBox[{
                SuperscriptBox["\[Kappa]", "2"], "+", "16"}]]}], "-", 
             SuperscriptBox["\[Kappa]", "2"]}], "2"]], "+", 
          RowBox[{"\[ImaginaryI]", " ", 
           SqrtBox[
            FractionBox[
             RowBox[{
              RowBox[{"\[Kappa]", 
               SqrtBox[
                RowBox[{
                 SuperscriptBox["\[Kappa]", "2"], "+", "16"}]]}], "+", 
              SuperscriptBox["\[Kappa]", "2"]}], "2"]]}]}], ")"}]}]}], 
      "}"}]}], "//", "Expand"}], "//", 
   RowBox[{
    RowBox[{"Collect", "[", 
     RowBox[{"#", ",", "\[ImaginaryI]"}], "]"}], "&"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"1", "+", 
          SuperscriptBox["y", "2"], "+", 
          RowBox[{"y", " ", 
           RowBox[{"(", 
            RowBox[{"2", "-", 
             RowBox[{"\[ImaginaryI]", " ", "\[Kappa]"}]}], ")"}]}]}], ")"}], 
        " ", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"2", " ", "y"}], "+", 
          SuperscriptBox["y", "2"], "-", 
          RowBox[{"\[ImaginaryI]", " ", "y", " ", "\[Kappa]"}]}], ")"}]}], "/.", 
       RowBox[{"y", "\[Rule]", 
        RowBox[{
         RowBox[{
          FractionBox["1", "a"], 
          RowBox[{"(", 
           RowBox[{"1", "-", "t"}], ")"}]}], "+", 
         RowBox[{"a", " ", "t"}]}]}]}], "//", "FullSimplify"}], ")"}], "/.", 
    RowBox[{"{", 
     RowBox[{
      SqrtBox[
       RowBox[{
        RowBox[{"-", "\[Kappa]"}], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "4"}], " ", "\[ImaginaryI]"}], "+", "\[Kappa]"}], 
         ")"}]}]], "\[Rule]", 
      RowBox[{"(", 
       FractionBox[
        RowBox[{
         SqrtBox["\[Kappa]"], " ", 
         RowBox[{"(", 
          RowBox[{
           SqrtBox[
            RowBox[{
             RowBox[{"-", "\[Kappa]"}], "+", 
             SqrtBox[
              RowBox[{"16", "+", 
               SuperscriptBox["\[Kappa]", "2"]}]]}]], "+", 
           RowBox[{"\[ImaginaryI]", " ", 
            SqrtBox[
             RowBox[{"\[Kappa]", "+", 
              SqrtBox[
               RowBox[{"16", "+", 
                SuperscriptBox["\[Kappa]", "2"]}]]}]]}]}], ")"}]}], 
        SqrtBox["2"]], ")"}]}], "}"}]}], "//", "Expand"}], "//", 
  RowBox[{
   RowBox[{"Collect", "[", 
    RowBox[{"#", ",", "\[ImaginaryI]"}], "]"}], "&"}]}]}], "Input",
 CellChangeTimes->{{3.710729906260784*^9, 3.7107299510826635`*^9}, {
   3.7107299902387323`*^9, 3.7107300144831877`*^9}, {3.7107303612680163`*^9, 
   3.710730399722084*^9}, {3.7107311938805523`*^9, 3.7107312548816595`*^9}, {
   3.710731352677636*^9, 3.7107313719914703`*^9}, {3.711132011960101*^9, 
   3.711132043443902*^9}, {3.7111343958344507`*^9, 3.7111343962484746`*^9}, 
   3.7111354507527885`*^9},ExpressionUUID->"c2843f72-29f8-44a3-9e02-\
1f2fe67cf338"],

Cell[BoxData[
 RowBox[{"4", "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "\[Kappa]"}], "-", 
  RowBox[{"4", " ", "\[ImaginaryI]", " ", "t", " ", "\[Kappa]"}], "+", 
  RowBox[{"4", " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["t", "2"], " ", "\[Kappa]"}], "+", 
  RowBox[{"t", " ", 
   SuperscriptBox["\[Kappa]", "2"]}], "-", 
  RowBox[{
   SuperscriptBox["t", "2"], " ", 
   SuperscriptBox["\[Kappa]", "2"]}], "-", 
  RowBox[{
   SqrtBox["2"], " ", 
   SqrtBox["\[Kappa]"], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[Kappa]", "2"]}], "+", 
     RowBox[{"\[Kappa]", " ", 
      SqrtBox[
       RowBox[{"16", "+", 
        SuperscriptBox["\[Kappa]", "2"]}]]}]}]]}], "+", 
  RowBox[{"2", " ", 
   SqrtBox["2"], " ", "t", " ", 
   SqrtBox["\[Kappa]"], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["\[Kappa]", "2"]}], "+", 
     RowBox[{"\[Kappa]", " ", 
      SqrtBox[
       RowBox[{"16", "+", 
        SuperscriptBox["\[Kappa]", "2"]}]]}]}]]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   SqrtBox["2"], " ", 
   SqrtBox["\[Kappa]"], " ", 
   SqrtBox[
    RowBox[{
     SuperscriptBox["\[Kappa]", "2"], "+", 
     RowBox[{"\[Kappa]", " ", 
      SqrtBox[
       RowBox[{"16", "+", 
        SuperscriptBox["\[Kappa]", "2"]}]]}]}]]}], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", 
   SqrtBox["2"], " ", "t", " ", 
   SqrtBox["\[Kappa]"], " ", 
   SqrtBox[
    RowBox[{
     SuperscriptBox["\[Kappa]", "2"], "+", 
     RowBox[{"\[Kappa]", " ", 
      SqrtBox[
       RowBox[{"16", "+", 
        SuperscriptBox["\[Kappa]", "2"]}]]}]}]]}]}]], "Output",
 CellChangeTimes->{{3.710729919801608*^9, 3.710729951363464*^9}, {
   3.7107300073667693`*^9, 3.7107300152787895`*^9}, {3.7107303639356213`*^9, 
   3.710730424846732*^9}, 3.710731373379873*^9, {3.711132014161227*^9, 
   3.7111320437449193`*^9}, 3.7111323685754986`*^9, 3.7111343009140215`*^9, 
   3.711134403368882*^9, 
   3.7111354531619263`*^9},ExpressionUUID->"8bd92311-525b-455a-8986-\
105c166c981a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "16"}], " ", "\[ImaginaryI]", " ", "t", " ", "\[Kappa]"}], 
  "+", 
  RowBox[{"16", " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["t", "2"], " ", "\[Kappa]"}], "+", 
  RowBox[{"12", " ", "t", " ", 
   SuperscriptBox["\[Kappa]", "2"]}], "-", 
  RowBox[{"28", " ", 
   SuperscriptBox["t", "2"], " ", 
   SuperscriptBox["\[Kappa]", "2"]}], "+", 
  RowBox[{"32", " ", 
   SuperscriptBox["t", "3"], " ", 
   SuperscriptBox["\[Kappa]", "2"]}], "-", 
  RowBox[{"16", " ", 
   SuperscriptBox["t", "4"], " ", 
   SuperscriptBox["\[Kappa]", "2"]}], "+", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", "t", " ", 
   SuperscriptBox["\[Kappa]", "3"]}], "-", 
  RowBox[{"10", " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["t", "2"], " ", 
   SuperscriptBox["\[Kappa]", "3"]}], "+", 
  RowBox[{"16", " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["t", "3"], " ", 
   SuperscriptBox["\[Kappa]", "3"]}], "-", 
  RowBox[{"8", " ", "\[ImaginaryI]", " ", 
   SuperscriptBox["t", "4"], " ", 
   SuperscriptBox["\[Kappa]", "3"]}], "+", 
  RowBox[{
   SuperscriptBox["t", "2"], " ", 
   SuperscriptBox["\[Kappa]", "4"]}], "-", 
  RowBox[{"2", " ", 
   SuperscriptBox["t", "3"], " ", 
   SuperscriptBox["\[Kappa]", "4"]}], "+", 
  RowBox[{
   SuperscriptBox["t", "4"], " ", 
   SuperscriptBox["\[Kappa]", "4"]}], "+", 
  RowBox[{"4", " ", "\[ImaginaryI]", " ", 
   SqrtBox["2"], " ", "t", " ", 
   SuperscriptBox["\[Kappa]", 
    RowBox[{"3", "/", "2"}]], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "\[Kappa]"}], "+", 
     SqrtBox[
      RowBox[{"16", "+", 
       SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "-", 
  RowBox[{"12", " ", "\[ImaginaryI]", " ", 
   SqrtBox["2"], " ", 
   SuperscriptBox["t", "2"], " ", 
   SuperscriptBox["\[Kappa]", 
    RowBox[{"3", "/", "2"}]], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "\[Kappa]"}], "+", 
     SqrtBox[
      RowBox[{"16", "+", 
       SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "+", 
  RowBox[{"8", " ", "\[ImaginaryI]", " ", 
   SqrtBox["2"], " ", 
   SuperscriptBox["t", "3"], " ", 
   SuperscriptBox["\[Kappa]", 
    RowBox[{"3", "/", "2"}]], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "\[Kappa]"}], "+", 
     SqrtBox[
      RowBox[{"16", "+", 
       SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "-", 
  RowBox[{
   SqrtBox["2"], " ", "t", " ", 
   SuperscriptBox["\[Kappa]", 
    RowBox[{"5", "/", "2"}]], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "\[Kappa]"}], "+", 
     SqrtBox[
      RowBox[{"16", "+", 
       SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "+", 
  RowBox[{"3", " ", 
   SqrtBox["2"], " ", 
   SuperscriptBox["t", "2"], " ", 
   SuperscriptBox["\[Kappa]", 
    RowBox[{"5", "/", "2"}]], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "\[Kappa]"}], "+", 
     SqrtBox[
      RowBox[{"16", "+", 
       SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "-", 
  RowBox[{"2", " ", 
   SqrtBox["2"], " ", 
   SuperscriptBox["t", "3"], " ", 
   SuperscriptBox["\[Kappa]", 
    RowBox[{"5", "/", "2"}]], " ", 
   SqrtBox[
    RowBox[{
     RowBox[{"-", "\[Kappa]"}], "+", 
     SqrtBox[
      RowBox[{"16", "+", 
       SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "-", 
  RowBox[{"4", " ", 
   SqrtBox["2"], " ", "t", " ", 
   SuperscriptBox["\[Kappa]", 
    RowBox[{"3", "/", "2"}]], " ", 
   SqrtBox[
    RowBox[{"\[Kappa]", "+", 
     SqrtBox[
      RowBox[{"16", "+", 
       SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "+", 
  RowBox[{"12", " ", 
   SqrtBox["2"], " ", 
   SuperscriptBox["t", "2"], " ", 
   SuperscriptBox["\[Kappa]", 
    RowBox[{"3", "/", "2"}]], " ", 
   SqrtBox[
    RowBox[{"\[Kappa]", "+", 
     SqrtBox[
      RowBox[{"16", "+", 
       SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "-", 
  RowBox[{"8", " ", 
   SqrtBox["2"], " ", 
   SuperscriptBox["t", "3"], " ", 
   SuperscriptBox["\[Kappa]", 
    RowBox[{"3", "/", "2"}]], " ", 
   SqrtBox[
    RowBox[{"\[Kappa]", "+", 
     SqrtBox[
      RowBox[{"16", "+", 
       SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "-", 
  RowBox[{"\[ImaginaryI]", " ", 
   SqrtBox["2"], " ", "t", " ", 
   SuperscriptBox["\[Kappa]", 
    RowBox[{"5", "/", "2"}]], " ", 
   SqrtBox[
    RowBox[{"\[Kappa]", "+", 
     SqrtBox[
      RowBox[{"16", "+", 
       SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "+", 
  RowBox[{"3", " ", "\[ImaginaryI]", " ", 
   SqrtBox["2"], " ", 
   SuperscriptBox["t", "2"], " ", 
   SuperscriptBox["\[Kappa]", 
    RowBox[{"5", "/", "2"}]], " ", 
   SqrtBox[
    RowBox[{"\[Kappa]", "+", 
     SqrtBox[
      RowBox[{"16", "+", 
       SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "-", 
  RowBox[{"2", " ", "\[ImaginaryI]", " ", 
   SqrtBox["2"], " ", 
   SuperscriptBox["t", "3"], " ", 
   SuperscriptBox["\[Kappa]", 
    RowBox[{"5", "/", "2"}]], " ", 
   SqrtBox[
    RowBox[{"\[Kappa]", "+", 
     SqrtBox[
      RowBox[{"16", "+", 
       SuperscriptBox["\[Kappa]", "2"]}]]}]]}]}]], "Output",
 CellChangeTimes->{{3.710729919801608*^9, 3.710729951363464*^9}, {
   3.7107300073667693`*^9, 3.7107300152787895`*^9}, {3.7107303639356213`*^9, 
   3.710730424846732*^9}, 3.710731373379873*^9, {3.711132014161227*^9, 
   3.7111320437449193`*^9}, 3.7111323685754986`*^9, 3.7111343009140215`*^9, 
   3.711134403368882*^9, 
   3.7111354560140896`*^9},ExpressionUUID->"406c14a1-ac95-407d-9777-\
7a07a0fc391f"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"4", "+", 
      RowBox[{
       SqrtBox["\[Kappa]"], " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "1"}], "+", "t"}], ")"}]}], " ", "t", " ", 
          SuperscriptBox["\[Kappa]", 
           RowBox[{"3", "/", "2"}]]}], "-", 
         RowBox[{
          SqrtBox["2"], " ", 
          SqrtBox[
           RowBox[{"\[Kappa]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], "+", 
              SqrtBox[
               RowBox[{"16", "+", 
                SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]]}], "+", 
         RowBox[{"2", " ", 
          SqrtBox["2"], " ", "t", " ", 
          SqrtBox[
           RowBox[{"\[Kappa]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], "+", 
              SqrtBox[
               RowBox[{"16", "+", 
                SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]]}]}], ")"}]}]}],
      "\[Equal]", "0"}], ",", "t"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", 
     RowBox[{
      FractionBox["1", "2"], "+", 
      FractionBox[
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[Kappa]"}], "+", 
            SqrtBox[
             RowBox[{"16", "+", 
              SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]]}], 
       SuperscriptBox["\[Kappa]", 
        RowBox[{"3", "/", "2"}]]], "-", 
      FractionBox[
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Kappa]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "8"}], "+", "\[Kappa]"}], ")"}], " ", "\[Kappa]"}],
            "+", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              SqrtBox[
               RowBox[{"16", "+", 
                SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]}], ")"}]}]], 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Kappa]", "2"]}]]}], ",", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[Kappa]", "2"], "+", 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", 
        SqrtBox["\[Kappa]"], " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[Kappa]"}], "+", 
            SqrtBox[
             RowBox[{"16", "+", 
              SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]]}], "+", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Kappa]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "8"}], "+", "\[Kappa]"}], ")"}], " ", "\[Kappa]"}],
            "+", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              SqrtBox[
               RowBox[{"16", "+", 
                SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]}], ")"}]}]]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Kappa]", "2"]}]]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<1\>\"", ",", "\"\<2\>\"", ",", "\"\<3\>\"", ",", "\"\<4\>\""}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", "2"], "+", 
      FractionBox[
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[Kappa]"}], "+", 
            SqrtBox[
             RowBox[{"16", "+", 
              SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]]}], 
       SuperscriptBox["\[Kappa]", 
        RowBox[{"3", "/", "2"}]]], "-", 
      FractionBox[
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Kappa]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "8"}], "+", "\[Kappa]"}], ")"}], " ", "\[Kappa]"}],
            "+", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              SqrtBox[
               RowBox[{"16", "+", 
                SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]}], ")"}]}]], 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Kappa]", "2"]}]]}], "\[Equal]", "0"}], ",", 
    "\[Kappa]"}], "]"}], "//", "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "N"}]}], "Input",
 CellChangeTimes->{{3.711136235836342*^9, 3.711136261593815*^9}, {
  3.71113637537016*^9, 3.7111364128112736`*^9}, {3.7111364885275817`*^9, 
  3.7111365223456583`*^9}, {3.7111365568478355`*^9, 3.7111365913419895`*^9}, {
  3.711136637849409*^9, 3.711136638331411*^9}, {3.7111367008597164`*^9, 
  3.7111367010917215`*^9}},ExpressionUUID->"4c03f528-6fcb-45ef-aef5-\
657ded83518e"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", 
     RowBox[{
      FractionBox["1", "2"], "+", 
      FractionBox[
       RowBox[{
        SqrtBox["2"], " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[Kappa]"}], "+", 
            SqrtBox[
             RowBox[{"16", "+", 
              SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]]}], 
       SuperscriptBox["\[Kappa]", 
        RowBox[{"3", "/", "2"}]]], "-", 
      FractionBox[
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Kappa]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "8"}], "+", "\[Kappa]"}], ")"}], " ", "\[Kappa]"}],
            "+", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              SqrtBox[
               RowBox[{"16", "+", 
                SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]}], ")"}]}]], 
       RowBox[{"2", " ", 
        SuperscriptBox["\[Kappa]", "2"]}]]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", 
     FractionBox[
      RowBox[{
       SuperscriptBox["\[Kappa]", "2"], "+", 
       RowBox[{"2", " ", 
        SqrtBox["2"], " ", 
        SqrtBox["\[Kappa]"], " ", 
        SqrtBox[
         RowBox[{"\[Kappa]", " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "\[Kappa]"}], "+", 
            SqrtBox[
             RowBox[{"16", "+", 
              SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]]}], "+", 
       SqrtBox[
        RowBox[{
         SuperscriptBox["\[Kappa]", "2"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "8"}], "+", "\[Kappa]"}], ")"}], " ", "\[Kappa]"}],
            "+", 
           RowBox[{"8", " ", 
            RowBox[{"(", 
             RowBox[{"2", "+", 
              SqrtBox[
               RowBox[{"16", "+", 
                SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]}], ")"}]}]]}], 
      RowBox[{"2", " ", 
       SuperscriptBox["\[Kappa]", "2"]}]]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{
  3.7111363406948833`*^9, {3.711136381154173*^9, 3.711136413121275*^9}, 
   3.7111364914086013`*^9, 3.711136527296687*^9, {3.7111365616638956`*^9, 
   3.711136593563998*^9}, 3.71113664068542*^9, 
   3.7111367041937933`*^9},ExpressionUUID->"a225218c-fa56-4b23-a0b6-\
09f2d4299dac"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxFz2lI0wEYBvDpppbOcgqRmO6viMt5pB+CjDzSIPMi0yVNOjZ1s7xSHJha
mWkqoa0ST8ZQ0xBxZszAjmVqmtdCV1ZskTiXtBS09c9NzVWQ7/vAy8Pv2/u4
83NOpVlSKJTYv/evJdf41oGpRSGU/xlWETFJxJnQbZtHFDcJ4iJYMlDNtCKu
gDODRVlrzCqwaiO9doXZCLZRz7OWmZ3glnFp7ndmP1jWU6XO9B8HC0OnG5fy
VOBsnbdWLvsEtnUvY305NAeucZhgt1zQgvnqxJfUya/g3Ndl/ByWHtx7mZ6w
98Qy/lOUoQ9IWgGXSjfjfy6tgimqubDnhQawV76gIJFNghfI+tN2L36Bo3SX
rt7LNYLjFsQ+bm7rYP0Qv+RN9wbYnzHrGnH+N+4LJXkawxb4+DJ3zYNDCdv2
x8FUC66vBbivcvgcQaIFVqI5pdISnJJX1EdvooIPCH2UMTwa+K2jr50oyAr8
TFba7Eu1BhdZsE9Ofkbbagojs+U2YF2He620eAe4dr8zrZ+zEyxuEozyCFsw
t/askr6INh5rN0kVdmCtLrxgsIIObg0OdJni2YO7y0UMod8ucAUnJZpKog9q
WjorpnaDG7ybu6eiHcDXB6obovvRsS6c9nFPBvho9mgyowot3cf3nCTRnkMP
6+KSHXGf3yB7RoEWGGjTY2wnML/3B1F1B51ZmrAZdRctSpB/oN9HV5KiGnEd
WhZk2qiXoE2vzLMdXWjxDL16eBTd1JaVfmsM3ZavjIicQD/ZI16fUKI1XKd0
1Xs0S+scMa9FB8gL3R7o0IfL1aa0RXQMS/Lomx6dl0G4ra6ii4/cMD02oMvt
59/lk+iGnrbbRiO6tYQmfLqO7opPCy/eRMs9RlxDttAKg5fJbEb/AVrzG4g=

          "]]}, Annotation[#, "Charting`Private`Tag$350189#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpdqOAQw+2LPffqT+Vn6lPYy/8NT8wtfy
O+H8des7b+fonYLz0+0vznxTdBnOz3uq+XjLuptwPpdii/p9iwdwfp/Aaa2F
CY/h/KTbIfuZzzyD8wuPtiTlq7+C8zcW8ARLeL5FuKc6+5VB+Ac4v2n+n8Av
bz7C+QyXHzjsqfoM56uVpFWEaH2F8598nR7GvfcbnO/1NKt2UuEPON/vyQRt
OblfcP6rw0kNJ9b+hvP1BK/JOsf/RfjP/mvinc//4Hz3t1HflUIZHGD8G4dS
GKN0GOH8rR1H4hS+IvhprKUPzp1jgvOTi6q38sxihvP107XP+SSywPnnhXS4
Sy1Z4fzd65pm6zCzwfnVjFoBZ+4i+Fx3qjzytrDD+U+XKU6ZX8MB50/RkGTZ
GcoJ50+YlXY8UYELzo+aEnuO5zmC/8Nl6c/5+7jh/MdPnSoOtfPA+YtsDaXP
JvLC+WtbSwXTdfng/PbQZG/mrwi+6Z2FK9vP8sP5MzRnrz3rLQDn1x/oneG9
E8H3lQ5dekpFEM53zDseLdiJ4M+XSVI58xXBVzm8fJpftBDCf7qHtC7tQ/DT
PrNcPKklDOcnbfyk0NmP4E+4xNN75DiCv++z2s///xF8AP7L+hA=
          "]]}, Annotation[#, "Charting`Private`Tag$350189#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
          "]]}, Annotation[#, "Charting`Private`Tag$350189#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVxX0w23ccAOC8YeJlkq+9lFXDMrqQWW81Y+XzUW46L11RHbHWeYuu62xV
zLBjPSTsSLSGcpkrw8rStZbusBujjr6J6Uo65c4qRpmORez3S5Btfzz3uKd+
FJvBYjAYb/7n/xuulUarXtuAjJCcF7umCXrmSPOPiowwUilhK/7io95Yf8zu
p01YeaOn2e8bHkYsnPrs/BkKooNu75PmOeFhvdLbzc0EWYMPo4f0jrh8I7Xk
ptoM035T072BDvgKb2p3aPI2bF9+ycO7xQ65YEyZMewAcnxY/u9wMXxV8o9H
PAMnI/O/d7SxxQdD6UyJDxPfvRp0X/OHDV6XD58QGJkYumIR9hmsUWqVO6fV
sjCtXLG6xLHGtOzC6/aNbOx6LqXHO9AKfTO9tVEpHEzXuyy5lHJwnO9jlxtg
hRp1sFQwzsYfr5xr8mFbY62n+LjtfjYWMkVH7s5aY7tjDOPoRRZyZwoOZWls
8KsE2qPSgYUL7e61zUVPYU1NWJWulom1e3dxeuNtscN3JDXPlYnKRuloioCL
pcaATw90M1BSe1xrv8jF8j0m340YBlJhbXRzvx1esG5c2ZyzwPzCwfwhmT1e
mm7/jfhboCVon+tYigOm2awv6yp3QF2Wy8sUOyKtK88P39gGWXxaJNvoiGud
soDi97fBb+bSZdnY0zguv5jtMLMFDS83qccinXD/vOTbpeQtKP65qiGy1wnl
+ewHb/1uhmjX+LbbQh7WO/8yHHfaDCFZo0m8Ch5yZ4uSYq3M0PxCqvCukYfp
a2F5N5tMILzRUXc4iY8Rqhq9KtgESvGQ6F4/HycUnZ8YF2mQGjgTt0QE17qf
FE5U05B67W9BhYJgnO75vY+BhtPn4rYiaggOt+UM1gTTkBun0dlfINjbmtcR
GESD3JhbrawjGJPMT6wKpOFKAG2uVxEsYvkeed2PBnrQMtXeRZDZ+3ZBnYgG
5T37quFRgh0qVw/FMzQ0tn54svwWwVj1rDDEmYbWHG3ooTsEe8TFZwx8Gn54
Vmm6oyUoGrVdSnCiYUZCTv46SXDAai7cy44Gr/ldoY/mCc5PDgxMMGh4VVPg
9vUCwc6K5GNyCwWBZQ/pjEWCkCjzgx0KorxUVx8vE/xS5jKmNlOQ/YHAbX2d
oPNZy4nqTQqKDnxOdxsICtyV/uFGCsocHt3PMRJUiBgJjA0KGr5r/YKiCE6V
iD4+u05BSwkns89EMJHuyxSvUdAVk3GwaIvgeaGuffEJBRqPkd3BOwSjvE+J
W1Yp6Dd40hYLQX1Qsvm9Pyn4F0AwuAk=
          "]]}, 
        Annotation[#, "Charting`Private`Tag$350189#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 5}, {-2.978126079924013, 4.963543466540021}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"1\"", "\"2\"", "\"3\"", "\"4\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{
  3.7111363406948833`*^9, {3.711136381154173*^9, 3.711136413121275*^9}, 
   3.7111364914086013`*^9, 3.711136527296687*^9, {3.7111365616638956`*^9, 
   3.711136593563998*^9}, 3.71113664068542*^9, 
   3.711136704517799*^9},ExpressionUUID->"9d24b885-ae11-4de6-a4fb-\
2deb44361424"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Kappa]", "\[Rule]", 
    RowBox[{
     FractionBox["1", "4"], "+", 
     FractionBox["1", 
      RowBox[{"4", " ", 
       SqrtBox[
        FractionBox["3", 
         RowBox[{"3", "-", 
          FractionBox[
           RowBox[{"32", " ", 
            SuperscriptBox["6", 
             RowBox[{"2", "/", "3"}]]}], 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "9"}], "+", 
              SqrtBox["3153"]}], ")"}], 
            RowBox[{"1", "/", "3"}]]], "+", 
          RowBox[{"4", " ", 
           SuperscriptBox[
            RowBox[{"(", 
             RowBox[{"6", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "9"}], "+", 
                SqrtBox["3153"]}], ")"}]}], ")"}], 
            RowBox[{"1", "/", "3"}]]}]}]]]}]], "+", 
     RowBox[{
      FractionBox["1", "2"], " ", 
      SqrtBox[
       RowBox[{
        FractionBox["1", "2"], "-", 
        FractionBox[
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "9"}], "+", 
              SqrtBox["3153"]}], ")"}]}], ")"}], 
          RowBox[{"1", "/", "3"}]], 
         SuperscriptBox["3", 
          RowBox[{"2", "/", "3"}]]], "+", 
        FractionBox[
         RowBox[{"8", " ", 
          SuperscriptBox["2", 
           RowBox[{"2", "/", "3"}]]}], 
         SuperscriptBox[
          RowBox[{"(", 
           RowBox[{"3", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "9"}], "+", 
              SqrtBox["3153"]}], ")"}]}], ")"}], 
          RowBox[{"1", "/", "3"}]]], "+", 
        RowBox[{
         FractionBox["1", "2"], " ", 
         SqrtBox[
          FractionBox["3", 
           RowBox[{"3", "-", 
            FractionBox[
             RowBox[{"32", " ", 
              SuperscriptBox["6", 
               RowBox[{"2", "/", "3"}]]}], 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{
                RowBox[{"-", "9"}], "+", 
                SqrtBox["3153"]}], ")"}], 
              RowBox[{"1", "/", "3"}]]], "+", 
            RowBox[{"4", " ", 
             SuperscriptBox[
              RowBox[{"(", 
               RowBox[{"6", " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "9"}], "+", 
                  SqrtBox["3153"]}], ")"}]}], ")"}], 
              RowBox[{"1", "/", "3"}]]}]}]]]}]}]]}]}]}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7111363406948833`*^9, {3.711136381154173*^9, 3.711136413121275*^9}, 
   3.7111364914086013`*^9, 3.711136527296687*^9, {3.7111365616638956`*^9, 
   3.711136593563998*^9}, 3.71113664068542*^9, 
   3.7111367046098003`*^9},ExpressionUUID->"a901db01-3a0f-4de0-9395-\
9f5160343be3"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Kappa]", "\[Rule]", "1.7484028812522845`"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.7111363406948833`*^9, {3.711136381154173*^9, 3.711136413121275*^9}, 
   3.7111364914086013`*^9, 3.711136527296687*^9, {3.7111365616638956`*^9, 
   3.711136593563998*^9}, 3.71113664068542*^9, 
   3.7111367046098003`*^9},ExpressionUUID->"a851604e-43f0-42f7-8b66-\
ec14459b6cdf"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", " ", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "t"}], ")"}]}], " ", "t", " ", "\[Kappa]", 
      " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "16"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", "t"}]}], ")"}], " ", 
         SqrtBox["\[Kappa]"], " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "2"}], "+", 
              RowBox[{"4", " ", "t"}]}], ")"}], " ", 
            SuperscriptBox["\[Kappa]", 
             RowBox[{"3", "/", "2"}]]}], "-", 
           RowBox[{"4", " ", 
            SqrtBox["2"], " ", 
            SqrtBox[
             RowBox[{
              RowBox[{"-", "\[Kappa]"}], "+", 
              SqrtBox[
               RowBox[{"16", "+", 
                SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "+", 
           RowBox[{
            SqrtBox["2"], " ", "\[Kappa]", " ", 
            SqrtBox[
             RowBox[{"\[Kappa]", "+", 
              SqrtBox[
               RowBox[{"16", "+", 
                SuperscriptBox["\[Kappa]", "2"]}]]}]]}]}], ")"}]}]}], ")"}]}],
      "\[Equal]", "0"}], ",", "t"}], "]"}], "//", 
  "FullSimplify"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "1", ",", 
     RowBox[{"-", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Kappa]", "2"]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          SuperscriptBox["\[Kappa]", "2"]}], "-", 
         RowBox[{"4", " ", 
          SqrtBox["2"], " ", 
          SqrtBox["\[Kappa]"], " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "\[Kappa]"}], "+", 
            SqrtBox[
             RowBox[{"16", "+", 
              SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "+", 
         RowBox[{
          SqrtBox["2"], " ", 
          SuperscriptBox["\[Kappa]", 
           RowBox[{"3", "/", "2"}]], " ", 
          SqrtBox[
           RowBox[{"\[Kappa]", "+", 
            SqrtBox[
             RowBox[{"16", "+", 
              SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "+", 
         RowBox[{
          SqrtBox["2"], " ", 
          SqrtBox[
           RowBox[{"\[Kappa]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"16", " ", 
               SqrtBox[
                RowBox[{"16", "+", 
                 SuperscriptBox["\[Kappa]", "2"]}]]}], "+", 
              RowBox[{"\[Kappa]", " ", 
               RowBox[{"(", 
                RowBox[{"48", "-", 
                 RowBox[{"8", " ", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", "\[Kappa]"}], "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}]], " ", 
                  SqrtBox[
                   RowBox[{"\[Kappa]", "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "+", 
                 RowBox[{"\[Kappa]", " ", 
                  RowBox[{"(", 
                   RowBox[{"\[Kappa]", "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}]]}]}], ")"}]}]}], ",", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Kappa]", "2"]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox["\[Kappa]", "2"]}], "+", 
        RowBox[{"4", " ", 
         SqrtBox["2"], " ", 
         SqrtBox["\[Kappa]"], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "\[Kappa]"}], "+", 
           SqrtBox[
            RowBox[{"16", "+", 
             SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "-", 
        RowBox[{
         SqrtBox["2"], " ", 
         SuperscriptBox["\[Kappa]", 
          RowBox[{"3", "/", "2"}]], " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "+", 
           SqrtBox[
            RowBox[{"16", "+", 
             SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "+", 
        RowBox[{
         SqrtBox["2"], " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"16", " ", 
              SqrtBox[
               RowBox[{"16", "+", 
                SuperscriptBox["\[Kappa]", "2"]}]]}], "+", 
             RowBox[{"\[Kappa]", " ", 
              RowBox[{"(", 
               RowBox[{"48", "-", 
                RowBox[{"8", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "\[Kappa]"}], "+", 
                   SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}]], " ", 
                 SqrtBox[
                  RowBox[{"\[Kappa]", "+", 
                   SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "+", 
                RowBox[{"\[Kappa]", " ", 
                 RowBox[{"(", 
                  RowBox[{"\[Kappa]", "+", 
                   SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]}], 
               ")"}]}]}], ")"}]}]]}]}], ")"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Kappa]", ",", "0", ",", "5"}], "}"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<1\>\"", ",", "\"\<2\>\"", ",", "\"\<3\>\"", ",", "\"\<4\>\""}], 
     "}"}]}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Solve", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      FractionBox["1", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Kappa]", "2"]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox["\[Kappa]", "2"]}], "+", 
        RowBox[{"4", " ", 
         SqrtBox["2"], " ", 
         SqrtBox["\[Kappa]"], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "\[Kappa]"}], "+", 
           SqrtBox[
            RowBox[{"16", "+", 
             SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "-", 
        RowBox[{
         SqrtBox["2"], " ", 
         SuperscriptBox["\[Kappa]", 
          RowBox[{"3", "/", "2"}]], " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "+", 
           SqrtBox[
            RowBox[{"16", "+", 
             SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "+", 
        RowBox[{
         SqrtBox["2"], " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"16", " ", 
              SqrtBox[
               RowBox[{"16", "+", 
                SuperscriptBox["\[Kappa]", "2"]}]]}], "+", 
             RowBox[{"\[Kappa]", " ", 
              RowBox[{"(", 
               RowBox[{"48", "-", 
                RowBox[{"8", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "\[Kappa]"}], "+", 
                   SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}]], " ", 
                 SqrtBox[
                  RowBox[{"\[Kappa]", "+", 
                   SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "+", 
                RowBox[{"\[Kappa]", " ", 
                 RowBox[{"(", 
                  RowBox[{"\[Kappa]", "+", 
                   SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]}], 
               ")"}]}]}], ")"}]}]]}]}], ")"}]}], "\[Equal]", "1"}], ",", 
    "\[Kappa]"}], "]"}], "//", "Simplify"}], "\[IndentingNewLine]", 
 RowBox[{"%", "//", "N"}]}], "Input",
 CellChangeTimes->{{3.711136423355293*^9, 3.7111364689655066`*^9}, {
  3.7111365337117043`*^9, 3.711136550088752*^9}, {3.7111366066611137`*^9, 
  3.711136614378147*^9}, {3.711136657116456*^9, 3.711136657776457*^9}, {
  3.711136690721613*^9, 3.7111366920016146`*^9}, {3.7111367347958484`*^9, 
  3.711136751430924*^9}},ExpressionUUID->"b56495b6-c32e-4b4d-b88a-\
faf486799db6"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", 
     RowBox[{"-", 
      RowBox[{
       FractionBox["1", 
        RowBox[{"8", " ", 
         SuperscriptBox["\[Kappa]", "2"]}]], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          SuperscriptBox["\[Kappa]", "2"]}], "-", 
         RowBox[{"4", " ", 
          SqrtBox["2"], " ", 
          SqrtBox["\[Kappa]"], " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "\[Kappa]"}], "+", 
            SqrtBox[
             RowBox[{"16", "+", 
              SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "+", 
         RowBox[{
          SqrtBox["2"], " ", 
          SuperscriptBox["\[Kappa]", 
           RowBox[{"3", "/", "2"}]], " ", 
          SqrtBox[
           RowBox[{"\[Kappa]", "+", 
            SqrtBox[
             RowBox[{"16", "+", 
              SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "+", 
         RowBox[{
          SqrtBox["2"], " ", 
          SqrtBox[
           RowBox[{"\[Kappa]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"16", " ", 
               SqrtBox[
                RowBox[{"16", "+", 
                 SuperscriptBox["\[Kappa]", "2"]}]]}], "+", 
              RowBox[{"\[Kappa]", " ", 
               RowBox[{"(", 
                RowBox[{"48", "-", 
                 RowBox[{"8", " ", 
                  SqrtBox[
                   RowBox[{
                    RowBox[{"-", "\[Kappa]"}], "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}]], " ", 
                  SqrtBox[
                   RowBox[{"\[Kappa]", "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "+", 
                 RowBox[{"\[Kappa]", " ", 
                  RowBox[{"(", 
                   RowBox[{"\[Kappa]", "+", 
                    SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]}], 
                ")"}]}]}], ")"}]}]]}]}], ")"}]}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"t", "\[Rule]", 
     RowBox[{
      FractionBox["1", 
       RowBox[{"8", " ", 
        SuperscriptBox["\[Kappa]", "2"]}]], 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"4", " ", 
         SuperscriptBox["\[Kappa]", "2"]}], "+", 
        RowBox[{"4", " ", 
         SqrtBox["2"], " ", 
         SqrtBox["\[Kappa]"], " ", 
         SqrtBox[
          RowBox[{
           RowBox[{"-", "\[Kappa]"}], "+", 
           SqrtBox[
            RowBox[{"16", "+", 
             SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "-", 
        RowBox[{
         SqrtBox["2"], " ", 
         SuperscriptBox["\[Kappa]", 
          RowBox[{"3", "/", "2"}]], " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", "+", 
           SqrtBox[
            RowBox[{"16", "+", 
             SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "+", 
        RowBox[{
         SqrtBox["2"], " ", 
         SqrtBox[
          RowBox[{"\[Kappa]", " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"16", " ", 
              SqrtBox[
               RowBox[{"16", "+", 
                SuperscriptBox["\[Kappa]", "2"]}]]}], "+", 
             RowBox[{"\[Kappa]", " ", 
              RowBox[{"(", 
               RowBox[{"48", "-", 
                RowBox[{"8", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "\[Kappa]"}], "+", 
                   SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}]], " ", 
                 SqrtBox[
                  RowBox[{"\[Kappa]", "+", 
                   SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}]]}], "+", 
                RowBox[{"\[Kappa]", " ", 
                 RowBox[{"(", 
                  RowBox[{"\[Kappa]", "+", 
                   SqrtBox[
                    RowBox[{"16", "+", 
                    SuperscriptBox["\[Kappa]", "2"]}]]}], ")"}]}]}], 
               ")"}]}]}], ")"}]}]]}]}], ")"}]}]}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.711136454390437*^9, 3.71113647557755*^9}, {
   3.7111365422987285`*^9, 3.711136558592854*^9}, 3.7111366258512955`*^9, 
   3.7111366646025257`*^9, 3.7111367016757326`*^9, {3.7111367418098927`*^9, 
   3.7111367578989477`*^9}},ExpressionUUID->"0c5c5dd0-f7fd-4218-85b5-\
a9ebbfb075b0"],

Cell[BoxData[
 TemplateBox[{
   GraphicsBox[{{{{}, {}, 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.368417, 0.506779, 0.709798], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxFz2lI0wEYBvDpppbOcgqRmO6viMt5pB+CjDzSIPMi0yVNOjZ1s7xSHJha
mWkqoa0ST8ZQ0xBxZszAjmVqmtdCV1ZskTiXtBS09c9NzVWQ7/vAy8Pv2/u4
83NOpVlSKJTYv/evJdf41oGpRSGU/xlWETFJxJnQbZtHFDcJ4iJYMlDNtCKu
gDODRVlrzCqwaiO9doXZCLZRz7OWmZ3glnFp7ndmP1jWU6XO9B8HC0OnG5fy
VOBsnbdWLvsEtnUvY305NAeucZhgt1zQgvnqxJfUya/g3Ndl/ByWHtx7mZ6w
98Qy/lOUoQ9IWgGXSjfjfy6tgimqubDnhQawV76gIJFNghfI+tN2L36Bo3SX
rt7LNYLjFsQ+bm7rYP0Qv+RN9wbYnzHrGnH+N+4LJXkawxb4+DJ3zYNDCdv2
x8FUC66vBbivcvgcQaIFVqI5pdISnJJX1EdvooIPCH2UMTwa+K2jr50oyAr8
TFba7Eu1BhdZsE9Ofkbbagojs+U2YF2He620eAe4dr8zrZ+zEyxuEozyCFsw
t/askr6INh5rN0kVdmCtLrxgsIIObg0OdJni2YO7y0UMod8ucAUnJZpKog9q
WjorpnaDG7ybu6eiHcDXB6obovvRsS6c9nFPBvho9mgyowot3cf3nCTRnkMP
6+KSHXGf3yB7RoEWGGjTY2wnML/3B1F1B51ZmrAZdRctSpB/oN9HV5KiGnEd
WhZk2qiXoE2vzLMdXWjxDL16eBTd1JaVfmsM3ZavjIicQD/ZI16fUKI1XKd0
1Xs0S+scMa9FB8gL3R7o0IfL1aa0RXQMS/Lomx6dl0G4ra6ii4/cMD02oMvt
59/lk+iGnrbbRiO6tYQmfLqO7opPCy/eRMs9RlxDttAKg5fJbEb/AVrzG4g=

          "]]}, Annotation[#, "Charting`Private`Tag$358291#1"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.880722, 0.611041, 0.142051], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJxTTMoPSmViYGAwAWIQPbcuic0wpdqOAQw+2LPffqT+Vn6lPYy/8NT8wtfy
O+H8des7b+fonYLz0+0vznxTdBnOz3uq+XjLuptwPpdii/p9iwdwfp/Aaa2F
CY/h/KTbIfuZzzyD8wuPtiTlq7+C8zcW8ARLeL5FuKc6+5VB+Ac4v2n+n8Av
bz7C+QyXHzjsqfoM56uVpFWEaH2F8598nR7GvfcbnO/1NKt2UuEPON/vyQRt
OblfcP6rw0kNJ9b+hvP1BK/JOsf/RfjP/mvinc//4Hz3t1HflUIZHGD8G4dS
GKN0GOH8rR1H4hS+IvhprKUPzp1jgvOTi6q38sxihvP107XP+SSywPnnhXS4
Sy1Z4fzd65pm6zCzwfnVjFoBZ+4i+Fx3qjzytrDD+U+XKU6ZX8MB50/RkGTZ
GcoJ50+YlXY8UYELzo+aEnuO5zmC/8Nl6c/5+7jh/MdPnSoOtfPA+YtsDaXP
JvLC+WtbSwXTdfng/PbQZG/mrwi+6Z2FK9vP8sP5MzRnrz3rLQDn1x/oneG9
E8H3lQ5dekpFEM53zDseLdiJ4M+XSVI58xXBVzm8fJpftBDCf7qHtC7tQ/DT
PrNcPKklDOcnbfyk0NmP4E+4xNN75DiCv++z2s///xF8AP7L+hA=
          "]]}, Annotation[#, "Charting`Private`Tag$358291#2"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.560181, 0.691569, 0.194885], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1: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
RoZqvtbC8jKGf2satmK5kOF/3BtE3Q==
          "]]}, Annotation[#, "Charting`Private`Tag$358291#3"]& ], 
       TagBox[{
         Directive[
          Opacity[1.], 
          RGBColor[0.922526, 0.385626, 0.209179], 
          AbsoluteThickness[1.6]], 
         LineBox[CompressedData["
1:eJwVjWs4lAkYhmfG0IrU+NKSEpLkkJRqxXpfh5VSFsMmSiFDbUVh65KSIlrK
hJBW5JC6pFRsaTUVRQ5NkiSrFN84JWU+3zRjZNb+uK/nup8/t0FQuFcIi8Fg
+E/z/xq+JcyGX42B8sqCHcvq2Xgif9JzfGQMatTznKg8NnqsuHfAjBoD3RIh
kZrJRr3HkeeCZGMQsLbd2iKFjfd7h1tblcVge/8DJh9mo3jJ21/L9cSg50ns
LuCyMeh61WaehxiqpQ/2eqix0aF6/4bOO2JoLo3s3HdcCRmvPmBNDAVgnTQq
iGNhwpDgckw8BfUKf9Xjh1ioyshj2SRT0NZXFuEazkJNi61Pqs5T4PbIlvkl
gIVLkl6uv1lBQVlOpnW6PQs32ta6F/ZTcKRTErxMwcSMoqJtyV7j4JVLJAYm
MtE4infY25QGfwbfw7uYgRbrerj5K2hI7fLeveASA60ZvpbDa2gQtE7AUDYD
HVM39Mc50dAi4xDnUhgYUGzuXbaNBpULknrtSAZmtYstWWk0+BgbWrKdGKi8
Om7gJkXDUv9dJj4tCiDp7N/UHkhgnq5OxJ8HpqDQYVXkuzoJhPl+m+vDm4Id
Z4RpN5skQH5euMPEfwq6jJQbuZ0SKKWrBYPOU/CSe9D2L0oCriKtGy+0p0Bw
a5O+hek3SK/QSV1e+x2y9zGH3bO/wWTwntzx+d9ho2jP0fQDUhC1SZoGeuXg
cnTxdefDUoiN2OxX/1YOjlrdXZJjUnBpcdle1iqHdb9s/sk/VQpFXKuSZIEc
TEssqcWlUgjvUaSl5cpBLWQ8rKpbChrPWCcbuXJoIY96d66XwfCPpweeNE2A
O8k309ObAO7eKP2rjdN/XdDxZ+VyAO83a1cvksJyTsdCpx3f4Xw6+XRZugRm
Ah3YTU3B6/C6jE5PGtZ/9vtm6MNAs9HLBQ2Lx6GzdhfTz5yJW6RdDmoGFFQl
PwnQp5m4oCfiq9xNDDzl6A9CIQu7dp5Nmhc3BsEHj1Sp5yqhc2SeeXX7V7AM
NRNuCmRj2+2df2Taf4UXmuZq0TbKWBq8XKzt+wX+uXHiormSCmrQ2bR34Cgc
YZp6tLxTQYpnfNch/DPM7I5x3V85A2Pn2h7QyhkB0RWDzPzYH9CCKK9S//gJ
Mk102NU+qrhNo2lBltkn4OfyGgL1Z6I1xrvv5g+DX+Z2ofrATNxa+SXekj0M
UucSWb5ADdutO9LpQ0PQJ3I8XJukjrl2tWpWikEo/NlK93ngLKzRHHU2PDUI
5YnRnFALDdwa9TA5auEgJPkEuynRGrjbqmpw5MEArO6+fC3p+WzkOW7iJmwf
gJxlF8ufu83BR2EjR+6oDkDcozM5btVz0IC55p68sh826/qUNBlxsLz2dsrB
0H5w2N/gzznNwaj42eX3FvdD/oIgoxaag8e2BKzpfS8Co7rSLHd/TZSFWH09
XygCvkWtaZtAE12F14z794iAR7FfNpoSqL33UrryShEE3RLrn04j0K6hepzN
EMHeE9zJjecIvOBmommuICGaW/lGPYPA4gwrHneKhGQ6+iw/i8D2mOZbhZMk
3LCRybPzCJxVvOi1k4wE2WNFx5UyAu/qxdjxxSTw29TPPGkgMG2fMsdTREJu
0b6wU40ElhLsnmMkCUVRQifXZgKd5u/6eL2PhL/n8SeahdM9FaWTqr0kdPsR
Ya9eE8jRfbv26XsSlvbpOPX2Efguqs/XpZOEFZUxesUiAq01h3YdekPCusR/
ZSEDBFbZ2Rdf7SBh09K8iqFhAuXVGTVqr0k4+Lu+3tgYgYYBc73aX5IQaxcv
u00RKLR7KFGZ9sRZve1RNIEV21cJbVpJyLlZlCKVEriozlqrQEhC4XF26P0J
Ajc0FCS8ek5CmWeIY+wkgR2pGcYzpr3SsH6h/RSBmQmTE+taSBBQxjKFgkAd
42ZmeDMJ/wFbz8Gz
          "]]}, 
        Annotation[#, "Charting`Private`Tag$358291#4"]& ]}}, {}, {}}, {
    DisplayFunction -> Identity, Ticks -> {Automatic, Automatic}, 
     AxesOrigin -> {0, 0}, FrameTicks -> {{Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}, {Automatic, 
        Charting`ScaledFrameTicks[{Identity, Identity}]}}, 
     GridLines -> {None, None}, DisplayFunction -> Identity, 
     PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.05], 
        Scaled[0.05]}}, PlotRangeClipping -> True, ImagePadding -> All, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, DisplayFunction :> 
     Identity, Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& ), "CopiedValueFunction" -> ({
           (Identity[#]& )[
            Part[#, 1]], 
           (Identity[#]& )[
            Part[#, 2]]}& )}}, 
     PlotRange -> {{0, 5}, {-1.661264335435669, 2.5967586012614015`}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{
        Scaled[0.02], 
        Scaled[0.02]}, {
        Scaled[0.02], 
        Scaled[0.02]}}, Ticks -> {Automatic, Automatic}}], 
   FormBox[
    FormBox[
     TemplateBox[{"\"1\"", "\"2\"", "\"3\"", "\"4\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"], 
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {1, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.711136454390437*^9, 3.71113647557755*^9}, {
   3.7111365422987285`*^9, 3.711136558592854*^9}, 3.7111366258512955`*^9, 
   3.7111366646025257`*^9, 3.7111367016757326`*^9, {3.7111367418098927`*^9, 
   3.71113675816095*^9}},ExpressionUUID->"51c5b6f3-91cb-483a-bd81-\
ae4ae2125022"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Kappa]", "\[Rule]", 
    RowBox[{
     FractionBox["2", "3"], " ", 
     RowBox[{"(", 
      RowBox[{"2", "-", 
       FractionBox[
        RowBox[{"4", " ", 
         SuperscriptBox["2", 
          RowBox[{"2", "/", "3"}]]}], 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"13", "+", 
           RowBox[{"3", " ", 
            SqrtBox["33"]}]}], ")"}], 
         RowBox[{"1", "/", "3"}]]], "+", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"26", "+", 
          RowBox[{"6", " ", 
           SqrtBox["33"]}]}], ")"}], 
        RowBox[{"1", "/", "3"}]]}], ")"}]}]}], "}"}], "}"}]], "Output",
 CellChangeTimes->{{3.711136454390437*^9, 3.71113647557755*^9}, {
   3.7111365422987285`*^9, 3.711136558592854*^9}, 3.7111366258512955`*^9, 
   3.7111366646025257`*^9, 3.7111367016757326`*^9, {3.7111367418098927`*^9, 
   3.711136758522956*^9}},ExpressionUUID->"e12125a1-ea9a-4cc3-80b5-\
3dd965c788c8"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"{", 
   RowBox[{"\[Kappa]", "\[Rule]", "2.591195485044169`"}], "}"}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.711136454390437*^9, 3.71113647557755*^9}, {
   3.7111365422987285`*^9, 3.711136558592854*^9}, 3.7111366258512955`*^9, 
   3.7111366646025257`*^9, 3.7111367016757326`*^9, {3.7111367418098927`*^9, 
   3.711136758522956*^9}},ExpressionUUID->"605a560a-a875-4f77-8774-\
04e44dc9125d"]
}, Open  ]]
}, Closed]]
},
WindowSize->{1043, 696},
WindowMargins->{{Automatic, 48}, {Automatic, 0}},
Magnification:>0.75 Inherited,
FrontEndVersion->"12.3 for Mac OS X x86 (64-bit) (July 9, 2021)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"b8e7095c-1cf6-457c-a8e8-aa0664e099bf"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 945, 13, 51, "Section",ExpressionUUID->"81c13ed6-d7f9-48f0-b089-fd886af5a8ea"],
Cell[CellGroupData[{
Cell[1550, 39, 1480, 46, 90, "Input",ExpressionUUID->"f28e9365-2a11-4849-b9a3-62788d5f4b6c"],
Cell[3033, 87, 658, 19, 49, "Output",ExpressionUUID->"3638ca21-fa93-4f58-8c35-9c54d7633dee"],
Cell[3694, 108, 909, 28, 62, "Output",ExpressionUUID->"b05e7e1c-fca2-498c-80b0-cc49cda9be81"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[4652, 142, 950, 13, 41, "Section",ExpressionUUID->"74be91bc-28a9-4aa3-a5e5-7d13e7d0bc6f"],
Cell[5605, 157, 1304, 42, 209, "Input",ExpressionUUID->"2333d987-7c76-4312-93ce-7d46f737cd4b"],
Cell[CellGroupData[{
Cell[6934, 203, 363, 10, 37, "Input",ExpressionUUID->"f7d874b6-c9b8-419e-878f-d1dbc10358c2"],
Cell[7300, 215, 2477, 59, 176, "Output",ExpressionUUID->"70546341-c14c-430e-ad42-4bb1179f0718"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9814, 279, 2244, 71, 126, "Input",ExpressionUUID->"f6db6836-93c3-4bb8-9adb-6b2c744a3047"],
Cell[12061, 352, 3963, 83, 179, "Output",ExpressionUUID->"cd06eefa-809f-4254-94fb-724c2e58a6fa"],
Cell[16027, 437, 4258, 88, 179, "Output",ExpressionUUID->"d351b334-d49e-444a-aed7-5650ee969e8a"],
Cell[20288, 527, 130791, 2146, 213, "Output",ExpressionUUID->"25a8ad0e-2397-43fc-a82c-b5fc3fda21c6"],
Cell[151082, 2675, 119627, 1957, 163, "Output",ExpressionUUID->"b1e1f6be-4a53-44f5-a505-77517b6d9a20"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270746, 4637, 6795, 178, 288, "Input",ExpressionUUID->"5d596d22-19f7-4497-8cfe-3fcf312d46a7"],
Cell[277544, 4817, 2978, 65, 183, "Output",ExpressionUUID->"86bb7e35-b3ba-4077-b4e2-f2cedfda67a6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[280559, 4887, 12307, 277, 401, "Input",ExpressionUUID->"e2031879-133c-4b5a-a01e-aa8181506cec"],
Cell[292869, 5166, 3957, 80, 177, "Output",ExpressionUUID->"c9b47521-5541-4a41-b11c-673b718a922c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[296863, 5251, 16786, 394, 555, "Input",ExpressionUUID->"e1ff38a3-ef6b-4795-89ce-a4dfe9180325"],
Cell[313652, 5647, 2972, 65, 183, "Output",ExpressionUUID->"d772f66f-b6c2-466b-8572-10e36ab75e90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316661, 5717, 18332, 429, 547, "Input",ExpressionUUID->"d5545fbc-32b9-4d9d-9594-dd8a7b117d95"],
Cell[334996, 6148, 4140, 83, 183, "Output",ExpressionUUID->"22390e5b-7a1d-4063-b71a-d25b316d3fdc"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[339185, 6237, 1006, 14, 41, "Section",ExpressionUUID->"fe390dd2-8189-44b5-8830-9dd4374d43fb"],
Cell[CellGroupData[{
Cell[340216, 6255, 4105, 123, 159, "Input",ExpressionUUID->"c2843f72-29f8-44a3-9e02-1f2fe67cf338"],
Cell[344324, 6380, 2011, 59, 32, "Output",ExpressionUUID->"8bd92311-525b-455a-8986-105c166c981a"],
Cell[346338, 6441, 5276, 166, 74, "Output",ExpressionUUID->"406c14a1-ac95-407d-9777-7a07a0fc391f"]
}, Open  ]],
Cell[CellGroupData[{
Cell[351651, 6612, 5260, 161, 177, "Input",ExpressionUUID->"4c03f528-6fcb-45ef-aef5-657ded83518e"],
Cell[356914, 6775, 2538, 78, 52, "Output",ExpressionUUID->"a225218c-fa56-4b23-a0b6-09f2d4299dac"],
Cell[359455, 6855, 29693, 579, 180, "Output",ExpressionUUID->"9d24b885-ae11-4de6-a4fb-2deb44361424"],
Cell[389151, 7436, 2875, 88, 78, "Output",ExpressionUUID->"a901db01-3a0f-4de0-9395-9f5160343be3"],
Cell[392029, 7526, 432, 10, 27, "Output",ExpressionUUID->"a851604e-43f0-42f7-8b66-ec14459b6cdf"]
}, Open  ]],
Cell[CellGroupData[{
Cell[392498, 7541, 8396, 244, 204, "Input",ExpressionUUID->"b56495b6-c32e-4b4d-b88a-faf486799db6"],
Cell[400897, 7787, 4666, 133, 77, "Output",ExpressionUUID->"0c5c5dd0-f7fd-4218-85b5-a9ebbfb075b0"],
Cell[405566, 7922, 26119, 520, 180, "Output",ExpressionUUID->"51c5b6f3-91cb-483a-bd81-ae4ae2125022"],
Cell[431688, 8444, 989, 28, 52, "Output",ExpressionUUID->"e12125a1-ea9a-4cc3-80b5-3dd965c788c8"],
Cell[432680, 8474, 432, 9, 27, "Output",ExpressionUUID->"605a560a-a875-4f77-8774-04e44dc9125d"]
}, Open  ]]
}, Closed]]
}
]
*)

